<?php

/**
 * @file
 * Main file of the module.
 */

define("PUZZLER_CACHE_DURATION", 24*60*60); // Default caching period (if not set otherwise in settings or explicitly)
define("PUZZLER_FALLBACK_LANGUAGE", 'en'); // Fallback language (if none defined in node, or if not set otherwise in settings or explicitly)
define("PUZZLER_FALLBACK_API_ENDPOINT", 'https://@wplang.wikipedia.org/w/api.php'); // If no other endpoint specified, use this one. Indicate language code with '@wplang'.

/**
 * Load the necessary include files.
 */
module_load_include('inc', 'puzzler', 'puzzler');
module_load_include('inc', 'puzzler', 'puzzler_settings');
module_load_include('inc', 'puzzler', 'puzzler_cache');

/**
 * Menu for this module
 * @return array An array with this module's settings.
 */
function puzzler_menu() {
  $items = array();

  $items['admin/config/services/puzzler'] = array(
    'title' => 'Puzzler',
    'description' => 'Configure puzzler module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('puzzler_admin'),
    'access arguments' => array('administer puzzler'),
    //'type' => MENU_NORMAL_ITEM,  // Not necessary since this is the default.
    'weight' => 0,
  );

  // For the default local task, we need very little configuration, as the callback and other conditions are handled by the parent callback.
  $items['admin/config/services/puzzler/settings'] = array(
    'title' => 'Settings',
    //'description' => 'General settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );

  $items['admin/config/services/puzzler/dashboard'] = array(
    'title' => 'Dashboard',
    'description' => 'Information relevant to the Puzzler module activity on this site.',
    'page callback' => 'puzzler_dashboard',
    'access arguments' => array('administer puzzler'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  // A shortcut to the permissions settings for this module.
  $items['admin/config/services/puzzler/permissions'] = array(
    'title' => 'Permissions',
    'description' => 'Configure access permissions',
    'page callback' => 'puzzler_perms',
    'access arguments' => array('administer puzzler'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );

  return $items;
}

/**
 * Redirect to the module's permission settings. A callback from hook_menu().
 */
function puzzler_perms() {
  drupal_goto('admin/people/permissions', array('fragment' => 'module-puzzler'));
}

/**
 * Valid permissions for this module
 * @return array An array of valid permissions for the module
 */
function puzzler_permission() {
  return array(
    'administer puzzler' => array(
      'title' => t('Administer Puzzler'),
      'description' => t('Set roles that may access the settings of Puzzler.'),
    ),
  );
}

/**
 * Display help and module information
 * Implements hook_help().
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 * @return help text for the path
 */
function puzzler_help($path, $arg) {
  if ($path == 'admin/help#puzzler') {
    $output = file_get_contents(drupal_get_path('module', 'puzzler') . '/README.txt');
    return nl2br($output);
  }
}
