<?php

/**
 * @file
 * Handles Advanced Aggregation installation and upgrade tasks.
 */

/**
 * Implements hook_requirements().
 */
function advagg_font_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time.
  $t = get_t();

  // If not at runtime, return here.
  if ($phase !== 'runtime') {
    return $requirements;
  }

  // Get local and external fontfaceobserver version numbers.
  $package = drupal_http_request('https://cdn.rawgit.com/bramstein/fontfaceobserver/master/package.json', array('timeout' => 7));
  if (!empty($package->data)) {
    $package = json_decode($package->data);
  }
  else {
    unset($package);
    $package = new stdClass();
    $package->version = 0;
  }

  $lib_info = array();
  if (function_exists('libraries_info')) {
    $lib_info = libraries_detect('fontfaceobserver');
  }
  $config_path = advagg_admin_config_root_path();

  // See if module is on.
  if (variable_get('advagg_font_fontfaceobserver', ADVAGG_FONT_FONTFACEOBSERVER) == 0) {
    $requirements['advagg_font_not_on'] = array(
      'title' => $t('AdvAgg Font'),
      'severity' => REQUIREMENT_WARNING,
      'value' => $t('AdvAgg async font loading is disabled.'),
      'description' => $t('Go to the <a href="@settings">AdvAgg Async Font Loader settings page</a> and select an option other than disabled, or go to the <a href="@modules">modules page</a> and disable the "AdvAgg Async Font Loader" module.', array(
        '@settings' => url($config_path . '/advagg/font'),
        '@modules' => url('admin/modules', array(
          'fragment' => 'edit-modules-advanced-cssjs-aggregation',
        )),
      )),
    );
  }

  // See if locally hosted if not in dev mode.
  if (empty($lib_info)
    || (variable_get('advagg_font_fontfaceobserver', ADVAGG_FONT_FONTFACEOBSERVER) == 6
    && variable_get('advagg_cache_level', ADVAGG_CACHE_LEVEL) >= 0
    )
  ) {
    $requirements['advagg_font_rawgithub'] = array(
      'title' => $t('AdvAgg Font - Host locally'),
      'severity' => REQUIREMENT_WARNING,
      'value' => $t('The fontfaceobserver.js file should be local for better performance.'),
      'description' => empty($lib_info['version']) ?
        $t('Directions on how to install it can be found on the <a href="@url">Async Font Loader</a> settings page', array(
          '@url' => url($config_path . '/advagg/font'),
        )) :
        $t('Please go to the <a href="@url">Async Font Loader</a> settings page and choose inline or local.', array(
          '@url' => url($config_path . '/advagg/font'),
        )),
    );
  }

  // Check version.
  if (isset($lib_info['version'])
    && !empty($package->version)
    && version_compare($package->version, $lib_info['version']) >= 1
  ) {
    $requirements['advagg_font_old_library'] = array(
      'title' => $t('AdvAgg Font - Version is out of date'),
      'severity' => REQUIREMENT_WARNING,
      'value' => $t('Local version of font face observer is old'),
      'description' => $t('Please upgrade your current version (@local-ver) of <a href="@url">font face observer</a> to the latest (@remote-ver). The local copy of font face observer is located in the %dir directory', array(
        '@local-ver' => $lib_info['version'],
        '@remote-ver' => $package->version,
        '%dir' => $lib_info['library path'],
        '@url' => 'https://github.com/bramstein/fontfaceobserver',
      )),
    );
  }

  if (empty($requirements)) {
    $requirements['advagg_font'] = array(
      'title' => $t('AdvAgg Font'),
      'severity' => REQUIREMENT_OK,
      'value' => $t('OK'),
      'description' => empty($package->version) ? $t('The font face observer JavaScript should be working.') : $t('The font face observer JavaScript library is up to date (%version).', array('%version' => isset($lib_info['version']) ? $lib_info['version'] : $package->version)),
    );
  }

  return $requirements;
}
