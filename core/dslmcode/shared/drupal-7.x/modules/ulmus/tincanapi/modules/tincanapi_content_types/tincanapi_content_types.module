<?php

/**
 * @file
 * A Tin Can API module to handle content type tracking.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tincanapi_content_types_form_tincanapi_admin_form_alter(&$form, &$form_state, $form_id) {
  $form['content_types'] = array(
    '#type' => 'fieldset',
    '#title' => t('Content Types'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $content_types = node_type_get_types();
  $content_type_options = array();

  foreach ($content_types as $content_type) {
    $content_type_options[$content_type->type] = $content_type->name;
  }

  $form['content_types']['tincanapi_content_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Track content type views'),
    '#default_value' => variable_get('tincanapi_content_types', array()),
    '#options' => $content_type_options,
  );

  $entity_info = entity_get_info('node');
  $view_mode_options = array();

  foreach ($entity_info['view modes'] as $view_mode_name => $view_mode) {
    $view_mode_options[$view_mode_name] = $view_mode['label'];
  }

  $form['content_types']['tincanapi_content_types_view_modes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Track the selected content types in the following view modes.'),
    '#default_value' => variable_get('tincanapi_content_types_view_modes', array()),
    '#options' => $view_mode_options,
  );
}

/**
 * Implements hook_node_view().
 */
function tincanapi_content_types_node_view($node, $view_mode, $langcode) {
  $content_types = array_filter(variable_get('tincanapi_content_types', array()));
  $view_modes = array_filter(variable_get('tincanapi_content_types_view_modes', array()));

  if (in_array($node->type, $content_types) && in_array($view_mode, $view_modes) && !isset($_GET['no-track'])) {
    $data = tincanapi_content_types_data_from_node($node, $view_mode);
    tincanapi_track_data('content_types', $data);
  }
}

/**
 * Get a structured data array from a node.
 *
 * @param object $node
 *   A Drupal node object.
 *
 * @return array
 *   A structured data array.
 */
function tincanapi_content_types_data_from_node($node, $view_mode = '') {
  global $base_url;

  $content_type = node_type_load($node->type);

  $data = array();

  $data['verb'] = tincanapi_get_verb('viewed');
  $data['object'] = tincanapi_get_object('node', $node);

  $data['object']['definition']['name']['en-US'] = trim($content_type->name . ': ' . $data['object']['definition']['name']['en-US']);
  $data['object']['definition']['type'] = TINCANAPI_CUSTOM_URI . '/content/type/' . $node->type;

  $data['storage']['node'] = $node;
  $data['storage']['view_mode'] = $view_mode;

  // Add organic group (class) information.
  if (isset($node->og_group_ref)) {
    $og_group_values = field_get_items('node', $node, 'og_group_ref');
    $group_nid = $og_group_values[0]['target_id'];

    $group_node = node_load($group_nid);
    if ($group_node) {
      $group = array(
        'id' => $base_url . '/node/' . $group_node->nid,
        'definition' => array('name' => array('en-US' => $group_node->title)),
        'objectType' => 'Activity',
      );

      $data['context']['contextActivities']['grouping'] = $group;
    }
  }

  return $data;
}
