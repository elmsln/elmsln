<?php

/**
 * @file
 * A Tin Can API module to handle link tracking.
 */

/**
 * Implements hook_page_build().
 */
function tincanapi_links_page_build(&$page) {
  // Settings.
  $settings = array(
    'tincanapi_links' => array(
      'external' => (variable_get('tincanapi_links_external') ? TRUE : FALSE),
    ),
  );

  if (variable_get('tincanapi_links_extensions')) {
    $extensions = explode(',', variable_get('tincanapi_links_extensions'));
    $settings['tincanapi_links']['extensions'] = $extensions;
  }
  else {
    $settings['tincanapi_links']['extensions'] = FALSE;
  }

  drupal_add_js($settings, 'setting');

  // Click Handler.
  $module_path = drupal_get_path('module', 'tincanapi_links');
  drupal_add_js($module_path . '/js/tincanapi_links.js');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function tincanapi_links_form_tincanapi_admin_form_alter(&$form, &$form_state, $form_id) {
  $form['links'] = array(
    '#type' => 'fieldset',
    '#title' => t('Link Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['links']['tincanapi_links_external'] = array(
    '#type' => 'checkbox',
    '#title' => t('Track external links.'),
    '#default_value' => variable_get('tincanapi_links_external'),
  );

  $form['links']['tincanapi_links_extensions'] = array(
    '#type' => 'textfield',
    '#title' => t('Track file extensions'),
    '#description' => t('Comma separated list of extensions.  Example: pdf,docx,xlsx'),
    '#default_value' => variable_get('tincanapi_links_extensions', ''),
  );
}

/**
 * Implements hook_tincanapi_ajax_data_alter().
 */
function tincanapi_links_tincanapi_ajax_data_alter($module_name, &$data, $context) {
  global $base_url;

  if ('links' == $module_name && isset($context['referrer']) && isset($context['id'])) {
    $parent = array(
      'id' => $context['referrer'],
      'objectType' => 'Activity',
    );

    $data['verb'] = tincanapi_get_verb($context['verb']);
    $data['object']['id'] = $context['id'];
    $data['object']['definition']['name']['en-US'] = trim($context['title']);
    $data['context']['contextActivities']['parent'] = $parent;
  }

  // Add organic group (class) information.
  if ('links' == $module_name && isset($context['referrer'])) {
    $parent = substr($context['referrer'], strrpos($context['referrer'], "/") + 1);
    $parent = node_load($parent);

    if (isset($parent->og_group_ref)) {
      $og_group_values = field_get_items('node', $parent, 'og_group_ref');
      $group_nid = $og_group_values[0]['target_id'];

      $group_node = node_load($group_nid);
      if ($group_node) {
        $group = array(
          'id' => $base_url . '/node/' . $group_node->nid,
          'definition' => array('name' => array('en-US' => $group_node->title)),
          'objectType' => 'Activity',
        );

        $data['context']['contextActivities']['grouping'] = $group;
      }
    }
  }
}
