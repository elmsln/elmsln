<?php
/**
 * @file
 * Code for the ELMSLN Bakery feature.
 */

/**
 * Implements hook_page_delivery_callback_alter().
 */
function elmsln_bakery_page_delivery_callback_alter(&$callback, $set = FALSE) {
  // switch this page delivery callback so we can better act on it
  // this is an obscure method that helps reduce the chances of
  // incorrectly issuing an access denied message.  This appears
  // to potentially even be browser / server interpretation
  // driven so we need this to help clean up those nagging issues.
  // A common issue this avoids is a logged in user on a bakery
  // site with public access being given access denied when they
  // have logged into another system with bakery SSO but not this one
  if ($callback == 'drupal_deliver_html_page' || $callback == 'boost_deliver_html_page') {
    $callback = 'elmsln_bakery_deliver_html_page';
  }
}

/**
 * Callback for bakery to handle page delivery.
 */
function elmsln_bakery_deliver_html_page($page_callback_result) {
  // bail early on these things
  // test a series of cases when we should basically skip everything
  // see if we are getting access denied about to be issued
  // on a bakery slave domain and are not currently logged in.
  if ($GLOBALS['user']->uid == 0 && is_int($page_callback_result) && $page_callback_result == MENU_ACCESS_DENIED && !variable_get('bakery_is_master', 0)) {
    // do nothing, let the page go through if these cases match
    // because they are anonymous by design
    if (drupal_is_cli() || arg(0) == 'httprl_async_function_callback' || strpos(request_uri(), 'files/advagg_css/css') != 0 || strpos(request_uri(), 'files/advagg_js/js') != 0) {
    }
    else {
      // redirect to the user page which will auto login if bakery is detected
      // this also ensures a cleaner user experience if not logged in anywhere yet
      drupal_goto('user');
    }
  }
  // allow for boost to take us to the right place
  // boost has methods for helping handle this edge case and
  // is a commonly installed project
  if (module_exists('boost')) {
    boost_deliver_html_page($page_callback_result);
  }
  else {
    // Call original function which drupal will handle by default methods
    drupal_deliver_html_page($page_callback_result);
  }
}


/**
 * Implements hook_cis_service_instance_options_alter().
 */
function elmsln_bakery_cis_service_instance_options_alter(&$options, $course, $service) {
  // Ensure that if CIS has bakery installed that everything down from it does too
  $options['en'][] = 'elmsln_bakery';
}
