define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/elements/custom-style.js", "./vaadin-text-field.js", "../../../@polymer/polymer/lib/elements/dom-module.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _polymerElement, _customStyle, _vaadinTextField, _domModule, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.PasswordFieldElement = void 0;

  var _templateObject_041611608e0111ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var $_documentContainer = (0, _htmlTag.html)(_templateObject_041611608e0111ed99ce491205e67b1d || (_templateObject_041611608e0111ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["<custom-style>\n  <style>\n    @font-face {\n      font-family: 'vaadin-password-field-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style><dom-module id=\"vaadin-password-field-template\">\n  <template>\n    <style>\n      /* Hide the native eye icon for IE/Edge */\n      ::-ms-reveal {\n        display: none;\n      }\n\n      [part=\"reveal-button\"][hidden] {\n        display: none !important;\n      }\n    </style>\n\n    <div part=\"reveal-button\" on-mousedown=\"_revealButtonMouseDown\" on-touchend=\"_togglePasswordVisibilityTouchend\" on-click=\"_togglePasswordVisibility\" hidden$=\"[[revealButtonHidden]]\">\n    </div>\n  </template>\n  \n</dom-module>"], ["<custom-style>\n  <style>\n    @font-face {\n      font-family: 'vaadin-password-field-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n</custom-style><dom-module id=\"vaadin-password-field-template\">\n  <template>\n    <style>\n      /* Hide the native eye icon for IE/Edge */\n      ::-ms-reveal {\n        display: none;\n      }\n\n      [part=\"reveal-button\"][hidden] {\n        display: none !important;\n      }\n    </style>\n\n    <div part=\"reveal-button\" on-mousedown=\"_revealButtonMouseDown\" on-touchend=\"_togglePasswordVisibilityTouchend\" on-click=\"_togglePasswordVisibility\" hidden\\$=\"[[revealButtonHidden]]\">\n    </div>\n  </template>\n  \n</dom-module>"])));
  document.head.appendChild($_documentContainer.content);
  var memoizedTemplate;
  /**
   * `<vaadin-password-field>` is a Web Component for password field control in forms.
   *
   * ```html
   * <vaadin-password-field label="Password">
   * </vaadin-password-field>
   * ```
   *
   * ### Styling
   *
   * See vaadin-text-field.html for the styling documentation
   *
   * In addition to vaadin-text-field parts, here's the list of vaadin-password-field specific parts
   *
   * Part name       | Description
   * ----------------|----------------------------------------------------
   * `reveal-button` | The eye icon which toggles the password visibility
   *
   * In addition to vaadin-text-field state attributes, here's the list of vaadin-password-field specific attributes
   *
   * Attribute    | Description | Part name
   * -------------|-------------|------------
   * `password-visible` | Set when the password is visible | :host
   *
   * See [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)
   *
   * @extends TextFieldElement
   * @demo demo/index.html
   */

  var PasswordFieldElement = /*#__PURE__*/function (_TextFieldElement) {
    babelHelpers.inherits(PasswordFieldElement, _TextFieldElement);

    var _super = _createSuper(PasswordFieldElement);

    function PasswordFieldElement() {
      babelHelpers.classCallCheck(this, PasswordFieldElement);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(PasswordFieldElement, [{
      key: "ready",
      value:
      /** @protected */
      function ready() {
        var _this = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(PasswordFieldElement.prototype), "ready", this).call(this);
        this.inputElement.type = 'password';
        this.inputElement.autocapitalize = 'off';
        this.addEventListener('focusout', function () {
          if (!_this._passwordVisibilityChanging) {
            _this._setPasswordVisible(false);

            if (_this._cachedChangeEvent) {
              _this._onChange(_this._cachedChangeEvent);
            }
          }
        });
      }
      /**
       * @param {!Event} e
       * @protected
       */

    }, {
      key: "_onChange",
      value: function _onChange(e) {
        var slotted = this.querySelector("".concat(this._slottedTagName, "[slot=\"").concat(this._slottedTagName, "\"]"));

        if (slotted) {
          e.stopPropagation();
        }

        if (this._passwordVisibilityChanging) {
          this._cachedChangeEvent = e;
        } else {
          this._cachedChangeEvent = null;
          babelHelpers.get(babelHelpers.getPrototypeOf(PasswordFieldElement.prototype), "_onChange", this).call(this, e);
        }
      }
      /** @private */

    }, {
      key: "_revealButtonMouseDown",
      value: function _revealButtonMouseDown(e) {
        if (this.hasAttribute('focused')) {
          e.preventDefault();
        }
      }
      /** @private */

    }, {
      key: "_togglePasswordVisibilityTouchend",
      value: function _togglePasswordVisibilityTouchend(e) {
        // Cancel the following click event
        e.preventDefault();

        this._togglePasswordVisibility();

        this.inputElement.focus();
      }
      /** @private */

    }, {
      key: "_togglePasswordVisibility",
      value: function _togglePasswordVisibility() {
        this._passwordVisibilityChanging = true;
        this.inputElement.blur();

        this._setPasswordVisible(!this.passwordVisible);

        this.inputElement.focus();
        this._passwordVisibilityChanging = false;
      }
      /** @private */

    }, {
      key: "_passwordVisibleChange",
      value: function _passwordVisibleChange(passwordVisible) {
        this.inputElement.type = passwordVisible ? 'text' : 'password';
      }
    }], [{
      key: "is",
      get: function get() {
        return 'vaadin-password-field';
      }
    }, {
      key: "version",
      get: function get() {
        return '2.9.2';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Set to true to hide the eye icon which toggles the password visibility.
           * @attr {boolean} reveal-button-hidden
           * @type {boolean}
           */
          revealButtonHidden: {
            type: Boolean,
            value: false
          },

          /**
           * True if the password is visible ([type=text]).
           * @attr {boolean} password-visible
           * @type {boolean}
           */
          passwordVisible: {
            type: Boolean,
            value: false,
            reflectToAttribute: true,
            observer: '_passwordVisibleChange',
            readOnly: true
          }
        };
      }
    }, {
      key: "template",
      get: function get() {
        if (!memoizedTemplate) {
          // Clone the superclass template
          memoizedTemplate = babelHelpers.get(babelHelpers.getPrototypeOf(PasswordFieldElement), "template", this).cloneNode(true); // Retrieve this element's dom-module template

          var thisTemplate = _domModule.DomModule.import(this.is + '-template', 'template');

          var revealButton = thisTemplate.content.querySelector('[part="reveal-button"]');
          var styles = thisTemplate.content.querySelector('style'); // Append reveal-button and styles to the text-field template

          var inputField = memoizedTemplate.content.querySelector('[part="input-field"]');
          inputField.appendChild(revealButton);
          memoizedTemplate.content.appendChild(styles);
        }

        return memoizedTemplate;
      }
    }]);
    return PasswordFieldElement;
  }(_vaadinTextField.TextFieldElement);

  _exports.PasswordFieldElement = PasswordFieldElement;
  customElements.define(PasswordFieldElement.is, PasswordFieldElement);
});