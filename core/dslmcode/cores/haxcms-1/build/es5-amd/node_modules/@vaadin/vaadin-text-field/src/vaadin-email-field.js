define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/elements/custom-style.js", "./vaadin-text-field.js", "../../../@polymer/polymer/lib/elements/dom-module.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _polymerElement, _customStyle, _vaadinTextField, _domModule, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EmailFieldElement = void 0;

  var _templateObject_0408a3e08e0111ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var $_documentContainer = (0, _htmlTag.html)(_templateObject_0408a3e08e0111ed99ce491205e67b1d || (_templateObject_0408a3e08e0111ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["<dom-module id=\"vaadin-email-field-template\">\n  <template>\n    <style>\n      :host([dir=\"rtl\"]) [part=\"input-field\"] {\n        direction: ltr;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]::placeholder {\n        direction: rtl;\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input)::placeholder {\n        direction: rtl;\n        text-align: left;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"value\"]:-ms-input-placeholder,\n      :host([dir=\"rtl\"]) [part=\"input-field\"] ::slotted(input):-ms-input-placeholder {\n        direction: rtl;\n        text-align: left;\n      }\n    </style>\n  </template>\n  \n</dom-module>"])));
  document.head.appendChild($_documentContainer.content);
  var memoizedTemplate;
  /**
   * `<vaadin-email-field>` is a Web Component for email field control in forms.
   *
   * ```html
   * <vaadin-email-field label="Email">
   * </vaadin-email-field>
   * ```
   *
   * ### Styling
   *
   * See vaadin-text-field.html for the styling documentation
   *
   * See [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)
   *
   * @extends TextFieldElement
   * @demo demo/index.html
   */

  var EmailFieldElement = /*#__PURE__*/function (_TextFieldElement) {
    babelHelpers.inherits(EmailFieldElement, _TextFieldElement);

    var _super = _createSuper(EmailFieldElement);

    function EmailFieldElement() {
      babelHelpers.classCallCheck(this, EmailFieldElement);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(EmailFieldElement, [{
      key: "ready",
      value:
      /** @protected */
      function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(EmailFieldElement.prototype), "ready", this).call(this);
        this.inputElement.type = 'email';
        this.inputElement.autocapitalize = 'off';
      }
      /** @protected */

    }, {
      key: "_createConstraintsObserver",
      value: function _createConstraintsObserver() {
        // NOTE: pattern needs to be set before constraints observer is initialized
        this.pattern = this.pattern || '^([a-zA-Z0-9_\\.\\-+])+@[a-zA-Z0-9-.]+\\.[a-zA-Z0-9-]{2,}$';
        babelHelpers.get(babelHelpers.getPrototypeOf(EmailFieldElement.prototype), "_createConstraintsObserver", this).call(this);
      }
    }], [{
      key: "is",
      get: function get() {
        return 'vaadin-email-field';
      }
    }, {
      key: "version",
      get: function get() {
        return '2.9.2';
      }
    }, {
      key: "template",
      get: function get() {
        if (!memoizedTemplate) {
          // Clone the superclass template
          memoizedTemplate = babelHelpers.get(babelHelpers.getPrototypeOf(EmailFieldElement), "template", this).cloneNode(true); // Retrieve this element's dom-module template

          var thisTemplate = _domModule.DomModule.import(this.is + '-template', 'template');

          var styles = thisTemplate.content.querySelector('style'); // Add the and styles to the text-field template

          memoizedTemplate.content.appendChild(styles);
        }

        return memoizedTemplate;
      }
    }]);
    return EmailFieldElement;
  }(_vaadinTextField.TextFieldElement);

  _exports.EmailFieldElement = EmailFieldElement;
  customElements.define(EmailFieldElement.is, EmailFieldElement);
});