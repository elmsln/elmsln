define(["exports", "./vaadin-grid-column.js", "./vaadin-grid-filter.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _vaadinGridColumn, _vaadinGridFilter, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GridFilterColumnElement = void 0;

  var _templateObject_03971d608e0111ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `<vaadin-grid-filter-column>` is a helper element for the `<vaadin-grid>`
   * that provides default header template and functionality for filtering.
   *
   * #### Example:
   * ```html
   * <vaadin-grid items="[[items]]">
   *  <vaadin-grid-filter-column path="name.first"></vaadin-grid-filter-column>
   *
   *  <vaadin-grid-column>
   *    ...
   * ```
   *
   */
  var GridFilterColumnElement = /*#__PURE__*/function (_GridColumnElement) {
    babelHelpers.inherits(GridFilterColumnElement, _GridColumnElement);

    var _super = _createSuper(GridFilterColumnElement);

    function GridFilterColumnElement() {
      babelHelpers.classCallCheck(this, GridFilterColumnElement);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(GridFilterColumnElement, [{
      key: "_prepareHeaderTemplate",
      value:
      /** @private */
      function _prepareHeaderTemplate() {
        var headerTemplate = this._prepareTemplatizer(this.$.headerTemplate); // needed to override the dataHost correctly in case internal template is used.


        headerTemplate.templatizer.dataHost = this;
        return headerTemplate;
      }
      /** @private */

    }, {
      key: "_getHeader",
      value: function _getHeader(header, path) {
        return header || this._generateHeader(path);
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _htmlTag.html)(_templateObject_03971d608e0111ed99ce491205e67b1d || (_templateObject_03971d608e0111ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <template class=\"header\" id=\"headerTemplate\">\n      <vaadin-grid-filter path=\"[[path]]\" value=\"[[_filterValue]]\">\n        <vaadin-text-field theme=\"small\" focus-target=\"\" style=\"max-width: 100%;\" slot=\"filter\" value=\"{{_filterValue}}\" label=\"[[_getHeader(header, path)]]\"></vaadin-text-field>\n      </vaadin-grid-filter>\n    </template>\n"])));
      }
    }, {
      key: "is",
      get: function get() {
        return 'vaadin-grid-filter-column';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * JS Path of the property in the item used for filtering the data.
           */
          path: String,

          /**
           * Text to display as the label of the column filter text-field.
           */
          header: String
        };
      }
    }]);
    return GridFilterColumnElement;
  }(_vaadinGridColumn.GridColumnElement);

  _exports.GridFilterColumnElement = GridFilterColumnElement;
  customElements.define(GridFilterColumnElement.is, GridFilterColumnElement);
});