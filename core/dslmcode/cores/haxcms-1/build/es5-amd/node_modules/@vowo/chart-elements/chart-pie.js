define(["./chart-styles.js", "../../@polymer/polymer/polymer-element.js", "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js", "../../@polymer/polymer/lib/legacy/class.js", "./resize-behavior.js", "./context-behavior.js", "./chart-property-behavior.js"], function (_chartStyles, _polymerElement, _ironResizableBehavior, _class, _resizeBehavior, _contextBehavior, _chartPropertyBehavior) {
  "use strict";

  var _templateObject_5ff51070809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var ChartPie = /*#__PURE__*/function (_ChartResizeBehavior) {
    babelHelpers.inherits(ChartPie, _ChartResizeBehavior);

    var _super = _createSuper(ChartPie);

    function ChartPie() {
      babelHelpers.classCallCheck(this, ChartPie);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(ChartPie, [{
      key: "ready",
      value: function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(ChartPie.prototype), "ready", this).call(this);

        this._setType('pie');
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_5ff51070809211edaa2833647dc78c6c || (_templateObject_5ff51070809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style include=\"chart-styles\"></style>\n\n    <div>\n      <canvas id=\"canvas\"></canvas>\n    </div>\n"])));
      }
    }, {
      key: "is",
      get: function get() {
        return 'chart-pie';
      }
    }]);
    return ChartPie;
  }((0, _resizeBehavior.ChartResizeBehavior)((0, _contextBehavior.ChartContextBehavior)((0, _chartPropertyBehavior.ChartPropertyBehavior)((0, _class.mixinBehaviors)([_ironResizableBehavior.IronResizableBehavior], _polymerElement.PolymerElement)))));

  window.customElements.define(ChartPie.is, ChartPie);
});