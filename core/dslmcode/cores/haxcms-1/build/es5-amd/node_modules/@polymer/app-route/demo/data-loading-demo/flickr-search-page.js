define(["../../../polymer/polymer-legacy.js", "../../../paper-spinner/paper-spinner.js", "../../../paper-input/paper-input.js", "../../app-route.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js"], function (_polymerLegacy, _paperSpinner, _paperInput, _appRoute, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_5ce20410809211edaa2833647dc78c6c;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_5ce20410809211edaa2833647dc78c6c || (_templateObject_5ce20410809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      paper-spinner {\n        display: block;\n      }\n      img {\n        max-width: 200px;\n        max-height: 200px;\n      }\n    </style>\n    <app-route pattern=\"/\" route=\"{{route}}\" query-params=\"{{queryParams}}\" active=\"{{active}}\">\n    </app-route>\n    <paper-input autofocus label=\"Search the public domain on Flickr\" value=\"{{queryParams.search}}\">\n    </paper-input>\n\n    <iron-ajax auto url=\"https://www.flickr.com/services/rest/\" handle-as=\"json\" debounce-duration=\"300\" params=\"{{params}}\" last-response=\"{{response}}\" last-error=\"{{error}}\" loading=\"{{loading}}\">\n    </iron-ajax>\n    <paper-spinner active=\"{{loading}}\"></paper-spinner>\n    <template is=\"dom-repeat\" items=\"{{response.photos.photo}}\" as=\"photo\">\n      <a href=\"{{_computeLink(photo)}}\">\n        <img src=\"{{_computeSrc(photo)}}\">\n      </a>\n    </template>\n    <template is=\"dom-if\" if=\"{{error}}\">\n      <span>{{error.statusCode}}</span> Error:\n      <pre>{{error.response}}</pre>\n    </template>\n"]))),
    is: 'flickr-search-page',
    properties: {
      apiKey: {
        type: String
      },
      params: {
        type: Object,
        computed: '_computeParams(apiKey, queryParams.search)'
      },
      route: {
        type: Object
      }
    },
    observers: ['_clearOldSearchResults(queryParams.search)', '_setDefaultSearch(active)'],
    _clearOldSearchResults: function _clearOldSearchResults() {
      this.response = null;
    },
    _computeParams: function _computeParams(apiKey, search) {
      return {
        method: 'flickr.photos.search',
        api_key: apiKey,
        text: search,
        license: '7,8',
        format: 'json',
        nojsoncallback: 1
      };
    },
    _computeSrc: function _computeSrc(photo) {
      if (!photo || !photo.farm) {
        return '';
      }

      return 'https://farm' + photo.farm + '.staticflickr.com/' + photo.server + '/' + photo.id + '_' + photo.secret + '.jpg';
    },
    _computeLink: function _computeLink(photo) {
      return window.location.pathname + '#/image/' + photo.farm + '/' + photo.server + '/' + photo.id + '/' + photo.secret;
    },
    _setDefaultSearch: function _setDefaultSearch(active) {
      if (active && !this.queryParams.search) {
        this.set('queryParams.search', 'spaceship');
      }
    }
  });
});