define(["../polymer/polymer-legacy.js", "../iron-flex-layout/iron-flex-layout.js", "../iron-image/iron-image.js", "../paper-styles/element-styles/paper-material-styles.js", "../paper-styles/default-theme.js", "../polymer/lib/legacy/polymer-fn.js", "../polymer/lib/utils/html-tag.js"], function (_polymerLegacy, _ironFlexLayout, _ironImage, _paperMaterialStyles, _defaultTheme, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_90a43c208e0011ed99ce491205e67b1d;

  /**
  Material design:
  [Cards](https://www.google.com/design/spec/components/cards.html)
  
  `paper-card` is a container with a drop shadow.
  
  Example:
  
      <paper-card heading="Card Title">
        <div class="card-content">Some content</div>
        <div class="card-actions">
          <paper-button>Some action</paper-button>
        </div>
      </paper-card>
  
  Example - top card image:
  
      <paper-card heading="Card Title" image="/path/to/image.png" alt="image">
        ...
      </paper-card>
  
  ### Accessibility
  
  By default, the `aria-label` will be set to the value of the `heading`
  attribute.
  
  ### Styling
  
  The following custom properties and mixins are available for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--paper-card-background-color` | The background color of the card | `--primary-background-color`
  `--paper-card-header-color` | The color of the header text | `#000`
  `--paper-card-header` | Mixin applied to the card header section | `{}`
  `--paper-card-header-text` | Mixin applied to the title in the card header section | `{}`
  `--paper-card-header-image` | Mixin applied to the image in the card header section | `{}`
  `--paper-card-header-image-text` | Mixin applied to the text overlapping the image in the card header section | `{}`
  `--paper-card-content` | Mixin applied to the card content section| `{}`
  `--paper-card-actions` | Mixin applied to the card action section | `{}`
  `--paper-card` | Mixin applied to the card | `{}`
  
  @group Paper Elements
  @element paper-card
  @demo demo/index.html
  */
  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_90a43c208e0011ed99ce491205e67b1d || (_templateObject_90a43c208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style include=\"paper-material-styles\">\n      :host {\n        display: inline-block;\n        position: relative;\n        box-sizing: border-box;\n        background-color: var(--paper-card-background-color, var(--primary-background-color));\n        border-radius: 2px;\n\n        @apply --paper-font-common-base;\n        @apply --paper-card;\n      }\n\n      /* IE 10 support for HTML5 hidden attr */\n      :host([hidden]), [hidden] {\n        display: none !important;\n      }\n\n      .header {\n        position: relative;\n        border-top-left-radius: inherit;\n        border-top-right-radius: inherit;\n        overflow: hidden;\n\n        @apply --paper-card-header;\n      }\n\n      .header iron-image {\n        display: block;\n        width: 100%;\n        --iron-image-width: 100%;\n        pointer-events: none;\n\n        @apply --paper-card-header-image;\n      }\n\n      .header .title-text {\n        padding: 16px;\n        font-size: 24px;\n        font-weight: 400;\n        color: var(--paper-card-header-color, #000);\n\n        @apply --paper-card-header-text;\n      }\n\n      .header .title-text.over-image {\n        position: absolute;\n        bottom: 0px;\n\n        @apply --paper-card-header-image-text;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n        position:relative;\n\n        @apply --paper-card-content;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n        position:relative;\n\n        @apply --paper-card-actions;\n      }\n\n      :host([elevation=\"1\"]) {\n        @apply --paper-material-elevation-1;\n      }\n\n      :host([elevation=\"2\"]) {\n        @apply --paper-material-elevation-2;\n      }\n\n      :host([elevation=\"3\"]) {\n        @apply --paper-material-elevation-3;\n      }\n\n      :host([elevation=\"4\"]) {\n        @apply --paper-material-elevation-4;\n      }\n\n      :host([elevation=\"5\"]) {\n        @apply --paper-material-elevation-5;\n      }\n    </style>\n\n    <div class=\"header\">\n      <iron-image hidden$=\"[[!image]]\" aria-hidden$=\"[[_isHidden(image)]]\" src=\"[[image]]\" alt=\"[[alt]]\" placeholder=\"[[placeholderImage]]\" preload=\"[[preloadImage]]\" fade=\"[[fadeImage]]\"></iron-image>\n      <div hidden$=\"[[!heading]]\" class$=\"title-text [[_computeHeadingClass(image)]]\">[[heading]]</div>\n    </div>\n\n    <slot></slot>\n"], ["\n    <style include=\"paper-material-styles\">\n      :host {\n        display: inline-block;\n        position: relative;\n        box-sizing: border-box;\n        background-color: var(--paper-card-background-color, var(--primary-background-color));\n        border-radius: 2px;\n\n        @apply --paper-font-common-base;\n        @apply --paper-card;\n      }\n\n      /* IE 10 support for HTML5 hidden attr */\n      :host([hidden]), [hidden] {\n        display: none !important;\n      }\n\n      .header {\n        position: relative;\n        border-top-left-radius: inherit;\n        border-top-right-radius: inherit;\n        overflow: hidden;\n\n        @apply --paper-card-header;\n      }\n\n      .header iron-image {\n        display: block;\n        width: 100%;\n        --iron-image-width: 100%;\n        pointer-events: none;\n\n        @apply --paper-card-header-image;\n      }\n\n      .header .title-text {\n        padding: 16px;\n        font-size: 24px;\n        font-weight: 400;\n        color: var(--paper-card-header-color, #000);\n\n        @apply --paper-card-header-text;\n      }\n\n      .header .title-text.over-image {\n        position: absolute;\n        bottom: 0px;\n\n        @apply --paper-card-header-image-text;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n        position:relative;\n\n        @apply --paper-card-content;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n        position:relative;\n\n        @apply --paper-card-actions;\n      }\n\n      :host([elevation=\"1\"]) {\n        @apply --paper-material-elevation-1;\n      }\n\n      :host([elevation=\"2\"]) {\n        @apply --paper-material-elevation-2;\n      }\n\n      :host([elevation=\"3\"]) {\n        @apply --paper-material-elevation-3;\n      }\n\n      :host([elevation=\"4\"]) {\n        @apply --paper-material-elevation-4;\n      }\n\n      :host([elevation=\"5\"]) {\n        @apply --paper-material-elevation-5;\n      }\n    </style>\n\n    <div class=\"header\">\n      <iron-image hidden\\$=\"[[!image]]\" aria-hidden\\$=\"[[_isHidden(image)]]\" src=\"[[image]]\" alt=\"[[alt]]\" placeholder=\"[[placeholderImage]]\" preload=\"[[preloadImage]]\" fade=\"[[fadeImage]]\"></iron-image>\n      <div hidden\\$=\"[[!heading]]\" class\\$=\"title-text [[_computeHeadingClass(image)]]\">[[heading]]</div>\n    </div>\n\n    <slot></slot>\n"]))),
    is: 'paper-card',
    properties: {
      /**
       * The title of the card.
       */
      heading: {
        type: String,
        value: '',
        observer: '_headingChanged'
      },

      /**
       * The url of the title image of the card.
       */
      image: {
        type: String,
        value: ''
      },

      /**
       * The text alternative of the card's title image.
       */
      alt: {
        type: String
      },

      /**
       * When `true`, any change to the image url property will cause the
       * `placeholder` image to be shown until the image is fully rendered.
       */
      preloadImage: {
        type: Boolean,
        value: false
      },

      /**
       * When `preloadImage` is true, setting `fadeImage` to true will cause the
       * image to fade into place.
       */
      fadeImage: {
        type: Boolean,
        value: false
      },

      /**
       * This image will be used as a background/placeholder until the src image
       * has loaded. Use of a data-URI for placeholder is encouraged for instant
       * rendering.
       */
      placeholderImage: {
        type: String,
        value: null
      },

      /**
       * The z-depth of the card, from 0-5.
       */
      elevation: {
        type: Number,
        value: 1,
        reflectToAttribute: true
      },

      /**
       * Set this to true to animate the card shadow when setting a new
       * `z` value.
       */
      animatedShadow: {
        type: Boolean,
        value: false
      },

      /**
       * Read-only property used to pass down the `animatedShadow` value to
       * the underlying paper-material style (since they have different names).
       */
      animated: {
        type: Boolean,
        reflectToAttribute: true,
        readOnly: true,
        computed: '_computeAnimated(animatedShadow)'
      }
    },

    /**
     * Format function for aria-hidden. Use the ! operator results in the
     * empty string when given a falsy value.
     */
    _isHidden: function _isHidden(image) {
      return image ? 'false' : 'true';
    },
    _headingChanged: function _headingChanged(heading) {
      var currentHeading = this.getAttribute('heading'),
          currentLabel = this.getAttribute('aria-label');

      if (typeof currentLabel !== 'string' || currentLabel === currentHeading) {
        this.setAttribute('aria-label', heading);
      }
    },
    _computeHeadingClass: function _computeHeadingClass(image) {
      return image ? ' over-image' : '';
    },
    _computeAnimated: function _computeAnimated(animatedShadow) {
      return animatedShadow;
    }
  });
});