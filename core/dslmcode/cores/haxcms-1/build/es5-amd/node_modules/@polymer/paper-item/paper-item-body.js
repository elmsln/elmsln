define(["../polymer/polymer-legacy.js", "../iron-flex-layout/iron-flex-layout.js", "../paper-styles/default-theme.js", "../paper-styles/typography.js", "../polymer/lib/legacy/polymer-fn.js", "../polymer/lib/utils/html-tag.js"], function (_polymerLegacy, _ironFlexLayout, _defaultTheme, _typography, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_557c8d80809211edaa2833647dc78c6c;

  /*
  Use `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-
  or three- line items. It is a flex item that is a vertical flexbox.
  
      <paper-item>
        <paper-item-body two-line>
          <div>Show your status</div>
          <div secondary>Your status is visible to everyone</div>
        </paper-item-body>
      </paper-item>
  
  The child elements with the `secondary` attribute is given secondary text
  styling.
  
  ### Styling
  
  The following custom properties and mixins are available for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`
  `--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`
  `--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`
  `--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`
  
  */
  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_557c8d80809211edaa2833647dc78c6c || (_templateObject_557c8d80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n"]))),
    is: 'paper-item-body'
  });
});