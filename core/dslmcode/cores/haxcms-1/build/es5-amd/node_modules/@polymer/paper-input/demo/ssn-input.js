define(["../../polymer/polymer-legacy.js", "../../iron-input/iron-input.js", "../../iron-flex-layout/iron-flex-layout.js", "./ssn-validator.js", "../../iron-validatable-behavior/iron-validatable-behavior.js", "../../polymer/lib/elements/dom-module.js", "../../polymer/lib/legacy/polymer-fn.js", "../../polymer/lib/utils/html-tag.js", "../../polymer/polymer-element.js"], function (_polymerLegacy, _ironInput, _ironFlexLayout, _ssnValidator, _ironValidatableBehavior, _domModule, _polymerFn, _htmlTag, _polymerElement) {
  "use strict";

  var _templateObject_5b6f8850809211edaa2833647dc78c6c;

  (0, _polymerFn.Polymer)({
    is: 'ssn-input',
    _template: (0, _htmlTag.html)(_templateObject_5b6f8850809211edaa2833647dc78c6c || (_templateObject_5b6f8850809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      input {\n        font: inherit;\n        outline: none;\n        box-shadow: none;\n        border: none;\n        width: auto;\n        text-align: center;\n      }\n\n      .container {\n        @apply --layout-horizontal;\n      }\n    </style>\n\n    <ssn-validator></ssn-validator>\n    <div class=\"container\">\n      <iron-input bind-value=\"{{_ssn1}}\" aria-label=\"First 3 digits of social security number\">\n        <input maxlength=\"3\" size=\"3\">\n      </iron-input>\n      -\n      <iron-input bind-value=\"{{_ssn2}}\" aria-label=\"Middle 2 digits of social security number\">\n        <input maxlength=\"2\" size=\"2\">\n      </iron-input>\n      -\n      <iron-input bind-value=\"{{_ssn3}}\" aria-label=\"Last 4 digits of social security number\">\n        <input maxlength=\"4\" size=\"4\">\n      </iron-input>\n    </div>\n  "]))),
    behaviors: [_ironValidatableBehavior.IronValidatableBehavior],
    properties: {
      value: {
        notify: true,
        type: String
      },
      _ssn1: {
        type: String,
        value: ''
      },
      _ssn2: {
        type: String,
        value: ''
      },
      _ssn3: {
        type: String,
        value: ''
      },
      validator: {
        type: String,
        value: 'ssn-validator'
      }
    },
    observers: ['_computeValue(_ssn1,_ssn2,_ssn3)'],
    _computeValue: function _computeValue(ssn1, ssn2, ssn3) {
      this.value = ssn1.trim() + '-' + ssn2.trim() + '-' + ssn3.trim();
    }
  });
});