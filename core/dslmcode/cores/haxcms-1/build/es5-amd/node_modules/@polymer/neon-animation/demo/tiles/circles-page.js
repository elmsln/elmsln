define(["../../../polymer/polymer-legacy.js", "../../../iron-flex-layout/iron-flex-layout.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/legacy/polymer.dom.js", "../../../polymer/lib/utils/html-tag.js", "../../neon-shared-element-animatable-behavior.js"], function (_polymerLegacy, _ironFlexLayout, _polymerFn, _polymerDom, _htmlTag, _neonSharedElementAnimatableBehavior) {
  "use strict";

  var _templateObject_5d8f3400809211edaa2833647dc78c6c;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_5d8f3400809211edaa2833647dc78c6c || (_templateObject_5d8f3400809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center-center;\n      }\n\n      .circle {\n        display: inline-block;\n        box-sizing: border-box;\n        width: 100px;\n        height: 100px;\n        margin: 16px;\n        border-radius: 50%;\n        background: var(--color-one);\n      }\n    </style>\n\n    <div>\n      <div class=\"circle\"></div>\n      <div class=\"circle\"></div>\n      <div class=\"circle\"></div>\n      <div class=\"circle\"></div>\n    </div>\n  "]))),
    is: 'circles-page',
    behaviors: [_neonSharedElementAnimatableBehavior.NeonSharedElementAnimatableBehavior],
    properties: {
      animationConfig: {
        type: Object
      }
    },
    listeners: {
      'click': '_onClick'
    },
    attached: function attached() {
      if (this.animationConfig) {
        return;
      }

      var circles = (0, _polymerDom.dom)(this.root).querySelectorAll('.circle');
      var circlesArray = Array.from(circles);
      this.animationConfig = {
        'entry': [{
          name: 'cascaded-animation',
          animation: 'scale-up-animation',
          nodes: circlesArray
        }],
        'exit': [{
          name: 'hero-animation',
          id: 'hero',
          fromPage: this
        }, {
          name: 'cascaded-animation',
          animation: 'scale-down-animation'
        }]
      };
    },
    _onClick: function _onClick(event) {
      var target = (0, _polymerDom.dom)(event).rootTarget;

      if (target.classList.contains('circle')) {
        // configure the page animation
        this.sharedElements = {
          'hero': target
        };
        var nodesToScale = [];
        var circles = (0, _polymerDom.dom)(this.root).querySelectorAll('.circle');

        for (var node, index = 0; node = circles[index]; index++) {
          if (node !== event.target) {
            nodesToScale.push(node);
          }
        }

        this.animationConfig['exit'][1].nodes = nodesToScale;
        this.fire('circle-click');
      }
    }
  });
});