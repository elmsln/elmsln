define(["../../../../app-route/app-location.js", "../../../../app-route/app-route.js", "../../../../iron-flex-layout/iron-flex-layout.js", "../../../../iron-pages/iron-pages.js", "../../../../iron-selector/iron-selector.js", "../../../../paper-icon-button/paper-icon-button.js", "../../../../paper-item/paper-item.js", "../../../../paper-listbox/paper-listbox.js", "../../../app-drawer-layout/app-drawer-layout.js", "../../../app-drawer/app-drawer.js", "../../../app-header-layout/app-header-layout.js", "../../../app-header/app-header.js", "../../../app-toolbar/app-toolbar.js", "./recipe-detail.js", "./recipe-list.js", "./app-icons.js", "../../../helpers/helpers.js", "../../../../polymer/lib/legacy/polymer-fn.js", "../../../../polymer/lib/utils/html-tag.js"], function (_appLocation, _appRoute, _ironFlexLayout, _ironPages, _ironSelector, _paperIconButton, _paperItem, _paperListbox, _appDrawerLayout, _appDrawer, _appHeaderLayout, _appHeader, _appToolbar, _recipeDetail, _recipeList, _appIcons, _helpers, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_99ee2a208e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_99ee2a208e0011ed99ce491205e67b1d || (_templateObject_99ee2a208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n    :host {\n      --paper-font-common-base: {\n        font-family: Raleway, sans-serif;\n      };\n    }\n\n    app-drawer-layout:not([narrow]) [drawer-toggle] {\n      display: none;\n    }\n\n    .avatar-container {\n      position: relative;\n      border: 2px solid #00AA8D;\n      border-radius: 50%;\n      height: 90px;\n      padding: 2px;\n      width: 90px;\n      margin: 20px auto;\n    }\n\n    .avatar-container .image {\n      background-image: url('//app-layout-assets.appspot.com/assets/pesto/avatar.jpg');\n      background-size: contain;\n      border-radius: 50%;\n      height: 100%;\n      width: 100%;\n    }\n\n    .contact-info {\n      margin: 0 20px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #CCC;\n      text-align: center;\n    }\n\n    .contact-info .name {\n      font-weight: bold;\n    }\n\n    .contact-info .email {\n      color: #999;\n    }\n\n    paper-item {\n      height: 54px;\n    }\n\n    paper-item > a {\n      width: 100%;\n      height: 100%;\n      line-height: 54px;\n      text-align: center;\n      text-decoration: none;\n      color: black;\n    }\n\n    paper-icon-button {\n      --paper-icon-button-ink-color: white;\n    }\n    </style>\n\n    <app-location route=\"{{_route}}\" use-hash-as-path></app-location>\n    <app-route route=\"{{_route}}\" pattern=\"/:page\" data=\"{{_pageData}}\" tail=\"{{_subRoute}}\"></app-route>\n    <app-route route=\"{{_subRoute}}\" pattern=\"/:id\" data=\"{{_idData}}\"></app-route>\n\n    <app-drawer-layout responsive-width=\"1280px\">\n\n      <!-- nav panel -->\n      <app-drawer id=\"drawer\" swipe-open slot=\"drawer\">\n        <app-header-layout has-scrolling-region>\n\n          <app-header fixed slot=\"header\">\n            <div class=\"avatar-container\">\n              <div class=\"image\"></div>\n            </div>\n            <div class=\"contact-info\">\n              <div class=\"name\">Jonathan</div>\n              <div class=\"email\">heyfromjonathan@gmail.com</div>\n            </div>\n          </app-header>\n\n          <!-- nav menu -->\n          <!-- Two way binding to the selected property has been removed due to polymer/issues/4405 -->\n          <paper-listbox selected=\"[[_pageData.page]]\" attr-for-selected=\"name\" on-iron-activate=\"_drawerSelected\">\n            <paper-item name=\"home\">\n              <a href=\"#/home\" name=\"name\">Home</a>\n            </paper-item>\n            <paper-item name=\"favorites\">\n              <a href=\"#/favorites\" name=\"name\">Favorites</a>\n            </paper-item>\n            <paper-item name=\"saved\">\n              <a href=\"#/saved\" name=\"name\">Saved</a>\n            </paper-item>\n            <paper-item name=\"trending\">\n              <a href=\"#/trending\" name=\"name\">Trending</a>\n            </paper-item>\n          </paper-listbox>\n        </app-header-layout>\n      </app-drawer>\n\n      <!-- list/detail pages -->\n      <iron-pages selected=\"[[_selectedPage]]\" attr-for-selected=\"name\">\n\n        <recipe-list name=\"home\" recipes=\"[[recipes]]\">\n          <paper-icon-button icon=\"app:menu\" drawer-toggle slot=\"drawer-toggle\"></paper-icon-button>\n        </recipe-list>\n\n        <recipe-list name=\"favorites\">\n          <paper-icon-button icon=\"app:menu\" drawer-toggle slot=\"drawer-toggle\"></paper-icon-button>\n        </recipe-list>\n\n        <recipe-list name=\"saved\">\n          <paper-icon-button icon=\"app:menu\" drawer-toggle slot=\"drawer-toggle\"></paper-icon-button>\n        </recipe-list>\n\n        <recipe-list name=\"trending\">\n          <paper-icon-button icon=\"app:menu\" drawer-toggle slot=\"drawer-toggle\"></paper-icon-button>\n        </recipe-list>\n\n        <recipe-detail id=\"detailView\" name=\"detail\" recipe=\"[[_getRecipe(recipes, _idData.id)]]\"></recipe-detail>\n\n      </iron-pages>\n\n    </app-drawer-layout>\n"]))),
    is: 'recipe-app',
    properties: {
      recipes: Object,
      _route: Object,
      _subRoute: Object,
      _pageData: {
        type: Object,
        observer: '_pageDataChanged'
      },
      _selectedPage: String,
      _idData: Object,
      _scrollPositionMap: {
        type: Object,
        value: function value() {
          return {};
        }
      }
    },
    attached: function attached() {
      this.async(function () {
        if (!this._route.path) {
          this.set('_route.path', '/home');
        }
      });
    },
    _getRecipe: function _getRecipe() {
      if (this.recipes && this._idData && this._idData.id) {
        for (var i = 0; i < this.recipes.length; ++i) {
          var r = this.recipes[i];

          if (r.id === this._idData.id) {
            return r;
          }
        }
      }

      return null;
    },
    _drawerSelected: function _drawerSelected() {
      if (!this.$.drawer.persistent) this.$.drawer.close();
    },

    /**
     * Preserves the document scroll position, so
     * it can be restored when returning to a page.
     */
    _pageDataChanged: function _pageDataChanged(pageData, oldPageData) {
      var map = this._scrollPositionMap;

      if (oldPageData != null && oldPageData.page != null) {
        map[oldPageData.page] = window.pageYOffset;
      }

      this._selectedPage = pageData.page;

      if (map[pageData.page] != null) {
        (0, _helpers.scroll)({
          top: map[pageData.page],
          behavior: 'silent'
        });
      } else if (this.isAttached) {
        (0, _helpers.scroll)({
          top: 0,
          behavior: 'silent'
        });
      }
    }
  });
});