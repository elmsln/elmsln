define(["../../polymer/polymer-legacy.js", "../../polymer/lib/legacy/polymer-fn.js", "../../polymer/lib/utils/html-tag.js", "../iron-scroll-target-behavior.js"], function (_polymerLegacy, _polymerFn, _htmlTag, _ironScrollTargetBehavior) {
  "use strict";

  var _templateObject_59df9980809211edaa2833647dc78c6c;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_59df9980809211edaa2833647dc78c6c || (_templateObject_59df9980809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        font: 14px arial;\n      }\n\n      .scrollState {\n        border-left: 1px solid #ccc;\n        border-right: 1px solid #ccc;\n        border-bottom: 1px solid #ccc;\n        font-weight: bold;\n        background-color: #eee;\n        position: fixed;\n        top: 0;\n        left: calc(50% - 100px);\n        padding: 10px;\n        width: 220px;\n        text-align: center;\n      }\n\n      .item {\n        border-bottom: 1px solid #ccc;\n        background-color: white;\n        padding: 20px;\n        width: 200%;\n      }\n\n    </style>\n    <div class=\"scrollState\">scrollTop: [[xScrollTop]] - scrollLeft: [[xScrollLeft]]</div>\n    <template is=\"dom-repeat\" items=\"[[_getItems(itemCount)]]\">\n      <div class=\"item\">[[index]]</div>\n    </template>\n"]))),
    is: 'x-scrollable',
    properties: {
      xScrollTop: {
        type: Number,
        readOnly: true,
        value: 0
      },
      xScrollLeft: {
        type: Number,
        readOnly: true,
        value: 0
      },
      itemCount: {
        type: Number,
        value: 200
      }
    },
    behaviors: [_ironScrollTargetBehavior.IronScrollTargetBehavior],
    attached: function attached() {
      this._scrollHandler();
    },
    _scrollHandler: function _scrollHandler() {
      this._setXScrollTop(this._scrollTop);

      this._setXScrollLeft(this._scrollLeft);
    },
    _getItems: function _getItems(itemCount) {
      var items = new Array(itemCount);

      while (itemCount > 0) {
        items[--itemCount] = true;
      }

      return items;
    }
  });
});