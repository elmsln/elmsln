define(["../polymer/polymer-legacy.js", "../iron-resizable-behavior/iron-resizable-behavior.js", "../iron-selector/iron-selectable.js", "../polymer/lib/legacy/polymer-fn.js", "../polymer/lib/utils/html-tag.js"], function (_polymerLegacy, _ironResizableBehavior, _ironSelectable, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_971feef08e0011ed99ce491205e67b1d;

  /**
  `iron-pages` is used to select one of its children to show. One use is to cycle
  through a list of children "pages".
  
  Example:
  
      <iron-pages selected="0">
        <div>One</div>
        <div>Two</div>
        <div>Three</div>
      </iron-pages>
  
      <script>
        document.addEventListener('click', function(e) {
          var pages = document.querySelector('iron-pages');
          pages.selectNext();
        });
      </script>
  
  @group Iron Elements
  @demo demo/index.html
  */
  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_971feef08e0011ed99ce491205e67b1d || (_templateObject_971feef08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host > ::slotted(:not(slot):not(.iron-selected)) {\n        display: none !important;\n      }\n    </style>\n\n    <slot></slot>\n"]))),
    is: 'iron-pages',
    behaviors: [_ironResizableBehavior.IronResizableBehavior, _ironSelectable.IronSelectableBehavior],
    properties: {
      // as the selected page is the only one visible, activateEvent
      // is both non-sensical and problematic; e.g. in cases where a user
      // handler attempts to change the page and the activateEvent
      // handler immediately changes it back
      activateEvent: {
        type: String,
        value: null
      }
    },
    observers: ['_selectedPageChanged(selected)'],
    _selectedPageChanged: function _selectedPageChanged(selected, old) {
      this.async(this.notifyResize);
    }
  });
});