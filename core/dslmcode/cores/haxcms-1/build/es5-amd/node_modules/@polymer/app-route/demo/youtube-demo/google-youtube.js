define(["../../../polymer/polymer-element.js"], function (_polymerElement) {
  "use strict";

  var _templateObject_5ce908f0809211edaa2833647dc78c6c;

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * This element supports a subset of the features of the google-youtube element
   * v2.x.
   */
  var GoogleYoutube = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(GoogleYoutube, _PolymerElement);

    var _super = _createSuper(GoogleYoutube);

    function GoogleYoutube() {
      babelHelpers.classCallCheck(this, GoogleYoutube);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(GoogleYoutube, [{
      key: "_videoIdChanged",
      value: function _videoIdChanged() {
        this.isReady = false;

        if (this.__player && this.__player.destroy) {
          this.__player.destroy();
        }

        this.__player = new YT.Player(this.$.container, {
          videoId: this.videoId,
          events: {
            onReady: this.__onPlayerReady.bind(this),
            onStateChange: this.__onStateChange.bind(this)
          }
        });
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(GoogleYoutube.prototype), "connectedCallback", this).call(this);
        this.__origin = window.location.origin;
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(GoogleYoutube.prototype), "disconnectedCallback", this).call(this);

        if (this.__currenttimeInterval) {
          clearInterval(this.__currenttimeInterval);
          this.__currenttimeInterval = null;
        }
      }
    }, {
      key: "seekTo",
      value: function seekTo(newTime) {
        if (!this.isReady) {
          this.__unreadyCommands.push(this.seekTo.bind(this, [newTime]));

          return;
        }

        this.__player.seekTo(newTime);
      }
    }, {
      key: "__onPlayerReady",
      value: function __onPlayerReady() {
        this.isReady = true;
        this.duration = this.__player.getDuration();
        var ev = new CustomEvent('google-youtube-ready', {
          composed: true
        });
        this.dispatchEvent(ev);

        var _iterator = _createForOfIteratorHelper(this.__unreadyCommands),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var command = _step.value;
            command.call(this);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
        this.__unreadyCommands = [];
        setInterval(this.__updateCurrentTime.bind(this), 100);
      }
    }, {
      key: "__updateCurrentTime",
      value: function __updateCurrentTime() {
        if (!this.__player.getCurrentTime) {
          clearInterval(this.__currenttimeInterval);
          this.__currenttimeInterval = null;
          return;
        }

        this.currentTime = Math.floor(this.__player.getCurrentTime());
      }
    }, {
      key: "__onStateChange",
      value: function __onStateChange(e) {
        this.state = e.data;
      }
    }, {
      key: "pause",
      value: function pause() {
        if (!this.isReady) {
          this.__unreadyCommands.push(this.pause);

          return;
        }

        this.__player.pauseVideo();
      }
    }, {
      key: "play",
      value: function play() {
        if (!this.isReady) {
          this.__unreadyCommands.push(this.play);

          return;
        }

        this.__player.playVideo();
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_5ce908f0809211edaa2833647dc78c6c || (_templateObject_5ce908f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n\n        #container {\n          width: 100%;\n          height: 100%;\n          max-width: 100%;\n          max-height: 100%;\n        }\n\n        #iframe {\n          width: 100%;\n          height: 100%;\n        }\n      </style>\n      <div id=\"container\"></div>\n    "])));
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          videoId: {
            type: String,
            observer: '_videoIdChanged'
          },
          state: {
            type: Number,
            notify: true
          },
          currentTime: {
            type: Number,
            notify: true
          },
          isReady: {
            type: Boolean,
            value: false
          },
          duration: {
            type: Number,
            notify: true
          },
          __unreadyCommands: {
            type: Array,
            value: []
          },
          __currenttimeInterval: {
            type: Number
          }
        };
      }
    }]);
    return GoogleYoutube;
  }(_polymerElement.PolymerElement);

  customElements.define('google-youtube', GoogleYoutube);
});