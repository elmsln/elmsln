define(["../polymer/polymer-legacy.js", "./iron-doc-viewer-styles.js", "../polymer/lib/legacy/polymer-fn.js", "../polymer/lib/legacy/polymer.dom.js", "../polymer/lib/utils/html-tag.js"], function (_polymerLegacy, _ironDocViewerStyles, _polymerFn, _polymerDom, _htmlTag) {
  "use strict";

  var _templateObject_8dfd38008e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_8dfd38008e0011ed99ce491205e67b1d || (_templateObject_8dfd38008e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style include=\"iron-doc-viewer-styles\">\n      :host {\n        display: block;\n      }\n\n      section {\n        @apply --iron-doc-font-body;\n        border-bottom: 1px solid #e0e0e0;\n      }\n\n      h3 {\n        @apply --paper-font-subhead;\n        color: #717171;\n        padding: 0 24px;\n      }\n\n      ul {\n        list-style: none;\n        padding: 0;\n      }\n\n      li {\n        line-height: 30px;\n      }\n\n      a {\n        color: #333;\n        padding: 0 24px;\n        display: block;\n        text-decoration: none;\n      }\n\n      a:hover {\n        color: var(--iron-doc-accent-color-internal) !important;\n      }\n\n      a[selected] {\n        color: var(--iron-doc-accent-color-internal);\n      }\n\n      .tray {\n        transition: height 180ms linear, opacity 180ms linear;\n        box-sizing: border-box;\n        overflow: hidden;\n      }\n\n      .tray:not([expanded]) {\n        height: 0 !important;\n        opacity: 0;\n        visibility: hidden; /** Prevent keyboard etc. focus. */\n      }\n\n      .tray[expanded] {\n        opacity: 1;\n        visibility: visible;\n      }\n\n      .tray ul {\n        padding: 10px 0;\n        margin: 10px 0;\n        white-space: nowrap;\n        background-color: #eee;\n        border-top: 1px solid #dedede;\n        border-bottom: 1px solid white;\n      }\n\n      .tray a {\n        padding-left: 35px;\n        color: #333;\n      }\n    </style>\n\n    <template is=\"dom-repeat\" items=\"[[_sections]]\" as=\"section\">\n      <section hidden$=\"[[!section.items.length]]\">\n        <h3>[[section.heading]]</h3>\n        <ul>\n          <template is=\"dom-repeat\" items=\"[[section.items]]\">\n            <li>\n              <a href=\"[[baseHref]][[item.path]]\" title$=\"[[item.name]]\" on-tap=\"_select\" selected$=\"[[_isSelected(item.path, path)]]\">\n                [[item.name]]\n              </a>\n\n              <div class=\"tray\" expanded$=\"[[_isExpanded(item, path)]]\">\n                <ul>\n                  <template is=\"dom-repeat\" items=\"[[item.demos]]\" as=\"demo\">\n                    <li>\n                      <a href=\"[[baseHref]][[demo.path]]\" title$=\"[[demo.description]]\" on-tap=\"_select\" selected$=\"[[_isSelected(demo.path, path)]]\">\n                        [[demo.description]]\n                      </a>\n                    </li>\n                  </template>\n                </ul>\n              </div>\n            </li>\n          </template>\n        </ul>\n      </section>\n    </template>\n"], ["\n    <style include=\"iron-doc-viewer-styles\">\n      :host {\n        display: block;\n      }\n\n      section {\n        @apply --iron-doc-font-body;\n        border-bottom: 1px solid #e0e0e0;\n      }\n\n      h3 {\n        @apply --paper-font-subhead;\n        color: #717171;\n        padding: 0 24px;\n      }\n\n      ul {\n        list-style: none;\n        padding: 0;\n      }\n\n      li {\n        line-height: 30px;\n      }\n\n      a {\n        color: #333;\n        padding: 0 24px;\n        display: block;\n        text-decoration: none;\n      }\n\n      a:hover {\n        color: var(--iron-doc-accent-color-internal) !important;\n      }\n\n      a[selected] {\n        color: var(--iron-doc-accent-color-internal);\n      }\n\n      .tray {\n        transition: height 180ms linear, opacity 180ms linear;\n        box-sizing: border-box;\n        overflow: hidden;\n      }\n\n      .tray:not([expanded]) {\n        height: 0 !important;\n        opacity: 0;\n        visibility: hidden; /** Prevent keyboard etc. focus. */\n      }\n\n      .tray[expanded] {\n        opacity: 1;\n        visibility: visible;\n      }\n\n      .tray ul {\n        padding: 10px 0;\n        margin: 10px 0;\n        white-space: nowrap;\n        background-color: #eee;\n        border-top: 1px solid #dedede;\n        border-bottom: 1px solid white;\n      }\n\n      .tray a {\n        padding-left: 35px;\n        color: #333;\n      }\n    </style>\n\n    <template is=\"dom-repeat\" items=\"[[_sections]]\" as=\"section\">\n      <section hidden\\$=\"[[!section.items.length]]\">\n        <h3>[[section.heading]]</h3>\n        <ul>\n          <template is=\"dom-repeat\" items=\"[[section.items]]\">\n            <li>\n              <a href=\"[[baseHref]][[item.path]]\" title\\$=\"[[item.name]]\" on-tap=\"_select\" selected\\$=\"[[_isSelected(item.path, path)]]\">\n                [[item.name]]\n              </a>\n\n              <div class=\"tray\" expanded\\$=\"[[_isExpanded(item, path)]]\">\n                <ul>\n                  <template is=\"dom-repeat\" items=\"[[item.demos]]\" as=\"demo\">\n                    <li>\n                      <a href=\"[[baseHref]][[demo.path]]\" title\\$=\"[[demo.description]]\" on-tap=\"_select\" selected\\$=\"[[_isSelected(demo.path, path)]]\">\n                        [[demo.description]]\n                      </a>\n                    </li>\n                  </template>\n                </ul>\n              </div>\n            </li>\n          </template>\n        </ul>\n      </section>\n    </template>\n"]))),
    is: 'iron-doc-nav',
    properties: {
      descriptor: {
        type: Object,
        observer: '_descriptorChanged'
      },
      path: String,
      baseHref: {
        type: String,
        value: '#'
      },
      _sections: Array
    },
    _descriptorChanged: function _descriptorChanged(descriptor) {
      descriptor = descriptor || {};
      this._sections = [_section('Namespaces', '/namespaces/', descriptor.namespaces), _section('Elements', '/elements/', descriptor.elements), _section('Behaviors', '/behaviors/', ((descriptor.metadata || {}).polymer || {}).behaviors), _section('Mixins', '/mixins/', descriptor.mixins), _section('Classes', '/classes/', descriptor.classes)]; // Store the height of each expanding tray for transitions.

      (0, _polymerDom.flush)();
      var trays = (0, _polymerDom.dom)(this.root).querySelectorAll('.tray');

      for (var i = 0; i < trays.length; i++) {
        var tray = trays[i];
        var expanded = tray.hasAttribute('expanded');

        if (!expanded) {
          tray.setAttribute('expanded', '');
        }

        tray.style.height = 'auto';
        tray.style.height = tray.offsetHeight + 'px';

        if (!expanded) {
          tray.removeAttribute('expanded', '');
        }
      }
    },
    _select: function _select(event) {
      this.fire('select');
    },
    _isSelected: function _isSelected(a, b) {
      return a === b;
    },
    _isExpanded: function _isExpanded(item, path) {
      return !!(item && path && item.path && item.demos && item.demos.length > 0 && (path === item.path || path.indexOf(item.path + '/') === 0));
    }
  });

  function _section(heading, pathPrefix, descriptorItems) {
    var sectionItems = [];

    for (var i = 0; i < (descriptorItems || []).length; i++) {
      var item = descriptorItems[i];
      var name = item.tagname ? '<' + item.tagname + '>' : item.name;

      if (!name) {
        continue;
      }

      var path = pathPrefix + (item.tagname || item.name);
      var demos = [];

      for (var d = 0; d < (item.demos || []).length; d++) {
        var demo = item.demos[d];

        if (!demo.url) {
          continue;
        }

        var demoPath = demo.description ? demo.description.toLowerCase().replace(/\s+/g, '-') : demo.url;
        demos.push({
          path: path + '/demos/' + demoPath,
          description: demo.description || 'Demo'
        });
      }

      sectionItems.push({
        name: name,
        path: path,
        demos: demos
      });
    }

    sectionItems.sort(function (a, b) {
      return a.name.localeCompare(b.name);
    });
    return {
      heading: heading,
      items: sectionItems
    };
  }
});