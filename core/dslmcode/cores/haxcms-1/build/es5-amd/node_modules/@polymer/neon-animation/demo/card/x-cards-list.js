define(["../../../polymer/polymer-legacy.js", "../../../iron-flex-layout/iron-flex-layout.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js", "../../neon-shared-element-animatable-behavior.js"], function (_polymerLegacy, _ironFlexLayout, _polymerFn, _htmlTag, _neonSharedElementAnimatableBehavior) {
  "use strict";

  var _templateObject_5d558660809211edaa2833647dc78c6c;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_5d558660809211edaa2833647dc78c6c || (_templateObject_5d558660809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        overflow: hidden;\n      }\n\n      #placeholder {\n        opacity: 0;\n        background-color: grey;\n        @apply --layout-fit;\n      }\n    </style>\n\n    <div id=\"placeholder\"></div>\n    <div id=\"container\">\n      <slot name=\"div\"></slot>\n    </div>\n  "]))),
    is: 'x-cards-list',
    behaviors: [_neonSharedElementAnimatableBehavior.NeonSharedElementAnimatableBehavior],
    properties: {
      animationConfig: {
        type: Object
      }
    },
    attached: function attached() {
      if (this.animationConfig) {
        return;
      }

      this.animationConfig = {
        'entry': [{
          name: 'reverse-ripple-animation',
          id: 'reverse-ripple',
          toPage: this
        }],
        'exit': [{
          name: 'fade-out-animation',
          node: this.$.container,
          timing: {
            delay: 150,
            duration: 0
          }
        }, {
          name: 'ripple-animation',
          id: 'ripple',
          fromPage: this
        }]
      };
    }
  });
});