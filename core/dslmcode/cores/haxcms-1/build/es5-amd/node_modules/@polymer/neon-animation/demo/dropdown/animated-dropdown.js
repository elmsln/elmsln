define(["../../../polymer/polymer-legacy.js", "../../../paper-styles/shadow.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js", "../../neon-animation-runner-behavior.js"], function (_polymerLegacy, _shadow, _polymerFn, _htmlTag, _neonAnimationRunnerBehavior) {
  "use strict";

  var _templateObject_97d9c9108e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_97d9c9108e0011ed99ce491205e67b1d || (_templateObject_97d9c9108e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: none;\n        padding: 16px;\n        background: white;\n        color: black;\n\n        @apply --shadow-elevation-2dp;\n      }\n    </style>\n    <slot></slot>\n  "]))),
    is: 'animated-dropdown',
    behaviors: [_neonAnimationRunnerBehavior.NeonAnimationRunnerBehavior],
    properties: {
      animationConfig: {
        type: Object,
        value: function value() {
          return {
            'entry': [{
              name: 'scale-up-animation',
              node: this,
              transformOrigin: '0 0'
            }],
            'exit': [{
              name: 'fade-out-animation',
              node: this
            }]
          };
        }
      },
      _showing: {
        type: Boolean,
        value: false
      }
    },
    listeners: {
      'neon-animation-finish': '_onAnimationFinish'
    },
    _onAnimationFinish: function _onAnimationFinish() {
      if (this._showing) {} else {
        this.style.display = '';
      }
    },
    show: function show() {
      this.style.display = 'inline-block';
      this._showing = true;
      this.playAnimation('entry');
    },
    hide: function hide() {
      this._showing = false;
      this.playAnimation('exit');
    }
  });
});