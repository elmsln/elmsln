define(["../../../iron-flex-layout/iron-flex-layout.js", "../../../polymer/polymer-legacy.js", "../../../paper-styles/color.js", "../../../paper-input/paper-input.js", "../../../paper-toggle-button/paper-toggle-button.js", "../../app-route.js", "./youtube-lite.js", "./route-info.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js"], function (_ironFlexLayout, _polymerLegacy, _color, _paperInput, _paperToggleButton, _appRoute, _youtubeLite, _routeInfo, _polymerFn, _htmlTag) {
  "use strict";

  var _templateObject_97831d908e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_97831d908e0011ed99ce491205e67b1d || (_templateObject_97831d908e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        position: relative;\n        height: calc(100vh - 60px);\n        --primary-color: var(--paper-red-500);\n        --primary-text-color: #fff;\n        --paper-toggle-button-unchecked-bar-color: #888;\n      }\n\n      paper-input {\n        width: 100px;\n      }\n\n      #controls {\n        color: #fff;\n        @apply --layout-vertical;\n        @apply --layout-center-center;\n        height: 30%;\n      }\n\n      #controls > div {\n        @apply --layout-horizontal;\n        padding-bottom: 1em;\n      }\n\n      #state {\n        margin-left: 16px;\n      }\n\n      #player {\n        height: 70%;\n      }\n    </style>\n\n    <!-- This app-route consumes the route which was provided by the tail of\n    a app-route in the host of this element. This means that the parent that\n    provides this route decides where this element lives in the URL space. In\n    this case, the parent, which uses hashes, matches #/video and hence this\n    element lives in <App serving point>?queryParams#/video/:vid -->\n    <app-route\n        route=\"{{route}}\"\n        pattern=\"/:vid\"\n        data=\"{{data}}\"\n        query-params=\"{{queryParams}}\">\n    </app-route>\n\n    <!-- You can bind any element's state into the URL by binding their\n    properties into the queryParams object. youtube-lite doesn't have any code\n    that's even aware of routing or the URL. -->\n    <youtube-lite\n        id=\"player\"\n        video-id=\"{{data.vid}}\"\n        state=\"{{queryParams.state}}\"\n        current-time=\"{{queryParams.time}}\"\n        start-time=\"{{queryParams.time}}\">\n    </youtube-lite>\n\n    <div id=\"controls\">\n      <div>\n        <paper-input\n            id=\"time\"\n            type=\"number\"\n            on-focus=\"pause\"\n            label=\"Time\"\n            value=\"{{queryParams.time}}\">\n        </paper-input>\n        <paper-toggle-button id=\"state\" active=\"{{playing}}\">[[queryParams.state]]</paper-toggle-button>\n      </div>\n      <route-info route=\"[[route]]\"></route-info>\n    </div>\n  "]))),
    is: 'video-viewer',
    properties: {
      route: {
        type: Object,
        notify: true
      },
      data: {
        type: Object
      },
      playing: {
        type: Boolean
      },
      queryParams: {
        type: Object
      }
    },
    observers: ['_playingChanged(playing)', '_stateChanged(queryParams.state)'],
    pause: function pause() {
      this.set('queryParams.state', 'paused');
    },
    _playingChanged: function _playingChanged(playing) {
      this.set('queryParams.state', playing ? 'playing' : 'paused');
    },
    _stateChanged: function _stateChanged(state) {
      this.playing = state === 'playing';
    }
  });
});