define(["../../../polymer/polymer-legacy.js", "../../../iron-flex-layout/iron-flex-layout.js", "../../../paper-styles/shadow.js", "../../../app-layout/app-toolbar/app-toolbar.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js", "../../neon-animatable-behavior.js"], function (_polymerLegacy, _ironFlexLayout, _shadow, _appToolbar, _polymerFn, _htmlTag, _neonAnimatableBehavior) {
  "use strict";

  var _templateObject_9812da708e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_9812da708e0011ed99ce491205e67b1d || (_templateObject_9812da708e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        @apply --layout-vertical;\n      }\n\n      .main {\n        background: white;\n        @apply --layout-flex;\n        @apply --layout-scroll;\n        @apply --shadow-elevation-8dp;\n      }\n\n      .image-container {\n        position: relative;\n        width: 100%;\n        padding-bottom: 100%;\n      }\n\n      .image {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: repeating-linear-gradient(\n          45deg,\n          #f5f5f5,\n          #f5f5f5 8px,\n          #e0e0e0 8px,\n          #e0e0e0 16px\n        );\n      }\n\n      app-toolbar {\n        color: white;\n        background-color: var(--google-blue-500);\n      }\n    </style>\n    <app-toolbar>\n      <paper-icon-button id=\"button\" icon=\"clear\" on-click=\"_onClearButtonClick\"></paper-icon-button>\n    </app-toolbar>\n\n    <div id=\"main\" class=\"main\">\n      <div class=\"image-container\">\n        <div class=\"image\">\n        </div>\n      </div>\n    </div>\n  "]))),
    is: 'full-view',
    behaviors: [_neonAnimatableBehavior.NeonAnimatableBehavior],
    properties: {
      sharedElements: {
        type: Object
      },
      animationConfig: {
        type: Object
      }
    },
    attached: function attached() {
      if (this.animationConfig) {
        return;
      }

      this.sharedElements = {
        'hero': this.$.main
      };
      this.animationConfig = {
        'entry': [{
          name: 'fade-in-animation',
          node: this.$.button
        }, {
          name: 'hero-animation',
          id: 'hero',
          toPage: this
        }],
        'exit': [{
          name: 'fade-out-animation',
          node: this.$.button
        }, {
          name: 'scale-down-animation',
          node: this.$.main,
          transformOrigin: '50% 50%',
          axis: 'y'
        }]
      };
    },
    _onClearButtonClick: function _onClearButtonClick() {
      this.fire('close');
    }
  });
});