define(["../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/utils/html-tag.js", "../../iron-resizable-behavior.js"], function (_polymerFn, _htmlTag, _ironResizableBehavior) {
  "use strict";

  var _templateObject_9796f3b08e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_9796f3b08e0011ed99ce491205e67b1d || (_templateObject_9796f3b08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-block;\n        border: 3px solid lightblue;\n      }\n    </style>\n\n    <b>I'm a resize-aware, thirdifying puck at (<span>{{x}}</span> x <span>{{y}}</span>).</b>\n  "]))),
    is: 'x-puck',
    behaviors: [_ironResizableBehavior.IronResizableBehavior],
    properties: {
      x: {
        type: Number,
        value: 0
      },
      y: {
        type: Number,
        value: 0
      }
    },
    listeners: {
      'iron-resize': '_onIronResize'
    },
    attached: function attached() {
      this.async(this.notifyResize, 1);
    },

    get parent() {
      if (this.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
        return this.parentNode.host;
      }

      return this.parentNode;
    },

    _onIronResize: function _onIronResize() {
      var x = this.x = Math.floor(this.parent.offsetWidth / 3);
      var y = this.y = Math.floor(this.parent.offsetHeight / 3);
      this.translate3d("".concat(x, "px"), "".concat(y, "px"), 0);
    }
  });
});