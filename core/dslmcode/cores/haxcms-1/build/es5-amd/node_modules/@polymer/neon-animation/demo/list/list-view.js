define(["../../../polymer/polymer-legacy.js", "../../../iron-icons/iron-icons.js", "../../../iron-icon/iron-icon.js", "../../../iron-flex-layout/iron-flex-layout.js", "../../../paper-icon-button/paper-icon-button.js", "../../../paper-item/paper-item.js", "../../../paper-item/paper-item-body.js", "../../../app-layout/app-toolbar/app-toolbar.js", "../../../paper-styles/color.js", "../../../polymer/lib/legacy/polymer-fn.js", "../../../polymer/lib/legacy/polymer.dom.js", "../../../polymer/lib/utils/html-tag.js", "../../neon-animatable-behavior.js"], function (_polymerLegacy, _ironIcons, _ironIcon, _ironFlexLayout, _paperIconButton, _paperItem, _paperItemBody, _appToolbar, _color, _polymerFn, _polymerDom, _htmlTag, _neonAnimatableBehavior) {
  "use strict";

  var _templateObject_98259f208e0011ed99ce491205e67b1d;

  (0, _polymerFn.Polymer)({
    _template: (0, _htmlTag.html)(_templateObject_98259f208e0011ed99ce491205e67b1d || (_templateObject_98259f208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        @apply --layout-vertical;\n      }\n\n      .main {\n        @apply --layout-flex;\n        @apply --layout-scroll;\n      }\n\n      iron-icon {\n        color: var(--google-grey-500);\n      }\n\n      app-toolbar {\n        color: white;\n        background-color: var(--google-blue-500);\n      }\n    </style>\n    <app-toolbar>\n      <paper-icon-button id=\"button\" icon=\"arrow-back\"></paper-icon-button>\n    </app-toolbar>\n\n    <div class=\"main\">\n\n        <template is=\"dom-repeat\" items=\"[[data]]\">\n\n          <paper-item>\n            <paper-item-body two-line>\n              <div>[[item.fileName]]</div>\n              <div secondary>[[item.modifiedDate]]</div>\n            </paper-item-body>\n            <iron-icon icon=\"info\"></iron-icon>\n          </paper-item>\n\n        </template>\n\n    </div>\n  "]))),
    is: 'list-view',
    behaviors: [_neonAnimatableBehavior.NeonAnimatableBehavior],
    listeners: {
      'click': '_onClick'
    },
    properties: {
      data: {
        type: Array,
        value: function value() {
          return [];
        }
      },
      animationConfig: {
        type: Object
      }
    },
    attached: function attached() {
      if (this.animationConfig) {
        return;
      }

      this.animationConfig = {
        'entry': [{
          name: 'fade-in-animation',
          node: this.$.button
        }],
        'exit': [{
          name: 'fade-out-animation',
          node: this.$.button
        }, {
          name: 'hero-animation',
          id: 'hero',
          fromPage: this
        }]
      };
    },
    _onClick: function _onClick(event) {
      var target = (0, _polymerDom.dom)(event).rootTarget; // configure the page animation

      this.sharedElements = {
        'hero': target
      };
      this.fire('item-click', {
        item: target
      });
    }
  });
});