define(["exports", "./wired-base.js", "./wired-lib.js", "../../lit/index.js", "../../lit/decorators.js"], function (_exports, _wiredBase, _wiredLib, _index, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WiredToggle = void 0;

  var _templateObject_6b773b30809211edaa2833647dc78c6c, _templateObject2_6b773b30809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if ((typeof Reflect === "undefined" ? "undefined" : babelHelpers.typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
      if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };

  var __metadata = void 0 && (void 0).__metadata || function (k, v) {
    if ((typeof Reflect === "undefined" ? "undefined" : babelHelpers.typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };

  var WiredToggle = /*#__PURE__*/function (_WiredBase) {
    babelHelpers.inherits(WiredToggle, _WiredBase);

    var _super = _createSuper(WiredToggle);

    function WiredToggle() {
      var _this;

      babelHelpers.classCallCheck(this, WiredToggle);
      _this = _super.apply(this, arguments);
      _this.checked = false;
      _this.disabled = false;
      return _this;
    }

    babelHelpers.createClass(WiredToggle, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_6b773b30809211edaa2833647dc78c6c || (_templateObject_6b773b30809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <div style=\"position: relative;\">\n      <svg></svg>\n      <input type=\"checkbox\" .checked=\"", "\" ?disabled=\"", "\"  @change=\"", "\">\n    </div>\n    "])), this.checked, this.disabled, this.onChange);
      }
    }, {
      key: "focus",
      value: function focus() {
        if (this.input) {
          this.input.focus();
        } else {
          babelHelpers.get(babelHelpers.getPrototypeOf(WiredToggle.prototype), "focus", this).call(this);
        }
      }
    }, {
      key: "wiredRender",
      value: function wiredRender() {
        var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        babelHelpers.get(babelHelpers.getPrototypeOf(WiredToggle.prototype), "wiredRender", this).call(this, force);
        this.refreshKnob();
      }
    }, {
      key: "onChange",
      value: function onChange() {
        this.checked = this.input.checked;
        this.refreshKnob();
        this.fire('change', {
          checked: this.checked
        });
      }
    }, {
      key: "canvasSize",
      value: function canvasSize() {
        return [80, 34];
      }
    }, {
      key: "draw",
      value: function draw(svg, size) {
        var rect = (0, _wiredLib.rectangle)(svg, 16, 8, size[0] - 32, 18, this.seed);
        rect.classList.add('toggle-bar');
        this.knob = (0, _wiredLib.svgNode)('g');
        this.knob.classList.add('knob');
        svg.appendChild(this.knob);
        var knobFill = (0, _wiredLib.hachureEllipseFill)(16, 16, 32, 32, this.seed);
        knobFill.classList.add('knobfill');
        this.knob.appendChild(knobFill);
        (0, _wiredLib.ellipse)(this.knob, 16, 16, 32, 32, this.seed);
      }
    }, {
      key: "refreshKnob",
      value: function refreshKnob() {
        if (this.knob) {
          var cl = this.knob.classList;

          if (this.checked) {
            cl.remove('unchecked');
            cl.add('checked');
          } else {
            cl.remove('checked');
            cl.add('unchecked');
          }
        }
      }
    }], [{
      key: "styles",
      get: function get() {
        return [_wiredBase.BaseCSS, (0, _index.css)(_templateObject2_6b773b30809211edaa2833647dc78c6c || (_templateObject2_6b773b30809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: inline-block;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n      }\n      :host([disabled]) {\n        opacity: 0.4 !important;\n        cursor: default;\n        pointer-events: none;\n      }\n      :host([disabled]) svg {\n        background: rgba(0, 0, 0, 0.07);\n      }\n      input {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        cursor: pointer;\n        opacity: 0;\n      }\n      .knob {\n        transition: transform 0.3s ease;\n      }\n      .knob path {\n        stroke-width: 0.7;\n      }\n      .knob.checked {\n        transform: translateX(48px);\n      }\n      path.knobfill {\n        stroke-width: 3 !important;\n        fill: transparent;\n      }\n      .knob.unchecked path.knobfill {\n        stroke: var(--wired-toggle-off-color, gray);\n      }\n      .knob.checked path.knobfill {\n        stroke: var(--wired-toggle-on-color, rgb(63, 81, 181));\n      }\n      "])))];
      }
    }]);
    return WiredToggle;
  }(_wiredBase.WiredBase);

  _exports.WiredToggle = WiredToggle;

  __decorate([(0, _decorators.property)({
    type: Boolean
  }), __metadata("design:type", Object)], WiredToggle.prototype, "checked", void 0);

  __decorate([(0, _decorators.property)({
    type: Boolean,
    reflect: true
  }), __metadata("design:type", Object)], WiredToggle.prototype, "disabled", void 0);

  __decorate([(0, _decorators.query)('input'), __metadata("design:type", HTMLInputElement)], WiredToggle.prototype, "input", void 0);

  _exports.WiredToggle = WiredToggle = __decorate([(0, _decorators.customElement)('wired-toggle')], WiredToggle);
});