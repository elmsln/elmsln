define(["exports", "./wired-base.js", "./wired-lib.js", "../../lit/index.js", "../../lit/decorators.js"], function (_exports, _wiredBase, _wiredLib, _index, _decorators) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WiredButton = void 0;

  var _templateObject_5927bb30809211edaa2833647dc78c6c, _templateObject2_5927bb30809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if ((typeof Reflect === "undefined" ? "undefined" : babelHelpers.typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
      if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };

  var __metadata = void 0 && (void 0).__metadata || function (k, v) {
    if ((typeof Reflect === "undefined" ? "undefined" : babelHelpers.typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
  };

  var WiredButton = /*#__PURE__*/function (_WiredBase) {
    babelHelpers.inherits(WiredButton, _WiredBase);

    var _super = _createSuper(WiredButton);

    function WiredButton() {
      var _this;

      babelHelpers.classCallCheck(this, WiredButton);
      _this = _super.call(this);
      _this.elevation = 1;
      _this.disabled = false;
      _this.roAttached = false;

      if (window.ResizeObserver) {
        _this.ro = new window.ResizeObserver(function () {
          if (_this.svg) {
            _this.wiredRender(true);
          }
        });
      }

      return _this;
    }

    babelHelpers.createClass(WiredButton, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_5927bb30809211edaa2833647dc78c6c || (_templateObject_5927bb30809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <button ?disabled=\"", "\">\n      <slot @slotchange=\"", "\"></slot>\n      <div id=\"overlay\">\n        <svg></svg>\n      </div>\n    </button>\n    "])), this.disabled, this.wiredRender);
      }
    }, {
      key: "focus",
      value: function focus() {
        if (this.button) {
          this.button.focus();
        } else {
          babelHelpers.get(babelHelpers.getPrototypeOf(WiredButton.prototype), "focus", this).call(this);
        }
      }
    }, {
      key: "canvasSize",
      value: function canvasSize() {
        if (this.button) {
          var size = this.button.getBoundingClientRect();
          var elev = Math.min(Math.max(1, this.elevation), 5);
          var w = size.width + (elev - 1) * 2;
          var h = size.height + (elev - 1) * 2;
          return [w, h];
        }

        return this.lastSize;
      }
    }, {
      key: "draw",
      value: function draw(svg, size) {
        var elev = Math.min(Math.max(1, this.elevation), 5);
        var s = {
          width: size[0] - (elev - 1) * 2,
          height: size[1] - (elev - 1) * 2
        };
        (0, _wiredLib.rectangle)(svg, 0, 0, s.width, s.height, this.seed);

        for (var i = 1; i < elev; i++) {
          (0, _wiredLib.line)(svg, i * 2, s.height + i * 2, s.width + i * 2, s.height + i * 2, this.seed).style.opacity = "".concat((75 - i * 10) / 100);
          (0, _wiredLib.line)(svg, s.width + i * 2, s.height + i * 2, s.width + i * 2, i * 2, this.seed).style.opacity = "".concat((75 - i * 10) / 100);
          (0, _wiredLib.line)(svg, i * 2, s.height + i * 2, s.width + i * 2, s.height + i * 2, this.seed).style.opacity = "".concat((75 - i * 10) / 100);
          (0, _wiredLib.line)(svg, s.width + i * 2, s.height + i * 2, s.width + i * 2, i * 2, this.seed).style.opacity = "".concat((75 - i * 10) / 100);
        }
      }
    }, {
      key: "updated",
      value: function updated() {
        babelHelpers.get(babelHelpers.getPrototypeOf(WiredButton.prototype), "updated", this).call(this);

        if (!this.roAttached) {
          this.attachResizeListener();
        }
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.detachResizeListener();
      }
    }, {
      key: "attachResizeListener",
      value: function attachResizeListener() {
        if (this.button && this.ro) {
          this.ro.observe(this.button);
          this.roAttached = true;
        }
      }
    }, {
      key: "detachResizeListener",
      value: function detachResizeListener() {
        if (this.button && this.ro) {
          this.ro.unobserve(this.button);
        }

        this.roAttached = false;
      }
    }], [{
      key: "styles",
      get: function get() {
        return [_wiredBase.BaseCSS, (0, _index.css)(_templateObject2_5927bb30809211edaa2833647dc78c6c || (_templateObject2_5927bb30809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n          font-size: 14px;\n        }\n        path {\n          transition: transform 0.05s ease;\n        }\n        button {\n          position: relative;\n          user-select: none;\n          border: none;\n          background: none;\n          font-family: inherit;\n          font-size: inherit;\n          cursor: pointer;\n          letter-spacing: 1.25px;\n          text-transform: uppercase;\n          text-align: center;\n          padding: 10px;\n          color: inherit;\n          outline: none;\n        }\n        button[disabled] {\n          opacity: 0.6 !important;\n          background: rgba(0, 0, 0, 0.07);\n          cursor: default;\n          pointer-events: none;\n        }\n        button:active path {\n          transform: scale(0.97) translate(1.5%, 1.5%);\n        }\n        button:focus path {\n          stroke-width: 1.5;\n        }\n        button::-moz-focus-inner {\n          border: 0;\n        }\n      "])))];
      }
    }]);
    return WiredButton;
  }(_wiredBase.WiredBase);

  _exports.WiredButton = WiredButton;

  __decorate([(0, _decorators.property)({
    type: Number
  }), __metadata("design:type", Object)], WiredButton.prototype, "elevation", void 0);

  __decorate([(0, _decorators.property)({
    type: Boolean,
    reflect: true
  }), __metadata("design:type", Object)], WiredButton.prototype, "disabled", void 0);

  __decorate([(0, _decorators.query)('button'), __metadata("design:type", HTMLButtonElement)], WiredButton.prototype, "button", void 0);

  _exports.WiredButton = WiredButton = __decorate([(0, _decorators.customElement)('wired-button'), __metadata("design:paramtypes", [])], WiredButton);
});