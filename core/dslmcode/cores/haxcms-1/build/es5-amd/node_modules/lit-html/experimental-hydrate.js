define(["exports", "./lit-html.js", "./directive.js", "./directive-helpers.js"], function (_exports, _litHtml, _directive, _directiveHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.hydrate = _exports.digestForTemplateResult = void 0;

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e6) { throw _e6; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e7) { didErr = true; err = _e7; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  /**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var i = _litHtml._$LH.R,
      a = _litHtml._$LH.D,
      s = _litHtml._$LH.V,
      c = _litHtml._$LH.I,
      d = _litHtml._$LH.F,
      f = function f(e, t) {
    var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    if (void 0 !== t._$litPart$) throw Error("container already contains a live render");
    var n, o;
    var l = [],
        i = document.createTreeWalker(t, NodeFilter.SHOW_COMMENT, null, !1);
    var a;

    for (; null !== (a = i.nextNode());) {
      var _t = a.data;

      if (_t.startsWith("lit-part")) {
        if (0 === l.length && void 0 !== n) throw Error("there must be only one root part per container");
        o = p(e, a, l, r), null != n || (n = o);
      } else if (_t.startsWith("lit-node")) h(a, l, r);else if (_t.startsWith("/lit-part")) {
        if (1 === l.length && o !== n) throw Error("internal error");
        o = u(a, o, l);
      }
    }

    console.assert(void 0 !== n, "there should be exactly one root part in a render container"), t._$litPart$ = n;
  },
      p = function p(t, r, l, d) {
    var f, p;
    if (0 === l.length) p = new c(r, null, void 0, d), f = t;else {
      var _e = l[l.length - 1];
      if ("template-instance" === _e.type) p = new c(r, null, _e.instance, d), _e.instance.u.push(p), f = _e.result.values[_e.instancePartIndex++], _e.templatePartIndex++;else if ("iterable" === _e.type) {
        p = new c(r, null, _e.part, d);

        var _t2 = _e.iterator.next();

        if (_t2.done) throw f = void 0, _e.done = !0, Error("Unhandled shorter than expected iterable");
        f = _t2.value, _e.part._$AH.push(p);
      } else p = new c(r, null, _e.part, d);
    }
    if (f = s(p, f), f === _litHtml.noChange) l.push({
      part: p,
      type: "leaf"
    });else if ((0, _directiveHelpers.isPrimitive)(f)) l.push({
      part: p,
      type: "leaf"
    }), p._$AH = f;else if ((0, _directiveHelpers.isTemplateResult)(f)) {
      var _e2 = "lit-part " + m(f);

      if (r.data !== _e2) throw Error("Hydration value mismatch: Unexpected TemplateResult rendered to part");
      {
        var _e3 = c.prototype._$AC(f),
            _t3 = new i(_e3, p);

        l.push({
          type: "template-instance",
          instance: _t3,
          part: p,
          templatePartIndex: 0,
          instancePartIndex: 0,
          result: f
        }), p._$AH = _t3;
      }
    } else a(f) ? (l.push({
      part: p,
      type: "iterable",
      value: f,
      iterator: f[Symbol.iterator](),
      done: !1
    }), p._$AH = []) : (l.push({
      part: p,
      type: "leaf"
    }), p._$AH = null == f ? "" : f);
    return p;
  },
      u = function u(e, t, r) {
    if (void 0 === t) throw Error("unbalanced part marker");
    t._$AB = e;
    var n = r.pop();
    if ("iterable" === n.type && !n.iterator.next().done) throw Error("unexpected longer than expected iterable");
    if (r.length > 0) return r[r.length - 1].part;
  },
      h = function h(e, t, n) {
    var o;
    var i = /lit-node (\d+)/.exec(e.data),
        a = parseInt(i[1]),
        c = null !== (o = e.previousElementSibling) && void 0 !== o ? o : e.parentElement;
    if (null === c) throw Error("could not find node for attribute parts");
    c.removeAttribute("defer-hydration");
    var f = t[t.length - 1];
    if ("template-instance" !== f.type) throw Error("internal error");
    {
      var _e4 = f.instance;

      for (;;) {
        var _t4 = _e4._$AD.parts[f.templatePartIndex];
        if (void 0 === _t4 || _t4.type !== _directive.PartType.ATTRIBUTE && _t4.type !== _directive.PartType.ELEMENT || _t4.index !== a) break;

        if (_t4.type === _directive.PartType.ATTRIBUTE) {
          var _o = new _t4.ctor(c, _t4.name, _t4.strings, f.instance, n),
              _i = (0, _directiveHelpers.isSingleExpression)(_o) ? f.result.values[f.instancePartIndex] : f.result.values,
              _a = !(_o.type === _directive.PartType.EVENT || _o.type === _directive.PartType.PROPERTY);

          _o._$AI(_i, _o, f.instancePartIndex, _a), f.instancePartIndex += _t4.strings.length - 1, _e4.u.push(_o);
        } else {
          var _t5 = new d(c, f.instance, n);

          s(_t5, f.result.values[f.instancePartIndex++]), _e4.u.push(_t5);
        }

        f.templatePartIndex++;
      }
    }
  },
      m = function m(e) {
    var t = new Uint32Array(2).fill(5381);

    var _iterator = _createForOfIteratorHelper(e.strings),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _r = _step.value;

        for (var _e5 = 0; _e5 < _r.length; _e5++) {
          t[_e5 % 2] = 33 * t[_e5 % 2] ^ _r.charCodeAt(_e5);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return btoa(String.fromCharCode.apply(String, babelHelpers.toConsumableArray(new Uint8Array(t.buffer))));
  };

  _exports.digestForTemplateResult = m;
  _exports.hydrate = f;
});