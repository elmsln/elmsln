define(["exports", "./lit-html.js"], function (_exports, _litHtml) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.withStatic = _exports.unsafeStatic = _exports.svg = _exports.literal = _exports.html = void 0;

  /**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e = Symbol.for(""),
      l = function l(t) {
    if ((null == t ? void 0 : t.r) === e) return null == t ? void 0 : t._$litStatic$;
  },
      o = function o(t) {
    return {
      _$litStatic$: t,
      r: e
    };
  },
      i = function i(t) {
    for (var _len = arguments.length, r = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      r[_key - 1] = arguments[_key];
    }

    return {
      _$litStatic$: r.reduce(function (r, e, l) {
        return r + function (t) {
          if (void 0 !== t._$litStatic$) return t._$litStatic$;
          throw Error("Value passed to 'literal' function must be a 'literal' result: ".concat(t, ". Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security."));
        }(e) + t[l + 1];
      }, t[0]),
      r: e
    };
  },
      s = new Map(),
      a = function a(t) {
    return function (r) {
      for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        e[_key2 - 1] = arguments[_key2];
      }

      var o = e.length;
      var i, a;
      var n = [],
          u = [];
      var c,
          $ = 0,
          f = !1;

      for (; $ < o;) {
        for (c = r[$]; $ < o && void 0 !== (a = e[$], i = l(a));) {
          c += i + r[++$], f = !0;
        }

        u.push(a), n.push(c), $++;
      }

      if ($ === o && n.push(r[o]), f) {
        var _t = n.join("$$lit$$");

        void 0 === (r = s.get(_t)) && (n.raw = n, s.set(_t, r = n)), e = u;
      }

      return t.apply(void 0, [r].concat(babelHelpers.toConsumableArray(e)));
    };
  },
      n = a(_litHtml.html),
      u = a(_litHtml.svg);

  _exports.svg = u;
  _exports.html = n;
  _exports.withStatic = a;
  _exports.literal = i;
  _exports.unsafeStatic = o;
});