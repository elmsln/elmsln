define(["exports", "./directive-helpers.js", "./directive.js"], function (_exports, _directiveHelpers, _directive) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AsyncDirective = void 0;
  Object.defineProperty(_exports, "Directive", {
    enumerable: true,
    get: function get() {
      return _directive.Directive;
    }
  });
  Object.defineProperty(_exports, "PartType", {
    enumerable: true,
    get: function get() {
      return _directive.PartType;
    }
  });
  Object.defineProperty(_exports, "directive", {
    enumerable: true,
    get: function get() {
      return _directive.directive;
    }
  });

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var s = function s(i, t) {
    var e, o;
    var r = i._$AN;
    if (void 0 === r) return !1;

    var _iterator = _createForOfIteratorHelper(r),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _i = _step.value;
        null === (o = (e = _i)._$AO) || void 0 === o || o.call(e, t, !1), s(_i, t);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return !0;
  },
      o = function o(i) {
    var t, e;

    do {
      if (void 0 === (t = i._$AM)) break;
      e = t._$AN, e.delete(i), i = t;
    } while (0 === (null == e ? void 0 : e.size));
  },
      r = function r(i) {
    for (var _t; _t = i._$AM; i = _t) {
      var _e = _t._$AN;
      if (void 0 === _e) _t._$AN = _e = new Set();else if (_e.has(i)) break;
      _e.add(i), l(_t);
    }
  };

  function n(i) {
    void 0 !== this._$AN ? (o(this), this._$AM = i, r(this)) : this._$AM = i;
  }

  function h(i) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
    var e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var r = this._$AH,
        n = this._$AN;
    if (void 0 !== n && 0 !== n.size) if (t) {
      if (Array.isArray(r)) for (var _i2 = e; _i2 < r.length; _i2++) {
        s(r[_i2], !1), o(r[_i2]);
      } else null != r && (s(r, !1), o(r));
    } else s(this, i);
  }

  var l = function l(i) {
    var t, s, o, r;
    i.type == _directive.PartType.CHILD && (null !== (t = (o = i)._$AP) && void 0 !== t || (o._$AP = h), null !== (s = (r = i)._$AQ) && void 0 !== s || (r._$AQ = n));
  };

  var c = /*#__PURE__*/function (_t2) {
    babelHelpers.inherits(c, _t2);

    var _super = _createSuper(c);

    function c() {
      var _this;

      babelHelpers.classCallCheck(this, c);
      _this = _super.apply(this, arguments), _this._$AN = void 0;
      return _this;
    }

    babelHelpers.createClass(c, [{
      key: "_$AT",
      value: function _$AT(i, t, e) {
        babelHelpers.get(babelHelpers.getPrototypeOf(c.prototype), "_$AT", this).call(this, i, t, e), r(this), this.isConnected = i._$AU;
      }
    }, {
      key: "_$AO",
      value: function _$AO(i) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
        var e, r;
        i !== this.isConnected && (this.isConnected = i, i ? null === (e = this.reconnected) || void 0 === e || e.call(this) : null === (r = this.disconnected) || void 0 === r || r.call(this)), t && (s(this, i), o(this));
      }
    }, {
      key: "setValue",
      value: function setValue(t) {
        if ((0, _directiveHelpers.isSingleExpression)(this._$Ct)) this._$Ct._$AI(t, this);else {
          var _i3 = babelHelpers.toConsumableArray(this._$Ct._$AH);

          _i3[this._$Ci] = t, this._$Ct._$AI(_i3, this, 0);
        }
      }
    }, {
      key: "disconnected",
      value: function disconnected() {}
    }, {
      key: "reconnected",
      value: function reconnected() {}
    }]);
    return c;
  }(_directive.Directive);

  _exports.AsyncDirective = c;
});