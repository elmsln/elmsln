define(["exports", "../lit-html.js", "../directive.js"], function (_exports, _litHtml, _directive) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.guard = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var e = {},
      i = (0, _directive.directive)( /*#__PURE__*/function (_s) {
    babelHelpers.inherits(_class, _s);

    var _super = _createSuper(_class);

    function _class() {
      var _this;

      babelHelpers.classCallCheck(this, _class);
      _this = _super.apply(this, arguments), _this.ot = e;
      return _this;
    }

    babelHelpers.createClass(_class, [{
      key: "render",
      value: function render(r, t) {
        return t();
      }
    }, {
      key: "update",
      value: function update(t, _ref) {
        var _this2 = this;

        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            s = _ref2[0],
            e = _ref2[1];

        if (Array.isArray(s)) {
          if (Array.isArray(this.ot) && this.ot.length === s.length && s.every(function (r, t) {
            return r === _this2.ot[t];
          })) return _litHtml.noChange;
        } else if (this.ot === s) return _litHtml.noChange;

        return this.ot = Array.isArray(s) ? Array.from(s) : s, this.render(s, e);
      }
    }]);
    return _class;
  }(_directive.Directive));
  _exports.guard = i;
});