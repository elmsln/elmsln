define(["exports", "../../@polymer/polymer/polymer-element.js", "./lib/lrndesign-mapmenu-item.js", "./lib/lrndesign-mapmenu-submenu.js"], function (_exports, _polymerElement, _lrndesignMapmenuItem, _lrndesignMapmenuSubmenu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignMapmenu = void 0;

  var _templateObject_a9a7e4108e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
  `lrndesign-mapmenu`
  A LRN element
  
  * @demo demo/index.html
  */
  var LrndesignMapmenu = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrndesignMapmenu, _PolymerElement);

    var _super = _createSuper(LrndesignMapmenu);

    function LrndesignMapmenu() {
      babelHelpers.classCallCheck(this, LrndesignMapmenu);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrndesignMapmenu, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_a9a7e4108e0011ed99ce491205e67b1d || (_templateObject_a9a7e4108e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        #container {\n          padding: 16px 32px;\n        }\n        :host\n          > ::slotted(lrndesign-mapmenu-submenu + lrndesign-mapmenu-submenu) {\n          margin-top: 16px;\n        }\n      </style>\n      <slot></slot>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-mapmenu";
      }
    }, {
      key: "properties",
      get: function get() {
        return {};
      }
    }]);
    return LrndesignMapmenu;
  }(_polymerElement.PolymerElement);

  _exports.LrndesignMapmenu = LrndesignMapmenu;
  customElements.define(LrndesignMapmenu.tag, LrndesignMapmenu);
});