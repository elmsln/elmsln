define(["exports", "meta", "../../../lit/index.js", "../../simple-colors/simple-colors.js", "../../simple-icon/simple-icon.js"], function (_exports, meta, _index, _simpleColors, _simpleIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LessonHighlight = void 0;
  meta = _interopRequireWildcard(meta);

  var _templateObject_a0f9a810809211edaa2833647dc78c6c, _templateObject2_a0f9a810809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lesson-highlight`
   * `Clean presentation of what to expect in an upcoming lesson of instruction`
   * @demo demo/index.html
   * @element lesson-highlight
   */
  var LessonHighlight = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(LessonHighlight, _SimpleColors);

    var _super = _createSuper(LessonHighlight);

    /**
     * HTMLElement
     */
    function LessonHighlight() {
      var _this;

      babelHelpers.classCallCheck(this, LessonHighlight);
      _this = _super.call(this);
      _this.title = "";
      _this.subtitle = "";
      _this.icon = "star";
      _this.disabled = false;
      _this.loading = false;
      _this.smart = false;
      _this.hidden = false;
      _this.loaded = false; // intermittent variable for loading to force disabled
      // but we could already have been disabled so don't want to allow
      // it to trigger enabling automatically in that case

      _this.__disabled = null;
      return _this;
    }

    babelHelpers.createClass(LessonHighlight, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a0f9a810809211edaa2833647dc78c6c || (_templateObject_a0f9a810809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"wrapper\">\n        <div class=\"icon-wrapper\">\n          <simple-icon\n            class=\"icon\"\n            icon=\"", "\"\n            accent-color=\"", "\"\n            .contrast=\"", "\"\n            ?dark=\"", "\"\n          ></simple-icon>\n        </div>\n        <div></div>\n        <div class=\"text-wrapper\">\n          <div class=\"title-text\"><slot name=\"title\">", "</slot></div>\n          <div class=\"subtitle-text\">\n            <slot>", "</slot>\n          </div>\n        </div>\n      </div>\n    "])), this.loading ? "hax:loading" : this.icon, this.accentColor, this.contrast, this.dark, this.title, this.subtitle);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(LessonHighlight.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(LessonHighlight.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          // if we go into a loading state, disable the item until loading finishes
          if (propName === "loading" && _this2[propName] && _this2.smart) {
            _this2.title = "Updating ".concat(_this2.smart, " data..");
          }
        });
      }
      /**
       * haxProperties integration via file reference
       */

    }], [{
      key: "tag",
      get:
      /**
       * Convention we use
       */
      function get() {
        return "lesson-highlight";
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(LessonHighlight), "styles", this)), [(0, _index.css)(_templateObject2_a0f9a810809211edaa2833647dc78c6c || (_templateObject2_a0f9a810809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          --lesson-highlight-icon-width: 28px;\n          --lesson-highlight-icon-height: var(--lesson-highlight-icon-width);\n        }\n        :host([smart]:not([loaded]):not([loading])) {\n          display: none;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        :host([disabled]) {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n        :host([loading]) {\n          opacity: 0.6;\n          cursor: wait;\n        }\n        :host .wrapper:hover {\n          --lesson-highlight-text-color: var(\n            --simple-colors-default-theme-grey-12,\n            #222222\n          );\n          --lesson-highlight-subtext-color: var(\n            --simple-colors-default-theme-grey-12,\n            #222222\n          );\n        }\n        .wrapper {\n          display: grid;\n          grid-template-columns: 3.5em 0.5em 21em;\n          margin: var(--lesson-highlight-internal-margin, 0.25em);\n          background-color: var(--simple-colors-default-theme-grey-1, #eeeeee);\n          padding: var(--lesson-highlight-internal-padding, 0.5em);\n        }\n        .icon-wrapper {\n          padding: var(--lesson-highlight-internal-padding, 0.5em);\n          display: block;\n          margin: 0 auto;\n        }\n\n        .icon {\n          margin: 0;\n          width: var(--lesson-highlight-icon-width);\n          height: var(--lesson-highlight-icon-height);\n          --simple-icon-height: var(--lesson-highlight-icon-height);\n          --simple-icon-width: var(--lesson-highlight-icon-width);\n          border: 2px solid var(--simple-colors-default-theme-grey-4, #eeeeee);\n          border-radius: 50%;\n          padding: var(--lesson-highlight-internal-padding, 0.4em);\n          display: block;\n        }\n        .text-wrapper {\n          padding: 0 8px;\n        }\n        .title-text {\n          margin-top: var(--lesson-highlight-title-margin-top, 8px);\n        }\n        .title-text ::slotted(p),\n        .subtitle-text ::slotted(p) {\n          margin: 0;\n          padding: 0;\n        }\n        .title-text,\n        .title-text ::slotted(*) {\n          color: var(\n            --lesson-highlight-text-color,\n            var(--simple-colors-default-theme-grey-10, #222222)\n          );\n          font-family: \"OpenSans-Bold\", \"OpenSans\", \"Arial\", sans-serif;\n          font-size: 1.25em;\n          font-weight: bold;\n        }\n\n        .subtitle-text {\n          margin-top: 8px;\n        }\n\n        .subtitle-text,\n        .subtitle-text ::slotted(*) {\n          color: var(\n            --lesson-highlight-subtext-color,\n            var(--simple-colors-default-theme-grey-8, #555555)\n          );\n          font-family: \"OpenSans-Bold\", \"OpenSans\", \"Arial\", sans-serif;\n          font-size: 0.95em;\n          line-height: 1.2;\n        }\n      "])))]);
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(LessonHighlight), "properties", this)), {}, {
          title: {
            type: String
          },
          subtitle: {
            type: String
          },
          icon: {
            type: String
          },
          disabled: {
            type: Boolean,
            reflect: true
          },
          hidden: {
            type: Boolean,
            reflect: true
          },
          loading: {
            type: Boolean,
            reflect: true
          },
          loaded: {
            type: Boolean,
            reflect: true
          },
          smart: {
            type: String
          } // if this is a "smart" block or manually set

        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./".concat(this.tag, ".haxProperties.json"), meta.url).href;
      }
    }]);
    return LessonHighlight;
  }(_simpleColors.SimpleColors);

  _exports.LessonHighlight = LessonHighlight;
  customElements.define(LessonHighlight.tag, LessonHighlight);
});