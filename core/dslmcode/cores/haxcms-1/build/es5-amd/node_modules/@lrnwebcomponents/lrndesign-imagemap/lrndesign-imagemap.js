define(["exports", "require", "../../lit/index.js"], function (_exports, _require, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignImagemap = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_6cef8350809211edaa2833647dc78c6c, _templateObject2_6cef8350809211edaa2833647dc78c6c, _templateObject3_6cef8350809211edaa2833647dc78c6c, _templateObject4_6cef8350809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrndesign-imagemap`
   * @element lrndesign-imagemap
   * creates an accessible image map
   *
   *
   * @demo demo/index.html
   */
  var LrndesignImagemap = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(LrndesignImagemap, _LitElement);

    var _super = _createSuper(LrndesignImagemap);

    function LrndesignImagemap() {
      var _this;

      babelHelpers.classCallCheck(this, LrndesignImagemap);
      _this = _super.call(this);
      new Promise(function (res, rej) {
        return _require.default(["../relative-heading/relative-heading.js"], res, rej);
      }); // prettier-ignore

      new Promise(function (res, rej) {
        return _require.default(["./lib/lrndesign-imagemap-hotspot.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../simple-popover/simple-popover.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(LrndesignImagemap, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_6cef8350809211edaa2833647dc78c6c || (_templateObject_6cef8350809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <figure id=\"figure\">\n        <figcaption>\n          <relative-heading\n            disable-link\n            id=\"heading\"\n            parent=\"", "\"\n          >\n            ", "\n          </relative-heading>\n          <div id=\"desc\"><slot name=\"desc\"></slot></div>\n          <slot name=\"source\" hidden></slot>\n          <div id=\"buttons\"></div>\n        </figcaption>\n        <slot id=\"svg\" name=\"svg\"></slot>\n        <simple-popover\n          auto\n          ?hidden=\"", "\"\n          position=\"", "\"\n          .for=\"", "\"\n        >\n          <relative-heading\n            disable-link\n            class=\"sub-heading\"\n            parent=\"heading\"\n            id=\"subheading-", "\"\n          >\n            <h2>", "</h2>\n          </relative-heading>\n          <slot id=\"details\" name=\"details\"></slot>\n        </simple-popover>\n      </figure>\n      <slot></slot>\n    "])), this.parent || this.subtopicOf, this.label ? (0, _index.html)(_templateObject2_6cef8350809211edaa2833647dc78c6c || (_templateObject2_6cef8350809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <h1>", "</h1> "])), this.label) : (0, _index.html)(_templateObject3_6cef8350809211edaa2833647dc78c6c || (_templateObject3_6cef8350809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <slot name=\"heading\"></slot> "]))), !this.__activeHotspot, !this.__activeHotspot ? "bottom" : this.__activeHotspot.position, !this.__activeHotspot ? undefined : this.__activeHotspot.id, !this.__activeHotspot ? undefined : this.__activeHotspot.id, !this.__activeHotspot ? "" : this.__activeHotspot.label);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changeProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignImagemap.prototype), "firstUpdated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignImagemap.prototype), "firstUpdated", this).call(this, changeProperties);
        console.log(this.querySelector("[slot=src]") ? this.querySelector("[slot=src]") : this.src);

        this._fetchSvg(this.querySelector("[slot=src]") ? this.querySelector("[slot=src]") : this.src);
      }
    }, {
      key: "_fetchSvg",
      value: function _fetchSvg(src) {
        var _this2 = this;

        fetch(src).then(function (response) {
          return response.text();
        }).then(function (data) {
          return _this2._getSVGHandler(data);
        });
      }
      /**
       * Convert from svg text to an array in the table function
       */

    }, {
      key: "_getSVGHandler",
      value: function _getSVGHandler(data) {
        var _this3 = this;

        var loader = document.createElement("div");
        var hotspots = [];
        loader.innerHTML = data;
        var svg = loader.querySelector("svg");
        svg.slot = "svg";
        this.prepend(svg);
        console.log(this.childNodes);
        svg.setAttribute("aria-labelledBy", this._getInfoNode(svg, "title"));
        svg.setAttribute("aria-describedBy", this._getInfoNode(svg));
        this.hotspotDetails = []; // this is scrape the printable hotspots for info

        this.querySelectorAll("lrndesign-imagemap-hotspot").forEach(function (hotspot) {
          var obj = {
            id: hotspot.hotspotId,
            print: hotspot,
            hotspot: svg.querySelector("#".concat(hotspot.hotspotId)),
            label: hotspot.label,
            position: hotspot.position || "bottom",
            details: document.createElement("div")
          }; // Turning main svg interactive hotspots into buttons

          obj.hotspot.classList.add("hotspot");
          obj.hotspot.setAttribute("role", "button");
          obj.hotspot.setAttribute("controls", "figure");
          obj.hotspot.addEventListener("click", function (e) {
            return _this3.openHotspot(obj);
          }); //Copy hotspot details from printable hotspots

          hotspot.childNodes.forEach(function (node) {
            obj.details.appendChild(node.cloneNode(true));
          });
          obj.details.slot = "details";

          _this3.append(obj.details); // Get array data for hotspot


          _this3.hotspotDetails.push(obj);

          hotspots.push(hotspot.hotspotId);
        });
        this.hotspotDetails.forEach(function (obj) {
          obj.print.loadSvg(data, hotspots);
        });
      }
      /**
       * Gets / Sets description and label
       * @param {object} svg an svg element
       * @param {string} nodeName  the name of the info element (title or desc)
       * @returns {string}
       */

    }, {
      key: "_getInfoNode",
      value: function _getInfoNode(svg) {
        var nodeName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "desc";
        var nodeId = nodeName === "title" ? "heading" : nodeName;
        var node = svg.querySelector(nodeName);
        var query = this.shadowRoot.querySelector("#".concat(nodeId));

        if (!node) {
          node = document.createElement(nodeName);
          svg.prepend(node);

          if (query && query.innerHTML != "") {
            node.innerHTML == query.html;
          }
        }

        return this._getId(node);
      }
    }, {
      key: "_getId",
      value: function _getId(el) {
        var id = el ? el.getAttribute("id") : undefined;

        if (!id) {
          id = "ss-s-s-s-sss".replace(/s/g, Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1));
          el.setAttribute("id", id);
        }

        return id;
      }
      /**
       * Selects a hotspot and opens dialog with details about it.
       */

    }, {
      key: "openHotspot",
      value: function openHotspot(hotspot) {
        var _this4 = this;

        this.__activeHotspot = undefined;
        this.hotspotDetails.forEach(function (obj) {
          if (obj.id === hotspot.id) {
            obj.hotspot.classList.add("selected");
            obj.details.style.display = "block";
            _this4.__activeHotspot = obj;
          } else {
            obj.hotspot.classList.remove("selected");
            obj.details.style.display = "none";
          }
        });
      }
      /**
       * Closes a hotspot.
       */

    }, {
      key: "closeHotspot",
      value: function closeHotspot() {
        this.resetHotspots();

        this.__activeHotspot.focus();
      }
      /**
       * Closes dialog and deselects all hotspots.
       */

    }, {
      key: "resetHotspots",
      value: function resetHotspots() {
        var hotspots = this.querySelectorAll('.hotspot[role="button"]');

        for (var i = 0; i < hotspots.length; i++) {
          hotspots[i].classList.remove("selected");
        }
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject4_6cef8350809211edaa2833647dc78c6c || (_templateObject4_6cef8350809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host #buttons {\n          position: absolute;\n          left: -999999px;\n          top: 0;\n          overflow: hidden;\n          opacity: 0;\n        }\n\n        simple-popover {\n          max-width: var(--lrndesign-imagemap-popover-maxWidth, 525px);\n          max-height: var(--lrndesign-imagemap-popover-maxHeight, 300px);\n        }\n        simple-popover[for=\"\"] {\n          display: none;\n        }\n        simple-popover .sub-heading > *:first-child {\n          margin: 0 0 10px;\n        }\n\n        @media print {\n          #svg,\n          simple-popover {\n            display: none;\n          }\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-imagemap";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Label for the imagemap
           */
          label: {
            type: String
          },

          /**
           * @deprecated: (8/27/2020, after v.2.6.24) Using slot instead of the path of the SVG
           */
          src: {
            type: String
          },

          /**
           * The path of the SVG
           */
          hotspotDetails: {
            type: Array,
            attribute: "hotspot-details"
          },

          /**
           * @deprecated: (8/27/2020, after v.2.6.24) the id of the heading element that this imagemap is a subtopic of
           */
          subtopicOf: {
            type: String,
            reflect: true,
            attribute: "subtopic-of"
          },
          parent: {
            type: String,
            reflect: true,
            attribute: "parent"
          },
          __activeHotspot: {
            type: Object
          }
        };
      }
    }]);
    return LrndesignImagemap;
  }(_index.LitElement);

  _exports.LrndesignImagemap = LrndesignImagemap;
  customElements.define(LrndesignImagemap.tag, LrndesignImagemap);
});