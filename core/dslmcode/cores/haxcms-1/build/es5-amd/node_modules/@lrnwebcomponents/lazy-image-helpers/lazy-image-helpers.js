define(["exports", "../simple-icon/lib/simple-iconset.js", "../../lit/index.js", "../simple-icon/lib/simple-icons.js", "../intersection-element/lib/IntersectionObserverMixin.js", "../replace-tag/lib/LoadingHelper.js"], function (_exports, _simpleIconset, _index, _simpleIcons, _IntersectionObserverMixin, _LoadingHelper2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.lazyImageLoader = _exports.lazyImage = void 0;

  var _templateObject_a63579a08e0011ed99ce491205e67b1d, _templateObject2_a63579a08e0011ed99ce491205e67b1d, _templateObject3_a63579a08e0011ed99ce491205e67b1d, _templateObject4_a63579a08e0011ed99ce491205e67b1d, _templateObject5_a63579a08e0011ed99ce491205e67b1d;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  // lazy image loading part of an element
  var lazyImageLoader = function lazyImageLoader(SuperClass) {
    return /*#__PURE__*/function (_IntersectionObserver) {
      babelHelpers.inherits(_class, _IntersectionObserver);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.IOVisibleLimit = 0.1;
        _this.IOThresholds = [0.0, 0.1, 0.25, 0.5, 0.75, 1.0];
        _this.replacementDelay = 1000;
        _this.imageLoaded = false;
        _this.loadingImg = "loading:bars";
        return _this;
      }
      /**
       * LitElement life cycle - property changed
       */


      babelHelpers.createClass(_class, [{
        key: "updated",
        value: function updated(changedProperties) {
          var _this2 = this;

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this).call(this, changedProperties);
          }

          changedProperties.forEach(function (oldValue, propName) {
            if (propName == "imageLoaded" && !_this2.imageLoaded && _this2.shadowRoot) {
              if (_this2.shadowRoot.querySelector("image")) {
                var loadingImg = _simpleIconset.SimpleIconsetStore.getIcon(_this2.loadingImg, _this2);

                _this2.shadowRoot.querySelector("image").setAttribute("xlink:href", loadingImg);
              }
            } // only allows a max of replacementDelay before just doing it anyway


            if (propName == "elementVisible" && _this2.elementVisible && !_this2.imageLoaded) {
              clearTimeout(_this2.__debouce);
              _this2.__debouce = setTimeout(function () {
                _this2.imageLoaded = true;
              }, _this2.replacementDelay);
            }
          });
        }
      }, {
        key: "_lazyImageLoadComplete",
        value: function _lazyImageLoadComplete() {
          this.imageLoaded = true;
        }
      }, {
        key: "firstUpdated",
        value: function firstUpdated(changedProperties) {
          var _this3 = this;

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this).call(this, changedProperties);
          }

          if (this.shadowRoot.querySelector("image")) {
            var loadingImg = _simpleIconset.SimpleIconsetStore.getIcon(this.loadingImg, this);

            this.shadowRoot.querySelector("image").setAttribute("xlink:href", loadingImg);
          } // check if it completed ahead of time for really fast connections


          var img = this.shadowRoot.querySelector('img[loading="lazy"]');

          if (img.complete) {
            this._lazyImageLoadComplete();
          } else {
            img.addEventListener("load", this._lazyImageLoadComplete.bind(this));
            img.addEventListener("error", function () {
              _this3._lazyImageLoadComplete.bind(_this3);
            });
          }
        }
      }, {
        key: "renderSVGLoader",
        value: function renderSVGLoader() {
          return (0, _index.html)(_templateObject_a63579a08e0011ed99ce491205e67b1d || (_templateObject_a63579a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["", ""])), !this.imageLoaded ? (0, _index.svg)(_templateObject2_a63579a08e0011ed99ce491205e67b1d || (_templateObject2_a63579a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"max-height:400px;width:100%;margin:auto;background:#f1f2f3;display:block;z-index:1;position:relative\" preserveAspectRatio=\"xMidYMid\" viewBox=\"0 0 300 200\">\n      <image\n        xlink:href=\"\"\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      ></image>\n      </svg>"]))) : "");
        }
      }], [{
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this));
          }

          return [styles, (0, _index.css)(_templateObject3_a63579a08e0011ed99ce491205e67b1d || (_templateObject3_a63579a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n          img[loading=\"lazy\"] {\n            width: 100%;\n            margin-top: -200px;\n            min-height: 200px;\n            float: left;\n            opacity: 0;\n            transition: opacity 0.3s ease-in-out;\n          }\n          :host([image-loaded]) img[loading=\"lazy\"] {\n            margin-top: unset;\n            float: unset;\n            opacity: 1;\n          }\n        "])))];
        }
      }, {
        key: "properties",
        get: function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            imageLoaded: {
              type: Boolean,
              reflect: true,
              attribute: "image-loaded"
            }
          });
        }
      }]);
      return _class;
    }((0, _IntersectionObserverMixin.IntersectionObserverMixin)(SuperClass));
  };
  /**
   * `lazy-image-helpers`
   * `helpers for building lazy loading images`
   *
   * @microcopy - language worth noting:
   * @demo demo/index.html
   * @element lazy-image-helpers
   */


  _exports.lazyImageLoader = lazyImageLoader;

  var lazyImage = /*#__PURE__*/function (_LoadingHelper) {
    babelHelpers.inherits(lazyImage, _LoadingHelper);

    var _super2 = _createSuper(lazyImage);

    function lazyImage() {
      babelHelpers.classCallCheck(this, lazyImage);
      return _super2.apply(this, arguments);
    }

    babelHelpers.createClass(lazyImage, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject4_a63579a08e0011ed99ce491205e67b1d || (_templateObject4_a63579a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["<div class=\"image-wrap\">\n      ", "\n      <img\n        src=\"", "\"\n        alt=\"", "\"\n        aria-describedby=\"", "\"\n        loading=\"lazy\"\n      />\n    </div>"])), this.renderSVGLoader(), this.src, this.alt, this.describedBy || "");
      }
    }], [{
      key: "tag",
      get: function get() {
        return "lazy-image";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(lazyImage), "properties", this)), {}, {
          src: {
            type: String,
            reflect: true
          },

          /**
           * Alt text for image.
           */
          alt: {
            type: String,
            reflect: true
          },

          /**
           * Aria-describedby data passed down to appropriate tag
           */
          describedBy: {
            type: String,
            attribute: "described-by"
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(lazyImage), "styles", this)), [(0, _index.css)(_templateObject5_a63579a08e0011ed99ce491205e67b1d || (_templateObject5_a63579a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .image-wrap {\n          min-height: 250px;\n          max-height: 400px;\n          overflow: hidden;\n        }\n      "])))]);
      }
    }]);
    return lazyImage;
  }((0, _LoadingHelper2.LoadingHelper)(lazyImageLoader(_index.LitElement)));

  _exports.lazyImage = lazyImage;
  customElements.define(lazyImage.tag, lazyImage);
});