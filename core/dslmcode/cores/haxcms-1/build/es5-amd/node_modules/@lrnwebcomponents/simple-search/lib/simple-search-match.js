define(["exports", "../../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleSearchMatch = void 0;

  var _templateObject_a6f09a80809211edaa2833647dc78c6c, _templateObject2_a6f09a80809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `simple-search-match`
   * @element simple-search-match
   * matched term that can be searched with simple-search
   * 
  ### Styling
  
  `<simple-search-match>` provides the following custom properties
  for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--simple-search-match-font-family` | font-family for matched content | unset
  `--simple-search-match-font-weight` | font-weight for matched content | bold
  `--simple-search-match-text-color` | text color for matched content | #000
  `--simple-search-match-bg-color` | background-color for matched content | #f0f0f0
  `--simple-search-match-border-color` | border-color for matched content | #ddd
  `--simple-search-match-border` | border for matched content | 1px solid
  `--simple-search-match-border-radius` | border-radius for matched content | 0.16px
  `--simple-search-match-padding` | padding for matched conten | 0.16px 4px
   *
  
   * @demo ./demo/index.html
   */
  var SimpleSearchMatch = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SimpleSearchMatch, _LitElement);

    var _super = _createSuper(SimpleSearchMatch);

    function SimpleSearchMatch() {
      babelHelpers.classCallCheck(this, SimpleSearchMatch);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(SimpleSearchMatch, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a6f09a80809211edaa2833647dc78c6c || (_templateObject_a6f09a80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <slot></slot> "])));
      }
    }], [{
      key: "tag",
      get: function get() {
        return "simple-search-match";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SimpleSearchMatch), "properties", this)), {}, {
          matchNumber: {
            type: Number,
            reflect: true,
            attribute: "match-number"
          }
        });
      } // render function

    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject2_a6f09a80809211edaa2833647dc78c6c || (_templateObject2_a6f09a80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          margin-right: 4px;\n          font-family: var(--simple-search-match-font-family, unset);\n          color: var(--simple-search-match-text-color, #000);\n          background-color: var(--simple-search-match-bg-color, #f0f0f0);\n          border: var(--simple-search-match-border, 1px solid);\n          border-color: var(--simple-search-match-border-color, #ddd);\n          padding: var(--simple-search-match-padding, 0.16px 0px 0.16px 4px);\n          border-radius: var(--simple-search-match-border-radius, 0.16px);\n          font-weight: var(--simple-search-match-font-weight, bold);\n        }\n      "])))];
      }
    }]);
    return SimpleSearchMatch;
  }(_index.LitElement);

  _exports.SimpleSearchMatch = SimpleSearchMatch;
  customElements.define(SimpleSearchMatch.tag, SimpleSearchMatch);
});