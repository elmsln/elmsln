define(["exports", "require", "../../../../../lit/index.js", "../../core/haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js", "../../../../utils/utils.js", "../../core/utils/HAXCMSThemeParts.js", "../../core/utils/HAXCMSI18NMixin.js"], function (_exports, _require, _index, _haxcmsSiteStore, _mobxEsm, _utils, _HAXCMSThemeParts, _HAXCMSI18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteGitCorner = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_fa687f908e0011ed99ce491205e67b1d, _templateObject2_fa687f908e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var SiteGitCorner = /*#__PURE__*/function (_HAXCMSI18NMixin) {
    babelHelpers.inherits(SiteGitCorner, _HAXCMSI18NMixin);

    var _super = _createSuper(SiteGitCorner);

    function SiteGitCorner() {
      var _this;

      babelHelpers.classCallCheck(this, SiteGitCorner);
      _this = _super.call(this);
      _this.t = _this.t || {};
      _this.t.seePageSource = "See page source";
      _this.circle = false;
      _this.direction = "right";
      _this.activeGitFileLink = "";
      _this.__disposer = [];
      (0, _mobxEsm.autorun)(function (reaction) {
        if ((0, _utils.varGet)(_haxcmsSiteStore.store.manifest, "metadata.site.git.publicRepoUrl", "") != "" && !window.customElements.get("git-corner")) {
          new Promise(function (res, rej) {
            return _require.default(["../../../../git-corner/git-corner.js"], res, rej);
          });
        }

        _this.__disposer.push(reaction);
      });
      (0, _mobxEsm.autorun)(function (reaction) {
        if (_haxcmsSiteStore.store.activeItem) {
          var filePath = (0, _utils.varGet)(_haxcmsSiteStore.store.manifest, "metadata.site.git.publicRepoUrl", "") + _haxcmsSiteStore.store.activeItem.location; // 11ty has a very unique setting for source vs input
          // @note let's try to do this as little as possible..


          if (window.HAXCMSContext == "11ty") {
            filePath = filePath.replace("/src/./pages/", "/src/content/");
          }

          _this.activeGitFileLink = filePath;
        }

        _this.__disposer.push(reaction);
      });
      return _this;
    }

    babelHelpers.createClass(SiteGitCorner, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_fa687f908e0011ed99ce491205e67b1d || (_templateObject_fa687f908e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <git-corner\n        .part=\"", "\"\n        size=\"", "\"\n        ?circle=\"", "\"\n        id=\"git-corner\"\n        source=\"", "\"\n      ></git-corner>\n      <simple-tooltip for=\"git-corner\" position=\"auto\">\n        ", "\n      </simple-tooltip>\n    "])), this.editMode ? "edit-mode-active" : "", this.size, this.circle, this.activeGitFileLink, this.t.seePageSource);
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteGitCorner.prototype), "disconnectedCallback", this).call(this);
      }
    }], [{
      key: "tag",
      get: function get() {
        return "site-git-corner";
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SiteGitCorner), "styles", this)), [(0, _index.css)(_templateObject2_fa687f908e0011ed99ce491205e67b1d || (_templateObject2_fa687f908e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          float: var(--site-git-corner-float);\n        }\n        :host([direction=\"right\"]) {\n          float: right;\n        }\n        :host([direction=\"left\"]) {\n          float: left;\n        }\n        git-corner {\n          --github-corner-color: var(--site-git-corner-color);\n          --github-corner-background: var(--site-git-corner-background);\n        }\n      "])))]);
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          circle: {
            type: Boolean
          },
          size: {
            type: String
          },
          activeGitFileLink: {
            type: String,
            attribute: "active-git-file-link"
          },
          direction: {
            type: String,
            reflect: true
          },
          t: {
            type: Object
          }
        };
      }
    }]);
    return SiteGitCorner;
  }((0, _HAXCMSI18NMixin2.HAXCMSI18NMixin)((0, _HAXCMSThemeParts.HAXCMSThemeParts)(_index.LitElement)));

  _exports.SiteGitCorner = SiteGitCorner;
  customElements.define(SiteGitCorner.tag, SiteGitCorner);
});