"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleIconButton = void 0;

var _litElement = require("lit");

var _simpleColors = require("@lrnwebcomponents/simple-colors/simple-colors.js");

var _simpleIconButtonLite = require("./simple-icon-button-lite.js");

require("./simple-icons.js");

require("../simple-icon.js");

function _typeof(obj) {
  if (typeof Symbol === "function" && babelHelpers.typeof(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return babelHelpers.typeof(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : babelHelpers.typeof(obj);
    };
  }

  return _typeof(obj);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _templateObject_ea5f6d208e0011ed99ce491205e67b1d() {
  var data = _taggedTemplateLiteral(['\n      <button \n        ?autofocus="', '"\n        aria-labelledby="', '"\n        .aria-pressed="', '"\n        controls="', '"\n        part="button"\n        ?disabled="', '"\n        form="', '"\n        label="', '"\n        aria-label="', '"\n        name="', '"\n        .type="', '"\n        value="', '">\n        <simple-icon\n          part="icon"\n          icon="', '"\n          accent-color="', '"\n          contrast="', '"\n          ?dark="', '"\n        ></simple-icon>\n      </button>\n    ']);

  _templateObject_ea5f6d208e0011ed99ce491205e67b1d = function _templateObject_ea5f6d208e0011ed99ce491205e67b1d() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

function _classCallCheck(instance, Constructor) {
  if (!babelHelpers.instanceof(instance, Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 *
 * @class SimpleIconButtonBehaviors
 */


var SimpleIconButton = /*#__PURE__*/function (_SimpleIconButtonBeha) {
  _inherits(SimpleIconButton, _SimpleIconButtonBeha);

  _createClass(SimpleIconButton, null, [{
    key: "tag",

    /**
     * This is a convention, not the standard
     */
    get: function get() {
      return "simple-icon-button";
    }
  }]);

  function SimpleIconButton() {
    var _this;

    _classCallCheck(this, SimpleIconButton);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleIconButton).call(this));
    _this.accentColor = "grey";
    _this.contrast = 4;
    _this.dark = false;
    return _this;
  } // render function


  _createClass(SimpleIconButton, [{
    key: "render",
    value: function render() {
      return (0, _litElement.html)(_templateObject_ea5f6d208e0011ed99ce491205e67b1d(), this.autofocus, this.ariaLabelledby, this.toggles || this.toggled ? "true" : this.toggles ? "false" : undefined, this.controls, this.disabled, this.form, this.label, this.label, this.fieldName, this.type, this.value, this.icon, this.accentColor, this.contrast, this.dark);
    } // properties available to the custom element for data binding

  }], [{
    key: "properties",
    get: function get() {
      return _objectSpread({}, _get(_getPrototypeOf(SimpleIconButton), "properties", this), {
        contrast: {
          type: Number,
          reflect: true
        }
      });
    }
  }]);

  return SimpleIconButton;
}((0, _simpleIconButtonLite.SimpleIconButtonBehaviors)(_simpleColors.SimpleColors));

exports.SimpleIconButton = SimpleIconButton;
customElements.define(SimpleIconButton.tag, SimpleIconButton);