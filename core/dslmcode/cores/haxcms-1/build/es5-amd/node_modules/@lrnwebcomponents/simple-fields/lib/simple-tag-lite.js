define(["exports", "../../../lit/index.js", "../../simple-icon/lib/simple-icon-button-lite.js"], function (_exports, _index, _simpleIconButtonLite) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleTagLiteSuper = _exports.SimpleTagLite = void 0;

  var _templateObject_a65cbef0809211edaa2833647dc78c6c, _templateObject2_a65cbef0809211edaa2833647dc78c6c, _templateObject3_a65cbef0809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   *
   * @customElement
   * @element simple-tag
   * @class SimpleTag
   * @extends {LitElement}
   * @demo ./demo/tags.html Demo
   */
  var SimpleTagLiteSuper = function SimpleTagLiteSuper(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.data = {};
        _this.icon = "cancel";
        _this.cancelButton = false;
        _this.disabled = false;
        _this.readonly = false;
        return _this;
      }

      babelHelpers.createClass(_class, [{
        key: "render",
        value: function render() {
          return (0, _index.html)(_templateObject_a65cbef0809211edaa2833647dc78c6c || (_templateObject_a65cbef0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        <span>", "<slot></slot></span>\n        ", "\n      "])), this.value, !!this.readonly ? "" : (0, _index.html)(_templateObject2_a65cbef0809211edaa2833647dc78c6c || (_templateObject2_a65cbef0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <simple-icon-button-lite\n                icon=\"", "\"\n                label=\"Remove ", "\"\n                ?hidden=\"", "\"\n                @click=\"", "\"\n                ?disabled=\"", "\"\n                ?toggles=\"", "\"\n                ?toggled=\"", "\"\n              ></simple-icon-button-lite>\n            "])), !!this.toggles && !!this.toggled && !!this.toggledIcon ? this.toggledIcon : this.icon, this.value, !this.cancelButton, this.clickEvent, this.disabled, this.toggles, this.toggled));
        }
      }, {
        key: "clickEvent",
        value: function clickEvent(e) {
          if (!!this.toggles) this.toggled = !this.toggled;
          this.dispatchEvent(new CustomEvent("simple-tag-clicked", {
            composed: false,
            bubbles: false,
            cancelable: false,
            detail: {
              value: this.value
            }
          }));
        }
      }], [{
        key: "properties",
        get: function get() {
          var props = {};

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)) {
            props = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this);
          }

          return _objectSpread(_objectSpread({}, props), {}, {
            readonly: {
              type: Boolean,
              reflect: true
            },
            icon: {
              type: String
            },
            disabled: {
              type: Boolean,
              reflect: true
            },
            value: {
              type: String
            },
            data: {
              type: Object
            },
            cancelButton: {
              type: Boolean,
              attribute: "cancel-button"
            },
            toggles: {
              type: Boolean,
              attribute: "toggles"
            },
            toggled: {
              type: Boolean,
              attribute: "toggled"
            },
            toggledIcon: {
              type: String,
              attribute: "toggled-icon"
            }
          });
        }
      }, {
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this);
          }

          return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject3_a65cbef0809211edaa2833647dc78c6c || (_templateObject3_a65cbef0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          :host {\n            display: inline-flex;\n            align-items: center;\n            color: var(\n              --simple-fields-button-color,\n              var(--simple-fields-color)\n            );\n            background-color: var(\n              --simple-fields-button-background-color,\n              var(--simple-fields-background-color)\n            );\n            font-size: var(--simple-fields-font-size, 16px);\n            font-family: var(--simple-fields-font-family, sans-serif);\n            line-height: var(--simple-fields-line-height, 22px);\n            border-radius: var(--simple-fields-tag-border-radius, 4px);\n            padding: var(--simple-fields-button-padding, 2px)\n              calc(2 * var(--simple-fields-button-padding, 2px));\n            border-width: 1px;\n            border-style: solid;\n            border-color: var(\n              --simple-fields-fieldset-border-color,\n              var(--simple-fields-border-color-light, #ccc)\n            );\n          }\n          :host([draggable=\"true\"]) {\n            cursor: move;\n          }\n          simple-icon-button-lite {\n            cursor: pointer;\n            margin-left: 4px;\n            --simple-icon-height: var(--simple-fields-font-size, 16px);\n            --simple-icon-width: var(--simple-fields-font-size, 16px);\n          }\n          :host([hidden]) {\n            display: none;\n          }\n          :host([disabled]):not([readonly]) {\n            opacity: 0.5;\n          }\n        "])))]);
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.SimpleTagLiteSuper = SimpleTagLiteSuper;

  var SimpleTagLite = /*#__PURE__*/function (_SimpleTagLiteSuper) {
    babelHelpers.inherits(SimpleTagLite, _SimpleTagLiteSuper);

    var _super2 = _createSuper(SimpleTagLite);

    function SimpleTagLite() {
      babelHelpers.classCallCheck(this, SimpleTagLite);
      return _super2.apply(this, arguments);
    }

    babelHelpers.createClass(SimpleTagLite, null, [{
      key: "tag",
      get: function get() {
        return "simple-tag-lite";
      }
    }]);
    return SimpleTagLite;
  }(SimpleTagLiteSuper(_index.LitElement));

  _exports.SimpleTagLite = SimpleTagLite;
  customElements.define(SimpleTagLite.tag, SimpleTagLite);
});