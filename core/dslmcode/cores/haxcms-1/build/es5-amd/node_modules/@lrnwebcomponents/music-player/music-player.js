define(["exports", "meta", "require", "../../lit/index.js"], function (_exports, meta, _require, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MusicPlayer = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_6ec5c9f0809211edaa2833647dc78c6c, _templateObject2_6ec5c9f0809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `music-player`
   * `Visualize different types of music and simple format player`
   *
   * @demo demo/index.html
   * @element music-player
   */
  var MusicPlayer = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(MusicPlayer, _LitElement);

    var _super = _createSuper(MusicPlayer);

    /**
     * HTMLElement
     */
    function MusicPlayer() {
      var _this;

      babelHelpers.classCallCheck(this, MusicPlayer);
      _this = _super.call(this);
      _this.noWaterfall = false;
      _this.noVisual = false;
      _this.visualizer = "staff";
      return _this;
    } //styles function


    babelHelpers.createClass(MusicPlayer, [{
      key: "render",
      value: // render function
      function render() {
        return (0, _index.html)(_templateObject_6ec5c9f0809211edaa2833647dc78c6c || (_templateObject_6ec5c9f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <midi-visualizer\n        type=\"", "\"\n        src=\"", "\"\n      ></midi-visualizer>\n      <midi-player src=\"", "\" sound-font></midi-player>\n    "])), this.visualizer, this.source, this.source);
      } // properties available to the custom element for data binding

    }, {
      key: "firstUpdated",
      value:
      /**
       * LitElement life cycle - 1st updated
       */
      function firstUpdated() {
        var _this2 = this;

        this.visualizerElement = this.shadowRoot.querySelector("midi-visualizer");
        setTimeout(function () {
          new Promise(function (res, rej) {
            return _require.default(["./lib/html-midi-player.js"], res, rej);
          }).then(function (module) {
            // associate the visualizer to the player
            _this2.shadowRoot.querySelector("midi-player").addVisualizer(_this2.visualizerElement);
          });
        }, 0);
      }
      /**
       * Attached to the DOM, now fire.
       */

    }], [{
      key: "tag",
      get:
      /**
       * Convention we use
       */
      function get() {
        return "music-player";
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject2_6ec5c9f0809211edaa2833647dc78c6c || (_templateObject2_6ec5c9f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n        midi-player {\n          display: block;\n          width: var(--music-player-midi-player-width, unset);\n          margin: var(--music-player-midi-player-margin, 4px);\n        }\n        :host([no-visual]) midi-visualizer {\n          display: none;\n        }\n\n        :host([no-waterfall]) midi-visualizer .waterfall-notes-container {\n          display: none;\n        }\n        midi-visualizer .waterfall-visualizer {\n          overflow: auto;\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          source: {
            type: String
          },
          visualizer: {
            type: String
          },
          noWaterfall: {
            type: Boolean,
            attribute: "no-waterfall",
            reflect: true
          },
          noVisual: {
            type: Boolean,
            attribute: "no-visual",
            reflect: true
          }
        };
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./lib/".concat(this.tag, ".haxProperties.json"), meta.url).href;
      }
    }]);
    return MusicPlayer;
  }(_index.LitElement);

  _exports.MusicPlayer = MusicPlayer;
  customElements.define(MusicPlayer.tag, MusicPlayer);
});