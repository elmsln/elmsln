define(["exports", "require", "../../../lit/index.js", "../../accent-card/accent-card.js", "../../../@github/time-elements/dist/index.js", "../../nav-card/nav-card.js", "../../hexagon-loader/hexagon-loader.js", "../../simple-icon/lib/simple-icon-lite.js", "../../hax-iconset/lib/simple-hax-iconset.js", "./elmsln-studio-link.js", "./elmsln-studio-button.js"], function (_exports, _require, _index, _accentCard, _index2, _navCard, _hexagonLoader, _simpleIconLite, _simpleHaxIconset, _elmslnStudioLink, _elmslnStudioButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudioUtilities = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_9e431390809211edaa2833647dc78c6c, _templateObject2_9e431390809211edaa2833647dc78c6c, _templateObject3_9e431390809211edaa2833647dc78c6c, _templateObject4_9e431390809211edaa2833647dc78c6c, _templateObject5_9e431390809211edaa2833647dc78c6c, _templateObject6_9e431390809211edaa2833647dc78c6c, _templateObject7_9e431390809211edaa2833647dc78c6c, _templateObject8_9e431390809211edaa2833647dc78c6c, _templateObject9_9e431390809211edaa2833647dc78c6c, _templateObject10_9e431390809211edaa2833647dc78c6c, _templateObject11_9e431390809211edaa2833647dc78c6c, _templateObject12_9e431390809211edaa2833647dc78c6c, _templateObject13_9e431390809211edaa2833647dc78c6c, _templateObject14_9e431390809211edaa2833647dc78c6c, _templateObject15_9e431390809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var ElmslnStudioUtilities = function ElmslnStudioUtilities(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.demoMode = false;
        new Promise(function (res, rej) {
          return _require.default(["../../lrndesign-avatar/lrndesign-avatar.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["../../simple-tooltip/simple-tooltip.js"], res, rej);
        });
        return _this;
      }
      /**
       * default toolbar config object,
       * where "top" contains config for toolbar above image(s),
       * and "bottom" contains config for toolbar above image(s)
       * @return {object} as { top: { id="top", contents:[]},  id="bottom", contents:[]}, }
       *
       * @readonly
       * @memberof imgViewViewer
       */


      babelHelpers.createClass(_class, [{
        key: "defaultModalToolbars",
        get: function get() {
          return {
            bottom: {
              id: "bottom",
              type: "toolbar-group",
              contents: ["prevbutton", "homebutton", "rotategroup", "zoomgroup", "pageXofY", "pangroup", "fullscreenbutton", "nextbutton"]
            }
          };
        }
        /**
         * sorts array by most recent (or by oldest)
         * @param {array} arr array
         * @param {boolean} sort by most recent? (default is true)
         * @returns {arr} sorted array
         */

      }, {
        key: "sortDates",
        value: function sortDates(arr) {
          var oldest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          return arr.sort(function (a, b) {
            var aa = typeof a.date === "string" ? Date.parse(a.date) : a.date,
                bb = typeof b.date === "string" ? Date.parse(b.date) : b.date;
            return !oldest ? bb - aa : aa - bb;
          });
        }
        /**
         * gets date x days from start date
         * @param {date} start starting date
         * @param {number} days number of weeks
         * @returns {date}
         */

      }, {
        key: "addDays",
        value: function addDays() {
          var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
          var amt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          return new Date(Date.parse(start) + amt * 86400000);
        }
        /**
         * gets date x weeks from start date
         * @param {date} start starting date
         * @param {number} weeks number of weeks
         * @returns {date}
         */

      }, {
        key: "addWeeks",
        value: function addWeeks() {
          var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
          var amt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          return new Date(Date.parse(start) + amt * 604800000);
        }
        /**
         * convert object to array
         * @param {object} obj object to convert
         * @param {props} additional properties to set
         * @returns {array}
         */

      }, {
        key: "toArray",
        value: function toArray(obj, props) {
          return Object.keys(obj || {}).map(function (i) {
            var item = obj[i];
            item.id = i;
            Object.keys(props || {}).forEach(function (j) {
              return item[j] = props[j];
            });
            return item;
          });
        }
      }, {
        key: "isEarly",
        value: function isEarly(due, submitted) {
          return new Date(due) > (new Date(submitted) || new Date());
        }
      }, {
        key: "onTime",
        value: function onTime(due, submitted) {
          return new Date(due) === (new Date(submitted) || new Date());
        }
      }, {
        key: "isLate",
        value: function isLate(due, submitted) {
          return new Date(due) < (submitted ? new Date(submitted) : new Date());
        }
      }, {
        key: "getStatus",
        value: function getStatus(submission, assignment, ifOverdue, ifLate, ifSubmitted, ifElse) {
          var late = !!submission && !!submission.date && !!assignment.date && submission.date > assignment.date,
              overdue = !submission && !!assignment.date && this.isLate(assignment.date);
          return overdue ? ifOverdue : late ? ifLate : submission ? ifSubmitted : ifElse;
        }
      }, {
        key: "getStatusIcon",
        value: function getStatusIcon(submission, assignment) {
          return this.getStatus(submission, assignment, "report-problem", "assignment-late", "assignment-turned-in", "assignment");
        }
      }, {
        key: "getStatusColor",
        value: function getStatusColor(submission, assignment) {
          return this.getStatus(submission, assignment, "red", "amber", "green", "grey");
        }
      }, {
        key: "getStatusMessage",
        value: function getStatusMessage(submission, assignment) {
          return this.getStatus(submission, assignment, "Overdue", "Submitted Late", "Submitted", "Not Submitted");
        }
        /**
         * converts and sorts arrat
         * @param {object} obj object to convert
         * @returns {array}
         */

      }, {
        key: "_recentArray",
        value: function _recentArray(arr) {
          return this.sortDates(this.toArray(arr));
        } //submission  assignmnent assignmentId

      }, {
        key: "getAncestor",
        value: function getAncestor(child, path) {
          if (child && path && path.length > 0) {
            var foreignkey = path[0][1],
                parent = path[0][0],
                key = child["".concat(path[0][1])];
            return this.getAncestor(parent[key], path.slice(1));
          } else {
            return child;
          }
        }
        /**
         * gets figures for img-view-modal
         *
         * @param {array} sources
         * @returns
         */

      }, {
        key: "getFigures",
        value: function getFigures(sources) {
          var src = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "src";
          var alt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "alt";
          var full = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "full";
          var longdesc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "longdesc";
          //console.log('getFigures',sources);
          var images = (sources || []).map(function (source) {
            return {
              src: source[full] || source[src],
              info: source[alt] && source[longdesc] ? (0, _index.html)(_templateObject_9e431390809211edaa2833647dc78c6c || (_templateObject_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <p>", ":</p>\n                  <div>", "</div>\n                "])), source[alt], source[longdesc]) : source[alt] ? (0, _index.html)(_templateObject2_9e431390809211edaa2833647dc78c6c || (_templateObject2_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" ", " "])), source[alt]) : (0, _index.html)(_templateObject3_9e431390809211edaa2833647dc78c6c || (_templateObject3_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" ", " "])), source[longdesc])
            };
          });
          return images.filter(function (s) {
            return !!s.src;
          });
        }
      }, {
        key: "getThumnailGrid",
        value: function getThumnailGrid(s) {
          var _this2 = this;

          var disabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          return (0, _index.html)(_templateObject4_9e431390809211edaa2833647dc78c6c || (_templateObject4_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        <div class=\"thumbnail-grid\">\n          ", "\n        </div>\n      "])), (s.sources || []).map(function (source, i) {
            return (0, _index.html)(_templateObject5_9e431390809211edaa2833647dc78c6c || (_templateObject5_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <img-view-modal\n                class=\"thumbnail\"\n                ?disabled=\"", "\"\n                page=\"", "\"\n                title=\"", " by ", " ", "\"\n                .toolbars=\"", "\"\n                .figures=\"", "\"\n              >\n                <button\n                  ?disabled=\"", "\"\n                  id=\"view-thumb-", "\"\n                  .style=\"", "\"\n                >\n                  <span class=\"sr-only\">", "</span>\n                  <div class=\"zoombg\"></div>\n                  <simple-icon-lite\n                    icon=\"zoom-in\"\n                    class=\"zoomicon\"\n                  ></simple-icon-lite>\n                  <div class=\"imgbg\"></div>\n                </button>\n                <simple-tooltip for=\"view-thumb-", "\"\n                  >View Thumbnail</simple-tooltip\n                >\n              </img-view-modal>\n            "])), disabled, i, s.assignment, s.firstName, s.lastName, _this2.defaultModalToolbars, _this2.getFigures(s.sources), disabled, s.id, _this2.getThumbailStyle(source.src), source.alt, s.id);
          }));
        }
      }, {
        key: "getThumbailStyle",
        value: function getThumbailStyle(src) {
          return "--elmsln-studio-image-button-backgroundImage: url(".concat(src, ");");
        }
        /**
         * gets fullname from user data
         * @param {object} user data containing firstName and lastName
         * @param {boolean} sortable last name first
         * @returns {string} `Firstname Lastname` (or if sortable, `Lastname, Firstname`)
         */

      }, {
        key: "fullName",
        value: function fullName(user) {
          var sortable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          return user && !sortable ? "".concat(user.firstName, " ").concat(user.lastName) : user ? "".concat(user.lastName, ", ").concat(user.firstName) : "";
        }
        /**
         * gets formatted date
         * @param {object} date
         * @param {format} long (Weekday, Month, Day, Year), short (Month, Day), or default (Month, Day, Year)
         * @returns {string} date as string
         */

      }, {
        key: "dateFormat",
        value: function dateFormat(d, format) {
          if (typeof d === "string") d = new Date(d);
          return !d ? "" : format === "long" ? d.toLocaleDateString(undefined, {
            weekday: "long",
            year: "numeric",
            month: "long",
            day: "numeric"
          }) : format === "short" ? d.toLocaleDateString(undefined, {
            month: "long",
            day: "numeric"
          }) : d.toLocaleDateString(undefined, {
            year: "numeric",
            month: "long",
            day: "numeric"
          });
        }
        /**
         * gets a custom accent color based on a string
         * @param {string} string used to calculate accent color
         * @returns {string} accent color
         */

      }, {
        key: "accentColor",
        value: function accentColor(str) {
          var card = document.createElement("accent-card"),
              colors = !card || !card.colors ? [""] : Object.keys(card.colors),
              i = str && str.charCodeAt(0) ? str.charCodeAt(0) : Math.floor(Math.random() * 16);
          return colors[i % 16 + 1] ? colors[i % 16 + 1] : colors[Math.floor(Math.random() * colors.length)];
        }
      }, {
        key: "getActivityLink",
        value: function getActivityLink(activity) {
          var nocomment = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var sort = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          return activity.activity === "submission" ? "project/".concat(activity.portfolioId || activity.id).concat(activity.portfolioId ? "?submission=".concat(activity.id) : "").concat(nocomment ? "" : activity.portfolioId ? "&comment=true&sort-latest=".concat(sort) : "?comment=true&sort-latest=".concat(sort)) : activity.activity === "discussion" ? "project/".concat(activity.projectId || activity.submissionId).concat(activity.portfolioId ? "?submission=".concat(activity.submissionId, "&") : "?", "comment=").concat(activity.id) : "project/".concat(activity.projectId || activity.submissionId).concat(activity.portfolioId ? "?submission=".concat(activity.submissionId, "&") : "?", "comment=").concat(activity.feedbackId);
        }
      }, {
        key: "getActivityTitle",
        value: function getActivityTitle(activity) {
          return (0, _index.html)(_templateObject6_9e431390809211edaa2833647dc78c6c || (_templateObject6_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        ", "\n      "])), activity.activity === "submission" ? "".concat([activity.firstName, activity.lastName].join(" "), " submitted ").concat(activity.assignment) : activity.activity === "discussion" ? "".concat([activity.firstName, activity.lastName].join(" "), "'s feedback on ").concat([activity.creatorFirstName, activity.creatorLastName].join(" "), "'s ").concat(activity.assignment) : "".concat([activity.firstName, activity.lastName].join(" "), " replied to ").concat([activity.reviewerFirstName, activity.reviewerLastName].join(" ")));
        }
        /**
         * gets link of a given activity
         * @param {object} activity object
         * @param {string} type of activtiy
         * @returns {string} link
         */

      }, {
        key: "activityLink",
        value: function activityLink(activity, type) {
          if (type === "submission") {
            return this.submissionLink(activity);
          } else if (activity.activity === "feedback") {
            return this.feedbackLink(activity);
          } else {
            return this.replyLink(activity);
          }
        }
        /**
         * gets title of a given activity
         * @param {object} activity object
         * @param {string} type of activtiy
         * @returns {string} title
         */

      }, {
        key: "activityTitle",
        value: function activityTitle(activity, type) {
          if (type === "submission") {
            return this.submissionTitle(activity);
          } else if (activity.activity === "feedback") {
            return this.feedbackTitle(activity);
          } else {
            return this.replyTitle(activity);
          }
        }
        /**
         * gets link to given submission
         * @param {object} submission object
         * @returns {string} link
         */

      }, {
        key: "submissionLink",
        value: function submissionLink(submission) {
          return "project/".concat(submission.userId, "-").concat(submission.projectId, "?submission=").concat(submission.id);
        }
        /**
         * gets title of a given submission
         * @param {object} submission object
         * @returns {string} title
         */

      }, {
        key: "submissionTitle",
        value: function submissionTitle(submission) {
          return "".concat(submission.firstName, " submitted ").concat(submission.assignment);
        }
        /**
         * gets link to given feedback
         * @param {object} feedback object
         * @returns {string} link
         */

      }, {
        key: "feedbackLink",
        value: function feedbackLink(feedback) {
          return "project/".concat(feedback.creator, "-").concat(feedback.projectId, "?submission=").concat(feedback.submissionId, "&comment=").concat(feedback.id);
        }
        /**
         * gets title of given feedback
         * @param {object} feedback object
         * @returns {string} title
         */

      }, {
        key: "feedbackTitle",
        value: function feedbackTitle(feedback) {
          return "".concat(feedback.firstName, " left feedback on ").concat(feedback.creatorFirstName, "'s\n        ").concat(feedback.assignment);
        }
        /**
         * gets link to given reply
         * @param {object} reply object
         * @returns {string} link
         */

      }, {
        key: "replyLink",
        value: function replyLink(reply) {
          return "portfolios/".concat(reply.creator, "-").concat(reply.projectId, "?submission=").concat(reply.submissionId, "&comment=").concat(reply.id);
        }
        /**
         * gets title of a given reply
         * @param {object} reply object
         * @returns {string} title
         */

      }, {
        key: "replyTitle",
        value: function replyTitle(reply) {
          return "".concat(reply.firstName, " replied to ").concat(reply.feedbackFirstName, "'s feedback");
        }
      }, {
        key: "getFeedbackIcon",
        value: function getFeedbackIcon(comments) {
          if (comments === 0) {
            return "communication:comment";
          } else if (comments < 10) {
            return "hax:messages-".concat(comments);
          }

          return "hax:messages-9-plus";
        }
      }, {
        key: "rubricTable",
        value: function rubricTable(rubric) {
          return !rubric ? "" : (0, _index.html)(_templateObject7_9e431390809211edaa2833647dc78c6c || (_templateObject7_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n            <table class=\"rubric-table\">\n              <caption>\n                Rubric\n              </caption>\n              ", "\n              <tbody>\n                ", "\n              </tbody>\n            </table>\n          "])), !rubric.key || !rubric.key ? "" : (0, _index.html)(_templateObject8_9e431390809211edaa2833647dc78c6c || (_templateObject8_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                    <thead>\n                      <th scope=\"col\">Criteria</th>\n                      ", "\n                    </thead>\n                  "])), rubric.key.map(function (col) {
            return (0, _index.html)(_templateObject9_9e431390809211edaa2833647dc78c6c || (_templateObject9_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<th scope=\"col\">\n                          ", "\n                        </th>"])), col.description && (col.points || col.points > -1) ? "".concat(col.description, " (").concat(col.points, ")") : col.description || col.points);
          })), Object.keys(rubric.values || {}).map(function (key) {
            return (0, _index.html)(_templateObject10_9e431390809211edaa2833647dc78c6c || (_templateObject10_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                      <tr>\n                        <th scope=\"row\">", "</th>\n                        ", "\n                      </tr>\n                    "])), key, (rubric.values[key] || []).map(function (col) {
              return (0, _index.html)(_templateObject11_9e431390809211edaa2833647dc78c6c || (_templateObject11_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<td>", "</td>"])), col);
            }));
          }));
        }
      }, {
        key: "_getValign",
        value: function _getValign(gravity) {
          return gravity && gravity.indexOf("top") > -1 ? "top" : gravity && gravity.indexOf("bottom") > -1 ? "bottom" : "center";
        }
      }, {
        key: "_getAlign",
        value: function _getAlign(gravity) {
          return gravity && gravity.indexOf("left") > -1 ? "left" : gravity && gravity.indexOf("right") > -1 ? "right" : "center";
        }
      }, {
        key: "message404",
        value: function message404(type, backLabel, backHref) {
          return (0, _index.html)(_templateObject12_9e431390809211edaa2833647dc78c6c || (_templateObject12_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <div id=\"primary\" class=\"primary-404\">\n        <p id=\"message-404\">\n          ", " with this URL does not exist. Return to\n          <elmsln-studio-link href=\"", "\">\n            ", "</elmsln-studio-link\n          >\n          to search for assignment.\n        </p>\n      </div>"])), type, backHref, backLabel);
        }
      }, {
        key: "prevNextNav",
        value: function prevNextNav(prevLabel, prevHref, nextLabel, nextHref) {
          return (0, _index.html)(_templateObject13_9e431390809211edaa2833647dc78c6c || (_templateObject13_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        <div id=\"prev-next-nav\">\n          <elmsln-studio-link\n            href=\"", "\"\n            ?disabled=\"", "\"\n            icon=\"chevron-left\"\n          >\n            <span class=\"prev-next-label\">\n              <span>Previous</span>\n              <span>", "</span>\n            </span>\n          </elmsln-studio-link>\n          <elmsln-studio-link\n            href=\"", "\"\n            ?disabled=\"", "\"\n            icon=\"chevron-right\"\n          >\n            <span slot=\"before\" class=\"prev-next-label\">\n              <span>Next</span>\n              <span>", "</span>\n            </span>\n          </elmsln-studio-link>\n        </div>\n      "])), prevHref, !prevHref, prevLabel, nextHref, !nextHref, nextLabel);
        }
      }, {
        key: "loading",
        value: function loading(color, slot) {
          var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "small";
          return !slot ? (0, _index.html)(_templateObject14_9e431390809211edaa2833647dc78c6c || (_templateObject14_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<hexagon-loader\n            loading\n            item-count=\"3\"\n            size=\"", "\"\n            color=\"", "\"\n          >\n          </hexagon-loader>"])), size, color) : (0, _index.html)(_templateObject15_9e431390809211edaa2833647dc78c6c || (_templateObject15_9e431390809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<hexagon-loader\n            loading\n            item-count=\"3\"\n            size=\"", "\"\n            color=\"", "\"\n            slot=\"", "\"\n          >\n          </hexagon-loader>"])), size, color, slot);
        }
        /**
         * handles buttons that work like links
         *
         * @param {*} e event
         * @param {string} path
         */

      }, {
        key: "submitData",
        value: function submitData(type, data) {
          /**
           * Fires when button is clicked
           *
           * @event submit-data
           */
          console.log("submitData", type, data);
          this.dispatchEvent(new CustomEvent("submit-data", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: {
              type: type,
              data: data
            }
          }));
        }
        /**
         * handles buttons that work like links
         *
         * @param {*} e event
         * @param {string} path
         */

      }, {
        key: "fetchData",
        value: function fetchData(type) {
          var refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          /**
           * Fires when button is clicked
           *
           * @event fetch-data
           */
          this.dispatchEvent(new CustomEvent("fetch-data", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: {
              type: type,
              refresh: refresh
            }
          }));
        }
        /**
         * handles buttons that work like links
         *
         * @param {*} e event
         * @param {string} path
         */

      }, {
        key: "_handleLinkButton",
        value: function _handleLinkButton(e, path) {
          location.href = path;
          /**
           * Fires when button is clicked
           *
           * @event link-button-click
           */

          this.dispatchEvent(new CustomEvent("link-button-click", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: path
          }));
        }
      }], [{
        key: "properties",
        get: // properties available to the custom element for data binding
        function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            demoMode: {
              type: Boolean,
              attribute: "demo-mode",
              reflect: true
            }
          });
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.ElmslnStudioUtilities = ElmslnStudioUtilities;
});