define(["exports", "require", "../../../lit/index.js", "./editable-table-behaviors.js", "../../responsive-utility/lib/responsive-utility-behaviors.js", "../../simple-picker/simple-picker.js", "../../simple-toolbar/lib/simple-toolbar-button.js"], function (_exports, _require, _index, _editableTableBehaviors, _responsiveUtilityBehaviors, _simplePicker, _simpleToolbarButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EditableTableDisplay = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_9d647360809211edaa2833647dc78c6c, _templateObject2_9d647360809211edaa2833647dc78c6c, _templateObject3_9d647360809211edaa2833647dc78c6c, _templateObject4_9d647360809211edaa2833647dc78c6c, _templateObject5_9d647360809211edaa2833647dc78c6c, _templateObject6_9d647360809211edaa2833647dc78c6c, _templateObject7_9d647360809211edaa2833647dc78c6c, _templateObject8_9d647360809211edaa2833647dc78c6c, _templateObject9_9d647360809211edaa2833647dc78c6c, _templateObject10_9d647360809211edaa2833647dc78c6c, _templateObject11_9d647360809211edaa2833647dc78c6c, _templateObject12_9d647360809211edaa2833647dc78c6c, _templateObject13_9d647360809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `editable-table-display`
   * `An editor interface for editable-table
   *
   * @demo ./demo/editor.html
   * @customElement
   * @extends displayBehaviors
   * @extends editableTableDisplayStyles
   * @extends ResponsiveUtilityBehaviors
   * @extends LitElement
   */
  var EditableTableDisplay = /*#__PURE__*/function (_displayBehaviors) {
    babelHelpers.inherits(EditableTableDisplay, _displayBehaviors);

    var _super = _createSuper(EditableTableDisplay);

    function EditableTableDisplay() {
      var _this;

      babelHelpers.classCallCheck(this, EditableTableDisplay);
      _this = _super.call(this);
      _this.selected = 1;
      _this.sortMode = "none";
      _this.sortColumn = -1;
      _this.filterContains = true;
      new Promise(function (res, rej) {
        return _require.default(["./editable-table-sort.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["./editable-table-filter.js"], res, rej);
      }); // notice changes and update the data to match

      _this._observer = new MutationObserver(function (mutations) {
        if (_this.shadowRoot) {
          _this.importHTML(_this.children.item(0));
        }
      });

      _this._observer.observe(babelHelpers.assertThisInitialized(_this), {
        childList: true,
        subtree: true
      });

      return _this;
    }

    babelHelpers.createClass(EditableTableDisplay, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _index.html)(_templateObject_9d647360809211edaa2833647dc78c6c || (_templateObject_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <table\n        id=\"table\"\n        ?bordered=\"", "\"\n        class=\"table\"\n        ?column-header=\"", "\"\n        ?column-striped=\"", "\"\n        ?condensed=\"", "\"\n        ?filter=\"", "\"\n        ?footer=\"", "\"\n        ?hidden=\"", "\"\n        ?numeric-styles=\"", "\"\n        ?row-header=\"", "\"\n        ?sort=\"", "\"\n        ?striped=\"", "\"\n        part=\"table\"\n      >\n        <caption part=\"caption\">\n          <div>\n            <div>", "</div>\n            <div>\n              ", "\n              ", "\n            </div>\n          </div>\n        </caption>\n        <thead ?hidden=\"", "\" class=\"thead\" part=\"thead\">\n          <tr class=\"tr thead-tr\" part=\"tr\">\n            ", "\n          </tr>\n        </thead>\n        <tbody class=\"tbody\" part=\"tbody\">\n          ", "\n        </tbody>\n        ", "\n      </table>\n      <div id=\"htmlImport\" hidden><slot></slot></div>\n    "])), this.bordered, this.columnHeader, this.columnStriped, this.condensed, this.filter, this.footer, this.hidden || this.disabled, this.numericStyles, this.rowHeader, this.sort, this.striped, this.getHTML(this.caption), !this.downloadable ? "" : (0, _index.html)(_templateObject2_9d647360809211edaa2833647dc78c6c || (_templateObject2_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                    <simple-toolbar-button\n                      id=\"download\"\n                      icon=\"file-download\"\n                      label=\"Download as CSV.\"\n                      @click=\"", "\"\n                    >\n                    </simple-toolbar-button>\n                  "])), this.download), !this.printable ? "" : (0, _index.html)(_templateObject3_9d647360809211edaa2833647dc78c6c || (_templateObject3_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                    <simple-toolbar-button\n                      id=\"print\"\n                      icon=\"print\"\n                      label=\"Print Table\"\n                      @click=\"", "\"\n                    >\n                    </simple-toolbar-button>\n                  "])), this.print), !this.columnHeader, (this.thead[0] || []).map(function (th, index) {
          return (0, _index.html)(_templateObject4_9d647360809211edaa2833647dc78c6c || (_templateObject4_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                <th\n                  class=\"th th-or-td\"\n                  cell-index=\"", "\"\n                  ?numeric=\"", "\"\n                  scope=\"col\"\n                  part=\"th\"\n                  ?xs-hidden=\"", "\"\n                >\n                  ", "\n                  ", "\n                </th>\n              "])), index, _this2._isNumericColumn(index), _this2._isColHidden(index, _this2.selected || 1), !_this2.sort ? _this2.getHTML(_this2._replaceBlankCell(th)) : (0, _index.html)(_templateObject5_9d647360809211edaa2833647dc78c6c || (_templateObject5_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                        <editable-table-sort\n                          column-index=\"", "\"\n                          sort-column=\"", "\"\n                          sort-mode=\"", "\"\n                        >\n                          ", "\n                        </editable-table-sort>\n                      "])), index, _this2.sortColumn, _this2.sortColumn === index ? _this2.sortMode : "none", _this2.getHTML(_this2._replaceBlankCell(th))), !_this2.disableResponsive && index > 0 && _this2.selected == index ? (0, _index.html)(_templateObject6_9d647360809211edaa2833647dc78c6c || (_templateObject6_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <simple-picker\n                          id=\"simple-picker-", "\"\n                          class=\"column\"\n                          align-right\n                          aria-label=\"Select Column\"\n                          @change=\"", "\"\n                          hide-sample\n                          .options=\"", "\"\n                          .value=\"", "\"\n                        >\n                        </simple-picker>\n                        <simple-tooltip\n                          position=\"top\"\n                          for=\"simple-picker-", "\"\n                          aria-hidden=\"true\"\n                          >Select Column</simple-tooltip\n                        >"])), index, _this2._selectedChanged, _this2.options, index, index) : "");
        }), this.sortedTbody.map(function (tr) {
          return _this2._isRowFiltered(tr) ? "" : _this2._tbodyTr(tr);
        }), !this.footer ? "" : (0, _index.html)(_templateObject7_9d647360809211edaa2833647dc78c6c || (_templateObject7_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <tfoot class=\"tfoot\" part=\"tfoot\">\n                ", "\n              </tfoot>\n            "])), this._tbodyTr(this.tfoot[0], true, true)));
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableDisplay.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableDisplay.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "data") _this3.disabled = !_this3.data || _this3.data.length < 1 || _this3.data[0].length < 1;

          if (["disabled", "hidden"].includes(propName) && !_this3.hidden && !_this3.disabled) {
            _this3.toggleFilter();
          }
        });
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this4 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableDisplay.prototype), "connectedCallback", this).call(this);
        setTimeout(function () {
          _this4.addEventListener("change-sort-mode", _this4._changeSortMode.bind(_this4));

          _this4.addEventListener("toggle-filter", _this4.toggleFilter.bind(_this4));
        }, 0);
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("change-sort-mode", this._changeSortMode.bind(this));
        this.removeEventListener("toggle-filter", this.toggleFilter.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableDisplay.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       *
       * Gets columns in `<thead>`
       * @readonly
       * @memberof EditableTableDisplay
       */

    }, {
      key: "options",
      get: function get() {
        var head = this.thead || [[]],
            cols = (head[0] || []).map(function (th, i) {
          return [{
            alt: th,
            value: i
          }];
        });
        return cols;
      }
    }, {
      key: "sortedTbody",
      get: function get() {
        var _this5 = this;

        if (this.sortMode !== "none" && this.sortMode !== false) {
          var temp = this.tbody.map(function (row) {
            return [row[_this5.sortColumn]].concat(babelHelpers.toConsumableArray(row));
          });

          if (this.sortMode === "asc") {
            temp.sort();
          } else {
            temp.reverse();
          }

          return temp.map(function (row) {
            return row.slice(1, row.length);
          });
        }

        return this.tbody;
      }
      /**
       * Handle filter button click
       *
       * @param {event} e event
       * @memberof EditableTableDisplay
       */

    }, {
      key: "toggleFilter",
      value: function toggleFilter(e) {
        if (e === undefined || this.filterColumn == e.detail.columnIndex && this.filtered) {
          this.filtered = false;
          this.filterText = undefined;
          this.filterColumn = undefined;
        } else {
          this.filterText = e.detail.text;
          this.filterColumn = e.detail.columnIndex;
          this.filtered = true;
        }
      }
      /**
       * Fires when data changed
       * @event change
       * @param {event} event
       */

    }, {
      key: "_dataChanged",
      value: function _dataChanged(newValue, oldValue) {
        if (!newValue || newValue.length < 1 || newValue[0].length < 1) {
          var table = this.children.item(0);

          if (babelHelpers.typeof(table) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && table !== null && table.tagName === "TABLE") {
            this.importHTML(table);
          }
        }

        this.dispatchEvent(new CustomEvent("change", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: newValue
        }));
      }
      /**
       * Handles sort button click
       * @param {event} e event
       */

    }, {
      key: "_changeSortMode",
      value: function _changeSortMode(e) {
        if (this.sortColumn === e.detail.columnIndex && this.sortMode === "asc") {
          this.sortMode = "desc";
        } else if (this.sortColumn === e.detail.columnIndex && this.sortMode === "desc") {
          this.sortMode = "none";
        } else {
          this.sortMode = "asc";
          this.sortColumn = e.detail.columnIndex;
        }
      }
      /**
       * Determines whether or not a cell is hidden in responsive mode
       * @param {number} index current column number
       * @param {number} selected selected column number
       * @returns {boolean} whether column is hidden (i.e. not selected column)
       */

    }, {
      key: "_isColHidden",
      value: function _isColHidden(index) {
        var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
        selected = selected || 1;
        return parseInt(index) !== 0 && parseInt(index) !== parseInt(selected);
      }
      /**
       * Sets a column's cells to filtered when in filtered mode so that filter can toggle
       * @param {number} index current column number
       * @param {number} selected filtered column number
       * @param {boolean} filtered is table in filtered mode
       * @returns {boolean} whether column is filtered
       */

    }, {
      key: "_isCellFiltered",
      value: function _isCellFiltered(column, filterColumn, filtered) {
        return !!filterColumn && filterColumn === column && filtered;
      }
      /**
       * Handles column  selector change
       */

    }, {
      key: "_selectedChanged",
      value: function _selectedChanged(e) {
        if (!!e.detail.value) this.selected = e.detail.value;
      }
      /**
       * Handles table change
       */

    }, {
      key: "_tableChanged",
      value: function _tableChanged() {
        this.selected = 1;
      }
      /**
       * table row template
       *
       * @param {array} [row=[]] array of cells
       * @param {boolean} [noFilter=false] has filter buttons
       * @param {boolean} [tfoot=false] is a footer row
       * @returns {html}
       * @memberof EditableTableDisplay
       */

    }, {
      key: "_tbodyTr",
      value: function _tbodyTr() {
        var _this6 = this;

        var row = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var noFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var tfoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        return (0, _index.html)(_templateObject8_9d647360809211edaa2833647dc78c6c || (_templateObject8_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <tr class=\"tr ", "\">\n        ", "\n      </tr>\n    "])), tfoot ? "tfoot-tr" : "tbody-tr", row.map(function (cell, index) {
          return _this6._isRowHeader(_this6.rowHeader, index) ? _this6._tbodyTh(cell, index) : _this6._tbodyTd(cell, index, noFilter);
        }));
      }
      /**
       * table header template
       *
       * @param {string} cell cell contents
       * @param {number} index column number
       * @returns {html}
       * @memberof EditableTableDisplay
       */

    }, {
      key: "_tbodyTh",
      value: function _tbodyTh(cell, index) {
        return (0, _index.html)(_templateObject9_9d647360809211edaa2833647dc78c6c || (_templateObject9_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<th\n      class=\"th th-or-td\"\n      cell-index=\"", "\"\n      ?numeric=\"", "\"\n      scope=\"row\"\n      ?xs-hidden=\"", "\"\n    >\n      ", "\n    </th>"])), index, this._isNumericColumn(index), this._isColHidden(index, this.selected || 1), this.getHTML(this._replaceBlankCell(cell)));
      }
      /**
       * table cell template
       *
       * @param {*} cell cell contents
       * @param {*} index column number
       * @param {boolean} [noFilter=false] whether to include a filter button
       * @returns {html}
       * @memberof EditableTableDisplay
       */

    }, {
      key: "_tbodyTd",
      value: function _tbodyTd(cell, index) {
        var noFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        return (0, _index.html)(_templateObject10_9d647360809211edaa2833647dc78c6c || (_templateObject10_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<td\n      part=\"td\"\n      class=\"td th-or-td\"\n      cell-index=\"", "\"\n      ?numeric=\"", "\"\n      ?negative=\"", "\"\n      ?xs-hidden=\"", "\"\n    >\n      ", "\n    </td>"])), index, this._isNumericColumn(index), this._isNegative(cell), this._isColHidden(index, this.selected || 1), this.filter ? (0, _index.html)(_templateObject11_9d647360809211edaa2833647dc78c6c || (_templateObject11_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n            <editable-table-filter\n              class=\"cell\"\n              column-index=\"", "\"\n              text=\"", "\"\n              ?toggled=\"", "\"\n            >\n              ", "\n            </editable-table-filter>\n          "])), index, this._replaceBlankCell(cell), this._isCellFiltered(index, this.filterColumn, this.filtered), this.getHTML(this._replaceBlankCell(cell))) : !noFilter ? (0, _index.html)(_templateObject12_9d647360809211edaa2833647dc78c6c || (_templateObject12_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<span class=\"cell\"\n            >", "</span\n          >"])), this.getHTML(this._replaceBlankCell(cell))) : this.getHTML(this._replaceBlankCell(cell)));
      }
      /**
       * update responsive columns menu
       */

    }, {
      key: "_updateCols",
      value: function _updateCols(index) {
        var selected = this.shadowRoot.querySelector("#column").value,
            cols = this.shadowRoot.querySelector("#table").querySelectorAll("th,td");

        if (cols.length > 0) {
          for (var i = 0; i < cols.length; i++) {
            var col = cols[i];

            if (this._isColHidden(col.cellIndex, selected)) {
              col.setAttribute("xs-hidden", true);
            } else {
              col.removeAttribute("xs-hidden");
            }
          }
        }
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableDisplay), "styles", this) || []), babelHelpers.toConsumableArray(_editableTableBehaviors.editableTableDisplayStyles), [(0, _index.css)(_templateObject13_9d647360809211edaa2833647dc78c6c || (_templateObject13_9d647360809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host([hidden]),\n        :host([disabled]) {\n          display: none !important;\n        }\n        [part=\"caption\"] simple-toolbar-button {\n          --simple-toolbar-button-bg: var(--editable-table-bg-color, #fff);\n          --simple-toolbar-button-toggled-bg: var(\n            --editable-table-stripe-bg-color,\n            #f0f0f0\n          );\n          --simple-toolbar-button-hover-bg: var(\n            --editable-table-bg-color,\n            #fff\n          );\n          --simple-toolbar-button-border-color: var(\n            --editable-table-border-color,\n            #999\n          );\n          --simple-toolbar-button-toggled-border-color: var(\n            --editable-table-color,\n            #222\n          );\n          --simple-toolbar-button-hover-border-color: unset;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "editable-table-display";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread(_objectSpread({}, _editableTableBehaviors.displayBehaviors.properties), _responsiveUtilityBehaviors.ResponsiveUtilityBehaviors.properties), {}, {
          /**
           * Index of current filter column
           */
          filterColumn: {
            type: Number,
            attribute: "filter-column"
          },

          /**
           * whether column only needs to contain filter text
           * instead of default requiriwhich requires an exact match
           */
          filterContains: {
            type: Boolean,
            attribute: "filter-contains"
          },

          /**
           * whether filter is case sensitive
           */
          filterCaseSensitive: {
            type: Boolean,
            attribute: "filter-case-sensitive"
          },

          /**
           * Whether table is filtered
           */
          filtered: {
            type: Boolean
          },

          /**
           * Text for Filtering
           */
          filterText: {
            type: String,
            attribute: "filter-text"
          },

          /**
           * Selected column to display when in responsive mode
           */
          selected: {
            type: Number
          },

          /**
           * Sort mode: ascending, descending or none
           */
          sortMode: {
            type: String,
            attribute: "sort-mode"
          },

          /**
           * Index of current sort column
           */
          sortColumn: {
            type: Number,
            attribute: "sort-column"
          }
        });
      }
    }]);
    return EditableTableDisplay;
  }((0, _editableTableBehaviors.displayBehaviors)((0, _responsiveUtilityBehaviors.ResponsiveUtilityBehaviors)(_index.LitElement)));

  _exports.EditableTableDisplay = EditableTableDisplay;
  customElements.define(EditableTableDisplay.tag, EditableTableDisplay);
});