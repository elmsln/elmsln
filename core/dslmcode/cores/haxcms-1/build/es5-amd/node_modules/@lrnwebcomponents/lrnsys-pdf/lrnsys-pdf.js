define(["exports", "require", "../../@polymer/polymer/polymer-element.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, _require, _polymerElement, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysPdf = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_6dd109b0809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrnsys-pdf`
   * @element lrnsys-pdf
   * @demo demo/index.html
   */
  var LrnsysPdf = /*#__PURE__*/function (_SchemaBehaviors) {
    babelHelpers.inherits(LrnsysPdf, _SchemaBehaviors);

    var _super = _createSuper(LrnsysPdf);

    function LrnsysPdf() {
      var _this;

      babelHelpers.classCallCheck(this, LrnsysPdf);
      _this = _super.call(this);
      new Promise(function (res, rej) {
        return _require.default(["../pdf-browser-viewer/pdf-browser-viewer.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(LrnsysPdf, [{
      key: "_computeDownloadLabel",
      value:
      /**
       * See if we should supply a label.
       */
      function _computeDownloadLabel(download) {
        if (download) {
          return "Download";
        } else {
          return null;
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_6dd109b0809211edaa2833647dc78c6c || (_templateObject_6dd109b0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <h2>[[title]]</h2>\n      <pdf-browser-viewer\n        id=\"pdfViewer\"\n        file=\"[[file]]#page=[[page]]\"\n        width=\"100%\"\n        card=\"[[card]]\"\n        elevation=\"2\"\n        download-label=\"[[downloadLabel]]\"\n      ></pdf-browser-viewer>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-pdf";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysPdf), "properties", this)), {}, {
          /**
           * Title prior to the PDF
           */
          title: {
            type: String,
            value: "lrnsys-pdf"
          },

          /**
           * Whether or not to present this as a card.
           */
          card: {
            type: Boolean,
            value: false
          },

          /**
           * Download Label.
           */
          downloadLabel: {
            type: String,
            computed: "_computeDownloadLabel(download)"
          },

          /**
           * Active Page
           */
          page: {
            type: String
          },

          /**
           * File to present
           */
          file: {
            type: String
          }
        });
      }
    }]);
    return LrnsysPdf;
  }((0, _schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement));

  _exports.LrnsysPdf = LrnsysPdf;
  customElements.define(LrnsysPdf.tag, LrnsysPdf);
});