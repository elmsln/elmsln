define(["exports", "meta", "require", "../../lit/index.js", "../../mobx/dist/mobx.esm.js", "../utils/utils.js", "../simple-tooltip/simple-tooltip.js", "../simple-colors/simple-colors.js", "./lib/v1/AppHaxStore.js", "./lib/v1/AppHaxBackendAPI.js", "../simple-popover/lib/simple-tour.js", "../simple-colors-shared-styles/simple-colors-shared-styles.js", "./lib/v1/AppHaxRouter.js", "./lib/v1/app-hax-label.js", "./lib/v1/app-hax-top-bar.js", "../simple-popover/lib/SimpleTourFinder.js"], function (_exports, meta, _require, _index, _mobxEsm, _utils, _simpleTooltip, _simpleColors, _AppHaxStore, _AppHaxBackendAPI, _simpleTour, _simpleColorsSharedStyles, _AppHaxRouter, _appHaxLabel, _appHaxTopBar, _SimpleTourFinder2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppHax = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_9f762e208e0011ed99ce491205e67b1d, _templateObject2_9f762e208e0011ed99ce491205e67b1d, _templateObject3_9f762e208e0011ed99ce491205e67b1d, _templateObject4_9f762e208e0011ed99ce491205e67b1d, _templateObject5_9f762e208e0011ed99ce491205e67b1d, _templateObject6_9f762e208e0011ed99ce491205e67b1d, _templateObject7_9f762e208e0011ed99ce491205e67b1d, _templateObject8_9f762e208e0011ed99ce491205e67b1d, _templateObject9_9f762e208e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && babelHelpers.instanceof(outerFn.prototype, Generator) ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers.typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var haxLogo = new URL("./lib/assets/images/HAXLogo.svg", meta.url).href;
  var logoutBtn = new URL("./lib/assets/images/Logout.svg", meta.url).href;
  var helpBtn = new URL("./lib/assets/images/Help.svg", meta.url).href; // toggle store darkmode

  function darkToggle(e) {
    if (e.matches) {
      // dark mode
      _AppHaxStore.store.darkMode = true;
    } else {
      // light mode
      _AppHaxStore.store.darkMode = false;
    }
  }

  function soundToggle() {
    _AppHaxStore.store.soundStatus = !(0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus);
    (0, _utils.localStorageSet)("app-hax-soundStatus", (0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus));

    _AppHaxStore.store.appEl.playSound("click");
  }

  var AppHax = /*#__PURE__*/function (_SimpleTourFinder) {
    babelHelpers.inherits(AppHax, _SimpleTourFinder);

    var _super = _createSuper(AppHax);

    function AppHax() {
      var _this;

      babelHelpers.classCallCheck(this, AppHax);
      _this = _super.call(this);
      _this.__tour = _simpleTour.SimpleTourManager;

      _this.__tour.registerNewTour({
        key: "hax",
        name: "Let's learn HAX",
        style: "\n      simple-popover-manager::part(simple-popover) {\n        max-width: 250px;\n      }\n      simple-popover-manager button {\n        font-family: 'Press Start 2P', sans-serif;\n        font-size: 12px;\n        margin: 0px 2px;\n        color: var(--simple-colors-default-theme-grey-12);\n      }\n      simple-popover-manager p {\n        font-family: 'Press Start 2P', sans-serif;\n        padding: 0;\n        margin: 0;\n        width: 250px;\n        font-size: 12px;\n        line-height: 20px;\n      }\n      simple-popover-manager h1 {\n        font-family: 'Press Start 2P', sans-serif;\n        margin: 0;\n        font-size: 12px;\n        width: 250px;\n        padding: 0;\n      }\n      simple-popover-manager::part(simple-popover-body),\n      simple-popover-manager::part(simple-popover-heading) {\n        color: black;\n        background-color: white;\n      }\n      body.dark-mode simple-popover-manager::part(simple-popover-body),\n      body.dark-mode simple-popover-manager::part(simple-popover-heading) {\n        color: white;\n        background-color: black;\n      }\n      body.dark-mode simple-popover-manager simple-icon-button-lite {\n        color: white;\n        background-color: black;\n      }\n      "
      });

      _this.tourName = "hax"; // manage title when activeItem changes

      (0, _mobxEsm.autorun)(function () {
        var item = (0, _mobxEsm.toJS)(_AppHaxStore.store.activeItem);

        if (item && item.title) {
          _AppHaxStore.store.setPageTitle(item.title);
        }
      });
      (0, _mobxEsm.autorun)(function () {
        _this.siteReady = (0, _mobxEsm.toJS)(_AppHaxStore.store.siteReady);
      });
      (0, _mobxEsm.autorun)(function () {
        var badDevice = (0, _mobxEsm.toJS)(_AppHaxStore.store.badDevice);

        if (badDevice === false) {
          new Promise(function (res, rej) {
            return _require.default(["../rpg-character/rpg-character.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["./lib/random-word/random-word.js"], res, rej);
          });
        } else if (badDevice === true) {
          document.body.classList.add("bad-device");
        }
      });
      _this.userMenuOpen = false;
      _this.courses = [];
      _this.activeItem = {};
      _this.phrases = {
        new: ["What's ya name?", "HAX to the moon", "Welcome to the Jungle", "We like to party", "Build something awesome", "Everything is awesome!", "Everything is cool when you're part of the team", "When you're living our dream"],
        return: ["Welcome back, take 2?", "That wasn't very long", "Sup?", "You again? Awesome!", "Let's do this", "There can only be one ring...", "There is another", "Fancy that, I love HAX and you show up"]
      };
      _this.isNewUser = null;
      _this.basePath = "/";
      _this.searchTerm = "";
      _this.appMode = "";
      _this.soundIcon = ""; // full on store that does the heavy lifting

      _this.store = _AppHaxStore.store; // centralized sound source to not flood sounds when playing

      _this.sound = new Audio(); // @todo need this from app deploy itself

      (0, _mobxEsm.autorun)(function () {
        _this.isNewUser = (0, _mobxEsm.toJS)(_AppHaxStore.store.isNewUser);

        if (_this.isNewUser && (0, _mobxEsm.toJS)(_AppHaxStore.store.appMode) !== "create" && (0, _mobxEsm.toJS)(_AppHaxStore.store.appMode) !== "404") {
          _AppHaxStore.store.appMode = "create";
          setTimeout(function () {
            _AppHaxStore.store.createSiteSteps = true;
          }, 0);
        }
      });
      (0, _mobxEsm.autorun)(function () {
        _this.userName = (0, _mobxEsm.toJS)(_AppHaxStore.store.user.name);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.appMode = (0, _mobxEsm.toJS)(_AppHaxStore.store.appMode);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.searchTerm = (0, _mobxEsm.toJS)(_AppHaxStore.store.searchTerm);
      });
      /**
       * When location changes update activeItem / mode of app
       */

      (0, _mobxEsm.autorun)( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var location;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                location = (0, _mobxEsm.toJS)(_AppHaxStore.store.location);

                if (location && location.route) {
                  // verify this is a step vs other operations
                  if (!location.route.step) {
                    // support external site links
                    if (location.route.slug) {
                      _this.reset();

                      setTimeout(function () {
                        window.location = location.route.slug;
                      }, 0);
                    } // page miss is high check too
                    else if (location.route.name === "404") {
                        _AppHaxStore.store.createSiteSteps = false;
                        _AppHaxStore.store.appMode = "404";
                        setTimeout(function () {
                          _AppHaxStore.store.toast("the page miss.. it burns!!!", 3000, {
                            fire: true,
                            walking: true
                          });
                        }, 500);
                      } // then home / landing page which is default expectation
                      else if (location.route.name === "home" || location.route.name === "search") {
                          _AppHaxStore.store.appMode = "home";
                          _AppHaxStore.store.createSiteSteps = false;
                        } else {//console.warn(location.route);
                        }
                  } else {
                    // we have a "step" based operation
                    _AppHaxStore.store.appMode = "create";
                    _AppHaxStore.store.createSiteSteps = true;
                  }
                }

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      })));
      (0, _mobxEsm.autorun)(function () {
        if (_AppHaxStore.store.routes.length > 0 && _AppHaxStore.store.location === null) {
          _AppHaxStore.store.location = (0, _mobxEsm.toJS)(_AppHaxStore.store.routes[0]);
        }
      }); // manage dark mode
      // only set this initially if we don't have an app state of our own

      if ((0, _utils.localStorageGet)("app-hax-darkMode", null) === null) {
        _AppHaxStore.store.darkMode = window.matchMedia("(prefers-color-scheme: dark)").matches;
      }

      (0, _mobxEsm.autorun)(function () {
        (0, _utils.localStorageSet)("app-hax-darkMode", (0, _mobxEsm.toJS)(_AppHaxStore.store.darkMode));

        if ((0, _mobxEsm.toJS)(_AppHaxStore.store.darkMode)) {
          document.body.classList.add("dark-mode");

          _AppHaxStore.store.toast("I'm ascared of the dark", 2000, {
            fire: true
          });

          _this.dark = true;
        } else {
          document.body.classList.remove("dark-mode");

          _AppHaxStore.store.toast("Sunny day it is", 2000, {
            hat: "random"
          });

          _this.dark = false;
        }
      });
      (0, _mobxEsm.autorun)(function () {
        var mode = (0, _mobxEsm.toJS)(_AppHaxStore.store.appMode);

        if (mode) {
          document.body.classList.remove("app-hax-search");
          document.body.classList.remove("app-hax-create");
          document.body.classList.remove("app-hax-404");
          document.body.classList.remove("app-hax-home");
          document.body.classList.add("app-hax-".concat(mode));
        }
      });
      return _this;
    }

    babelHelpers.createClass(AppHax, [{
      key: "playSound",
      value: // eslint-disable-next-line class-methods-use-this
      function playSound(sound) {
        if (_AppHaxStore.store.soundStatus && _AppHaxStore.store.appReady) {
          var playSound = ["click", "click2", "coin", "coin2", "hit", "success"].includes(sound) ? sound : "hit";
          this.audio = new Audio(new URL("./lib/assets/sounds/".concat(playSound, ".mp3"), meta.url).href);
          this.audio.volume = 0.5;
          this.audio.play();
        }
      }
      /**
       * A token refresh just failed so force to login prompt / state
       */

    }, {
      key: "_tokenRefreshFailed",
      value: function _tokenRefreshFailed(e) {
        var _this2 = this;

        window.dispatchEvent(new CustomEvent("jwt-login-logout", {
          composed: true,
          bubbles: true,
          cancelable: false,
          detail: true
        }));
        setTimeout(function () {
          _this2.reset(true);
        }, 100);
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "connectedCallback", this).call(this);
        window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", darkToggle);
        window.addEventListener("jwt-logged-in", this._jwtLoggedIn.bind(this));
        window.addEventListener("jwt-login-refresh-error", this._tokenRefreshFailed.bind(this));
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.matchMedia("(prefers-color-scheme: dark)").removeEventListener("change", darkToggle);
        window.removeEventListener("jwt-logged-in", this._jwtLoggedIn.bind(this));
        window.removeEventListener("jwt-login-refresh-error", this._tokenRefreshFailed.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "reset",
      value: // eslint-disable-next-line class-methods-use-this
      function reset() {
        var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        // localStorage possible to be blocked by permission of system
        try {
          window.localStorage.removeItem("app-hax-step");
          window.localStorage.removeItem("app-hax-site");

          if (reload) {
            // should always be a base tag for a SPA but just checking
            if (document.querySelector("base")) {
              window.location = document.querySelector("base").href;
            } else {
              window.location.reload();
            }
          }
        } catch (e) {//console.warn(e);
        }
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "logout",
      value: function logout() {
        window.dispatchEvent(new CustomEvent("jwt-login-logout", {
          composed: true,
          bubbles: true,
          cancelable: false,
          detail: true
        }));
        this.closeMenu();
        this.__logoutUserAction = true;
      } // only care about logouts

    }, {
      key: "_jwtLoggedIn",
      value: function _jwtLoggedIn(e) {
        var _this3 = this;

        if (e.detail === false && this.__logoutUserAction) {
          this.__logoutUserAction = false;
          setTimeout(function () {
            _this3.reset(true);
          }, 100);
        }
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "login",
      value: function login() {
        var _this4 = this;

        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-site-login.js"], res, rej);
        }).then(function () {
          var p = document.createElement("app-hax-site-login");

          if (_this4.querySelector('[slot="externalproviders"]')) {
            var cloneSlot = _this4.querySelector('[slot="externalproviders"]').cloneNode(true);

            p.appendChild(cloneSlot);
          }

          new Promise(function (res, rej) {
            return _require.default(["../simple-modal/simple-modal.js"], res, rej);
          }).then(function () {
            setTimeout(function () {
              _this4.dispatchEvent(new CustomEvent("simple-modal-show", {
                bubbles: true,
                cancelable: true,
                composed: true,
                detail: {
                  title: "< login >",
                  elements: {
                    content: p
                  },
                  modal: true,
                  styles: {
                    "--simple-modal-titlebar-background": "transparent",
                    "--simple-modal-titlebar-color": "black",
                    "--simple-modal-width": "40vw",
                    "--simple-modal-min-width": "300px",
                    "--simple-modal-z-index": "100000000",
                    "--simple-modal-height": "62vh",
                    "--simple-modal-min-height": "400px",
                    "--simple-modal-titlebar-height": "64px"
                  }
                }
              }));
            }, 0);
          });
        });
      }
    }, {
      key: "helpClick",
      value: function helpClick() {
        // start the tour
        _AppHaxStore.store.appEl.playSound("coin2");

        this.__tour.startTour("hax");
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this5 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "updated", this).call(this, changedProperties);
        } // update the store as these get set via entrypoint of the app
        // but used downstream in calls


        changedProperties.forEach(function (oldValue, propName) {
          // API backend broker settings
          if (["basePath"].includes(propName) && _this5[propName]) {
            _AppHaxStore.store.AppHaxAPI[propName] = _this5[propName];
          } // settings for the store itself


          if (["token"].includes(propName) && _this5[propName]) {
            _AppHaxStore.store[propName] = _this5[propName];
          }
        });
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this6 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(AppHax.prototype), "firstUpdated", this).call(this, changedProperties);
        } // required for our early siteList updating


        if (_AppHaxStore.store.AppHaxAPI && this.basePath) {
          _AppHaxStore.store.AppHaxAPI.basePath = this.basePath;
        }

        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-steps.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-site-button.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["../../wired-elements/lib/wired-button.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-toast.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-wired-toggle.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-search-bar.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-search-results.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-user-menu.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/v1/app-hax-user-menu-button.js"], res, rej);
        });
        this.dispatchEvent(new CustomEvent("app-hax-loaded", {
          composed: true,
          bubbles: true,
          cancelable: false,
          detail: true
        }));
        _AppHaxStore.store.appReady = true;
        (0, _mobxEsm.autorun)(function () {
          if ((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady)) {
            document.body.classList.add("app-loaded");
          } else {
            document.body.classList.remove("app-loaded");
          }
        });
        _AppHaxStore.store.appEl = this;
        (0, _mobxEsm.autorun)(function () {
          if (_AppHaxStore.store.activeItem) {
            _this6.activeItem = (0, _mobxEsm.toJS)(_AppHaxStore.store.activeItem);
          }
        });
        (0, _mobxEsm.autorun)(function () {
          _this6.soundIcon = (0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus) ? new URL("./lib/assets/images/FullVolume.svg", meta.url).href : new URL("./lib/assets/images/Silence.svg", meta.url).href;

          if (!(0, _mobxEsm.toJS)(_AppHaxStore.store.soundStatus)) {
            _AppHaxStore.store.toast("Sound off.. hey! HELLO!?!", 2000, {
              fire: true
            });
          } else {
            _AppHaxStore.store.toast("You can hear me now? Good.", 2000, {
              hat: "random"
            });
          }
        }); // App is ready and the user is Logged in

        (0, _mobxEsm.autorun)( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
          var results;
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  if (!((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady) && _AppHaxStore.store.AppHaxAPI && (0, _mobxEsm.toJS)(_AppHaxStore.store.isLoggedIn) && (0, _mobxEsm.toJS)(_AppHaxStore.store.appSettings) && (0, _mobxEsm.toJS)(_AppHaxStore.store.refreshSiteList))) {
                    _context2.next = 7;
                    break;
                  }

                  _context2.next = 3;
                  return _AppHaxBackendAPI.AppHaxAPI.makeCall("getSitesList");

                case 3:
                  results = _context2.sent;
                  _AppHaxStore.store.manifest = results.data;
                  _context2.next = 8;
                  break;

                case 7:
                  if ((0, _mobxEsm.toJS)(_AppHaxStore.store.appReady) && !(0, _mobxEsm.toJS)(_AppHaxStore.store.isLoggedIn)) {
                    _this6.login();
                  }

                case 8:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        })));
      }
    }, {
      key: "toggleMenu",
      value: function toggleMenu() {
        this.userMenuOpen = !this.userMenuOpen;

        _AppHaxStore.store.appEl.playSound("click");
      }
    }, {
      key: "closeMenu",
      value: function closeMenu() {
        if (this.userMenuOpen) {
          this.userMenuOpen = !this.userMenuOpen;
          this.shadowRoot.querySelector("#user-menu").removeAttribute("isOpen");
        }
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_9f762e208e0011ed99ce491205e67b1d || (_templateObject_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["<app-hax-router></app-hax-router>\n      <header>\n        <app-hax-top-bar>\n          <slot name=\"app-header-pre\" slot=\"left\"></slot>\n          <a id=\"home\" href=\"home\" tabindex=\"-1\" slot=\"left\">\n            <simple-icon-lite\n              id=\"hlogo\"\n              src=\"", "\"\n              tabindex=\"0\"\n              class=\"haxLogo\"\n              title=\"Home\"\n              data-simple-tour-stop\n              data-stop-title=\"data-label\"\n              data-label=\"Home\"\n            >\n              <div data-stop-content slot=\"tour\" style=\"display:none;\">\n                You can come back to this home screen whenever you click this..\n              </div>\n            </simple-icon-lite>\n          </a>\n          <simple-tooltip for=\"hlogo\" position=\"right\" slot=\"left\"\n            >Home</simple-tooltip\n          >\n          <app-hax-search-bar\n            slot=\"center\"\n            ?disabled=\"", "\"\n          ></app-hax-search-bar>\n          <wired-button\n            elevation=\"1\"\n            slot=\"right\"\n            class=\"soundToggle\"\n            id=\"soundtb\"\n            @click=\"", "\"\n          >\n            <span class=\"wired-button-label\">Toggle sound effects</span>\n            <simple-icon-lite\n              src=\"", "\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-simple-tour-stop\n              data-stop-title=\"data-label\"\n              data-label=\"Sound\"\n            >\n              <div slot=\"tour\" data-stop-content>\n                Not a fan of the awesome sound effects, you can mute them but I\n                highly suggest you dont.....or else.\n              </div>\n            </simple-icon-lite>\n          </wired-button>\n          <simple-tooltip for=\"soundtb\" position=\"bottom\" slot=\"right\"\n            >Toggle sound</simple-tooltip\n          >\n          <app-hax-wired-toggle id=\"wt\" slot=\"right\"></app-hax-wired-toggle>\n          <simple-tooltip for=\"wt\" position=\"bottom\" slot=\"right\"\n            >Toggle dark mode</simple-tooltip\n          >\n          <app-hax-user-menu\n            slot=\"right\"\n            id=\"user-menu\"\n            data-simple-tour-stop\n            data-stop-title=\"data-label\"\n            data-label=\"Menu\"\n          >\n            <div slot=\"tour\" data-stop-content>\n              You want to log out and be someone else? You want to check your\n              sites option? Click your character. Fun Fact....your character is\n              unique to you.\n            </div>\n            <button class=\"topbar-character\" slot=\"menuButton\" id=\"tbchar\">\n              <rpg-character\n                seed=\"", "\"\n                width=\"68\"\n                height=\"68\"\n                aria-label=\"System menu\"\n                title=\"System menu\"\n                hat=\"", "\"\n                @click=\"", "\"\n              ></rpg-character>\n              <span class=\"characterbtn-name\">", "</span>\n            </button>\n            <!-- <app-hax-user-menu-button\n              slot=\"main-menu\"\n              icon=\"face\"\n              label=\"Account Info\"\n            ></app-hax-user-menu-button> -->\n            <app-hax-user-menu-button\n              slot=\"post-menu\"\n              class=\"logout\"\n              label=\"Logout\"\n              @click=", "\n            ></app-hax-user-menu-button>\n          </app-hax-user-menu>\n          <simple-tooltip for=\"tbchar\" position=\"bottom\" slot=\"right\"\n            >System menu</simple-tooltip\n          >\n        </app-hax-top-bar>\n      </header>\n      <main @click=\"", "\">\n        <confetti-container id=\"confetti\">\n          <div class=\"label\">\n            <app-hax-label>\n              ", "\n              ", "\n            </app-hax-label>\n          </div>\n          <random-word\n            key=\"", "\"\n            .phrases=\"", "\"\n            @click=\"", "\"\n          ></random-word>\n          <simple-icon-lite\n            id=\"helpbtn\"\n            @click=\"", "\"\n            src=\"", "\"\n          >\n          </simple-icon-lite>\n          <simple-tooltip for=\"helpbtn\" position=\"bottom\">Help</simple-tooltip>\n          <section class=\"content\">", "</section>\n        </confetti-container>\n      </main>"])), haxLogo, this.isNewUser, soundToggle, this.soundIcon, this.userName, this.userMenuOpen ? "edit" : "none", this.toggleMenu, this.userName, this.logout, this.closeMenu, this.activeItem && !this.siteReady ? (0, _index.html)(_templateObject2_9f762e208e0011ed99ce491205e67b1d || (_templateObject2_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n                    <h1>", "</h1>\n                    <div slot=\"subtitle\">\n                      ", "\n                    </div>\n                  "])), this.activeItem.label, this.activeItem && this.activeItem.statement ? this.activeItem.statement.replace(":structure", (0, _mobxEsm.toJS)(_AppHaxStore.store.site.structure)) : "") : "", this.activeItem && this.siteReady ? (0, _index.html)(_templateObject3_9f762e208e0011ed99ce491205e67b1d || (_templateObject3_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n                    <h1>", "</h1>\n                    <div slot=\"subtitle\">\n                      Is all ready, are you ready to build?\n                    </div>\n                  "])), (0, _mobxEsm.toJS)(_AppHaxStore.store.site.name)) : "", this.isNewUser ? "new" : "return", this.phrases, this.getNewWord, this.helpClick, helpBtn, this.appBody(this.appMode));
      }
    }, {
      key: "getNewWord",
      value: function getNewWord() {
        this.shadowRoot.querySelector("random-word").getNewWord();

        _AppHaxStore.store.appEl.playSound("click");
      }
    }, {
      key: "appBody",
      value: function appBody(routine) {
        var template = (0, _index.html)(_templateObject4_9f762e208e0011ed99ce491205e67b1d || (_templateObject4_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([""])));

        switch (routine) {
          case "home":
          case "search":
            template = this.templateHome();
            break;

          case "create":
            template = this.templateCreate();
            break;

          case "404":
          default:
            template = this.template404();
            break;
        }

        return template;
      }
    }, {
      key: "templateHome",
      value: function templateHome() {
        return (0, _index.html)(_templateObject5_9f762e208e0011ed99ce491205e67b1d || (_templateObject5_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" ", "\n\n      <app-hax-search-results></app-hax-search-results>"])), !this.searchTerm ? (0, _index.html)(_templateObject6_9f762e208e0011ed99ce491205e67b1d || (_templateObject6_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" <div class=\"start-journey\">\n            <a\n              href=\"createSite-step-1\"\n              @click=\"", "\"\n              tabindex=\"-1\"\n            >\n              <app-hax-site-button\n                label=\"&gt; Start new journey\"\n              ></app-hax-site-button>\n            </a>\n          </div>"])), this.startJourney) : "");
      } // eslint-disable-next-line class-methods-use-this

    }, {
      key: "templateCreate",
      value: function templateCreate() {
        return (0, _index.html)(_templateObject7_9f762e208e0011ed99ce491205e67b1d || (_templateObject7_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["<app-hax-steps\n      @promise-progress-finished=\"", "\"\n    ></app-hax-steps>"])), this.siteReadyToGo);
      }
    }, {
      key: "siteReadyToGo",
      value: function siteReadyToGo(e) {
        var _this7 = this;

        new Promise(function (res, rej) {
          return _require.default(["../multiple-choice/lib/confetti-container.js"], res, rej);
        }).then(function (module) {
          setTimeout(function () {
            _this7.shadowRoot.querySelector("#confetti").setAttribute("popped", "");
          }, 0);
        });

        if (e.detail) {
          _AppHaxStore.store.siteReady = true;
        }
      }
    }, {
      key: "template404",
      value: function template404() {
        return (0, _index.html)(_templateObject8_9f762e208e0011ed99ce491205e67b1d || (_templateObject8_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" <div class=\"four04\">\n      <a\n        href=\"createSite-step-1\"\n        class=\"start-journey\"\n        @click=\"", "\"\n        tabindex=\"-1\"\n      >\n        <app-hax-site-button\n          label=\"&gt; Start a new journey\"\n        ></app-hax-site-button>\n      </a>\n      <rpg-character\n        class=\"four04-character\"\n        fire\n        walking\n        width=\"200\"\n        id=\"char404\"\n        height=\"200\"\n        seed=\"", "\"\n      ></rpg-character>\n      <simple-tooltip for=\"char404\" position=\"left\">This</simple-tooltip>\n      <simple-tooltip for=\"char404\" position=\"right\">fine</simple-tooltip>\n      <simple-tooltip for=\"char404\" position=\"bottom\">is</simple-tooltip>\n    </div>"])), this.startJourney, this.userName);
      } // ensure internal data is unset for store

    }, {
      key: "startJourney",
      value: function startJourney() {
        _AppHaxStore.store.createSiteSteps = false;
        _AppHaxStore.store.siteReady = false;
        _AppHaxStore.store.site.structure = null;
        _AppHaxStore.store.site.type = null;
        _AppHaxStore.store.site.theme = null;
        _AppHaxStore.store.site.name = null;
        _AppHaxStore.store.appMode = "create";

        _AppHaxStore.store.appEl.playSound("click2");
      }
    }], [{
      key: "tag",
      get: function get() {
        return "app-hax";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(AppHax), "properties", this)), {}, {
          courses: {
            type: Array
          },
          userName: {
            type: String
          },
          activeItem: {
            type: Object
          },
          soundIcon: {
            type: String
          },
          searchTerm: {
            type: String
          },
          appMode: {
            type: String
          },
          // minor context of what we're doing in the app for rendering
          isNewUser: {
            type: Boolean
          },
          phrases: {
            type: Object
          },
          userMenuOpen: {
            type: Boolean
          },
          // leave here to ensure hat change and sound effects happen
          siteReady: {
            type: Boolean
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          token: {
            type: String
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(AppHax), "styles", this)), [(0, _index.css)(_templateObject9_9f762e208e0011ed99ce491205e67b1d || (_templateObject9_9f762e208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          --app-hax-background-color-active: var(--app-hax-accent-color);\n        }\n        #home {\n          display: inline-flex;\n        }\n        .wired-button-label {\n          clip: rect(0 0 0 0);\n          clip-path: inset(50%);\n          height: 1px;\n          overflow: hidden;\n          position: absolute;\n          white-space: nowrap;\n          width: 1px;\n        }\n        .topbar-character {\n          cursor: pointer;\n          display: inline-block;\n          border: none;\n          border-radius: 0px;\n          padding: 0 8px;\n          margin: 0 0 0 16px;\n          background-color: transparent;\n          height: 48px;\n          max-width: 160px;\n        }\n        .characterbtn-name {\n          color: var(--simple-colors-default-theme-grey-12);\n          font-family: \"Press Start 2P\", sans-serif;\n          margin-left: 8px;\n          font-size: 12px;\n          vertical-align: bottom;\n          line-height: 48px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          height: 48px;\n          word-break: break-all;\n        }\n        .topbar-character:hover,\n        .topbar-character:focus {\n          background-color: var(--simple-colors-default-theme-light-blue-4);\n          outline: var(--haxcms-color) solid 3px;\n          outline-offset: -3px;\n          height: 48px;\n        }\n        .topbar-character rpg-character {\n          margin: -4px -14px 0px -10px;\n          height: 52px;\n          width: 64px;\n          display: inline-block;\n        }\n        .content {\n          text-align: center;\n          margin-top: 24px;\n        }\n        .four04-character {\n          margin-top: 16px;\n        }\n        .start-journey {\n          display: flex;\n          padding-top: 40px;\n          justify-content: center;\n        }\n        app-hax-site-button {\n          max-width: 60vw;\n          justify-content: center;\n        }\n        app-hax-top-bar {\n          top: 0;\n          z-index: 1000;\n          right: 0;\n          left: 0;\n          position: fixed;\n        }\n        @media (max-width: 780px) {\n          app-hax-top-bar::part(top-bar) {\n            grid-template-columns: 20% 20% 60%;\n          }\n        }\n        @media (max-width: 600px) {\n          app-hax-top-bar::part(top-bar) {\n            grid-template-columns: 10% 30% 60%;\n          }\n        }\n        .label {\n          text-align: center;\n        }\n        app-hax-label {\n          animation: 0.8s ease-in-out 0s scrollin;\n          -webkit-animation: 0.8s ease-in-out 0s scrollin;\n          display: block;\n          overflow: hidden;\n        }\n        app-hax-label h1 {\n          font-weight: normal;\n          font-size: 4vw;\n          margin: 0;\n          padding: 0;\n        }\n        @keyframes scrollin {\n          from {\n            margin-top: -240px;\n            margin-bottom: 240px;\n          }\n          to {\n            margin-top: 0;\n            margin-bottom: 0;\n          }\n        }\n        .haxLogo {\n          --simple-icon-height: 40px;\n          --simple-icon-width: 40px;\n          margin: 4px;\n          color: var(--simple-colors-default-theme-grey-12);\n          cursor: pointer;\n        }\n        .soundToggle {\n          margin-right: 16px;\n          position: relative;\n          display: inline-flex;\n          vertical-align: top;\n        }\n\n        .soundToggle img {\n          width: 24px;\n          height: 24px;\n        }\n\n        app-hax-search-bar {\n          vertical-align: middle;\n          display: inline-flex;\n        }\n        main {\n          padding-top: 80px;\n        }\n        @media (max-width: 900px) {\n          .characterbtn-name {\n            display: none;\n          }\n          main {\n            padding-top: 64px;\n          }\n        }\n        app-hax-user-menu {\n          z-index: 1003;\n        }\n        .logout::part(menu-button) {\n          background-image: url(\"", "\");\n          background-repeat: no-repeat;\n          background-position: center;\n          text-align: center;\n          background-size: cover;\n          border-top: 0px;\n          border-bottom: 0px;\n          padding: 10px;\n        }\n        app-hax-user-menu app-hax-user-menu-button::part(menu-button) {\n          font-family: \"Press Start 2P\", sans-serif;\n          font-size: 12px;\n        }\n\n        random-word:not(:defined) {\n          display: none;\n        }\n        random-word {\n          transform: rotate(25deg);\n          position: absolute;\n          right: 10px;\n          top: 120px;\n          padding: 12px;\n          font-size: 12px;\n          border: 4px solid var(--simple-colors-default-theme-grey-12);\n          background-color: var(--simple-colors-default-theme-yellow-5);\n          color: var(--simple-colors-default-theme-grey-12);\n          width: 100px;\n          word-wrap: break-word;\n          text-align: center;\n          cursor: pointer;\n          user-select: none;\n          opacity: 1;\n          visibility: visible;\n          transition: all 0.3s ease-in-out;\n        }\n        #helpbtn {\n          --simple-icon-height: 50px;\n          --simple-icon-width: 50px;\n          right: 200px;\n          top: 100px;\n          padding: 4px;\n          background-color: var(--simple-colors-default-theme-grey-1);\n          border-radius: 50%;\n          position: absolute;\n          color: var(--simple-colors-default-theme-grey-12);\n          border: var(--simple-colors-default-theme-grey-12) 4px solid;\n          cursor: pointer;\n        }\n        @media (max-width: 800px) {\n          app-hax-site-button {\n            width: 320px;\n            max-width: 60vw;\n            --app-hax-site-button-font-size: 16px;\n          }\n          #helpbtn {\n            --simple-icon-height: 40px;\n            --simple-icon-width: 40px;\n            right: 8px;\n            top: 64px;\n            padding: 2px;\n            border: var(--simple-colors-default-theme-grey-12) 2px solid;\n          }\n        }\n        @media (prefers-reduced-motion: reduce) {\n          app-hax-label {\n            animation: none;\n            -webkit-animation: none;\n          }\n        }\n        @media (max-width: 680px) {\n          random-word {\n            visibility: none;\n            opacity: 0;\n          }\n        }\n        @media (max-height: 700px) {\n          .content {\n            margin-top: 4px;\n          }\n          random-word {\n            visibility: none;\n            opacity: 0;\n          }\n          .start-journey {\n            padding-top: 0;\n          }\n        }\n        @media (max-height: 500px) {\n          app-hax-label h1 {\n            font-family: monospace;\n            font-weight: normal;\n            font-size: 4vw;\n            margin: 0;\n            padding: 0;\n          }\n        }\n      "])), (0, _index.unsafeCSS)(logoutBtn))]);
      }
    }]);
    return AppHax;
  }((0, _SimpleTourFinder2.SimpleTourFinder)(_simpleColors.SimpleColors));

  _exports.AppHax = AppHax;
  customElements.define(AppHax.tag, AppHax);
  window.AppHax = window.AppHax || {};

  window.AppHax.requestAvailability = function () {
    if (!window.AppHax.instance) {
      window.AppHax.instance = document.querySelector(AppHax.tag);
    }

    return window.AppHax.instance;
  };
});