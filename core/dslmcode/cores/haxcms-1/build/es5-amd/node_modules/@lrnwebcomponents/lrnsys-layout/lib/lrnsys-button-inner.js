define(["exports", "../../../lit/index.js", "../../simple-icon/simple-icon.js", "../../simple-icon/lib/simple-icons.js", "../../hax-iconset/lib/simple-hax-iconset.js", "../../paper-avatar/paper-avatar.js"], function (_exports, _index, _simpleIcon, _simpleIcons, _simpleHaxIconset, _paperAvatar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysButtonInner = void 0;

  var _templateObject_d8e05c808e0011ed99ce491205e67b1d, _templateObject2_d8e05c808e0011ed99ce491205e67b1d, _templateObject3_d8e05c808e0011ed99ce491205e67b1d, _templateObject4_d8e05c808e0011ed99ce491205e67b1d, _templateObject5_d8e05c808e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrnsys-button-inner`
   * @element lrnsys-button-inner
   */
  var LrnsysButtonInner = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(LrnsysButtonInner, _LitElement);

    var _super = _createSuper(LrnsysButtonInner);

    function LrnsysButtonInner() {
      var _this;

      babelHelpers.classCallCheck(this, LrnsysButtonInner);
      _this = _super.call(this);
      _this.text = "";
      _this.avatar = "";
      _this.icon = "";
      return _this;
    }
    /**
     * LitElement render
     */


    babelHelpers.createClass(LrnsysButtonInner, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d8e05c808e0011ed99ce491205e67b1d || (_templateObject_d8e05c808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div>\n        ", "\n        ", "\n        ", "\n      </div>\n      <div><slot name=\"button\"></slot><slot></slot></div>\n    "])), this.avatar != "" ? (0, _index.html)(_templateObject2_d8e05c808e0011ed99ce491205e67b1d || (_templateObject2_d8e05c808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n              <paper-avatar\n                part=\"lrnsys-button-inner-paper-avatar\"\n                src=\"", "\"\n              ></paper-avatar>\n            "])), this.avatar) : "", this.icon != "" ? (0, _index.html)(_templateObject3_d8e05c808e0011ed99ce491205e67b1d || (_templateObject3_d8e05c808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n              <simple-icon\n                part=\"lrnsys-button-inner-simple-icon\"\n                icon=\"", "\"\n                accent-color=\"grey\"\n                contrast=\"4\"\n              ></simple-icon>\n            "])), this.icon) : "", this.text != "" ? (0, _index.html)(_templateObject4_d8e05c808e0011ed99ce491205e67b1d || (_templateObject4_d8e05c808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n              <span\n                class=\"", "\"\n                part=\"lrnsys-button-inner-text-label\"\n                >", "</span\n              >\n            "])), this._getTextLabelClass(this.avatar, this.icon), this.text) : "");
      }
    }, {
      key: "_getTextLabelClass",
      value:
      /**
       * Find out if the text does not have an avatar or an icon to the left,
       * and add a class to remove the left margin.
       */
      function _getTextLabelClass(avatar, icon) {
        if (!avatar && !icon) {
          return "text-label-only";
        }

        return "text-label";
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject5_d8e05c808e0011ed99ce491205e67b1d || (_templateObject5_d8e05c808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host > div > * {\n          vertical-align: middle;\n        }\n        .text-label {\n          margin-left: 8px;\n        }\n        .text-label-only {\n          margin-left: 0;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-button-inner";
      }
      /**
       * LitElement / popular convention
       */

    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Icon to present for clicking.
           */
          icon: {
            type: String
          },

          /**
           * Icon to present for clicking.
           */
          avatar: {
            type: String
          },

          /**
           * Text to present for clicking.
           */
          text: {
            type: String
          }
        };
      }
    }]);
    return LrnsysButtonInner;
  }(_index.LitElement);

  _exports.LrnsysButtonInner = LrnsysButtonInner;
  customElements.define(LrnsysButtonInner.tag, LrnsysButtonInner);
});