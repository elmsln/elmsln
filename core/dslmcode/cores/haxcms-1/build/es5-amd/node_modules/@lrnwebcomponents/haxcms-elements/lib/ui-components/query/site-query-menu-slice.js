define(["exports", "../../../../../lit/index.js", "../../core/haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js"], function (_exports, _index, _haxcmsSiteStore, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteQueryMenuSlice = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `site-query-menu-slice`
   * `A slice / 1 level within the hierarchy, via relative parent or deep parent`
   *
   * @demo demo/index.html
   */
  var SiteQueryMenuSlice = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SiteQueryMenuSlice, _LitElement);

    var _super = _createSuper(SiteQueryMenuSlice);

    /**
     * HTMLElement life cycle
     */
    function SiteQueryMenuSlice() {
      var _this;

      babelHelpers.classCallCheck(this, SiteQueryMenuSlice);
      _this = _super.call(this);
      _this.__disposer = [];
      _this.start = 1;
      _this.end = 1000;
      _this.dynamicMethodology = "active";
      _this.fixedId = false;
      _this.noDynamicLevel = false;
      return _this;
    }
    /**
     * LitElement / popular convention
     */


    babelHelpers.createClass(SiteQueryMenuSlice, [{
      key: "updated",
      value:
      /**
       * LitElement properties changed
       */
      function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (["start", "end", "parent", "dynamicMethodology", "_routerManifest", "noDynamicLevel"].includes(propName)) {
            _this2.result = _this2._computeItems(_this2.start, _this2.end, _this2.parent, _this2.dynamicMethodology, _this2._routerManifest, _this2.noDynamicLevel); // fire an event that this is a core piece of the system

            _this2.dispatchEvent(new CustomEvent("result-changed", {
              detail: _this2.result
            }));
          }
        });
      }
      /**
       * Compute items leveraging the site query engine
       */

    }, {
      key: "_computeItems",
      value: function _computeItems(start, end, parent, dynamicMethodology, _routerManifest, noDynamicLevel) {
        if (_routerManifest) {
          return _haxcmsSiteStore.store.computeItems(start, end, parent, dynamicMethodology, _routerManifest, noDynamicLevel);
        }
      }
      /**
       * LitElement life cycle
       */

    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this3 = this;

        (0, _mobxEsm.autorun)(function (reaction) {
          _this3._routerManifest = Object.assign({}, (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.routerManifest));

          _this3.__disposer.push(reaction);
        });

        if (!this.fixedId) {
          (0, _mobxEsm.autorun)(function (reaction) {
            _this3.parent = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.activeId);

            _this3.__disposer.push(reaction);
          });
        }
      }
      /**
       * HTMLElement life cycle
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteQueryMenuSlice.prototype), "disconnectedCallback", this).call(this);
      }
    }], [{
      key: "tag",
      get:
      /**
       * Convention our team prefers
       */
      function get() {
        return "site-query-menu-slice";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * starting level for the menu items
           */
          start: {
            type: Number
          },

          /**
           * ending level for the menu items
           */
          end: {
            type: Number
          },

          /**
           * parent for the menu id
           */
          parent: {
            type: String
          },

          /**
           * How we should obtain the parent who's children we should show
           * options are active, parent, or ancestor
           */
          dynamicMethodology: {
            type: String,
            attribute: "dynamic-methodology"
          },

          /**
           * Use this boolean to force this to fix to 1 parent
           * Otherwise it will dynamically update (default behavior)
           */
          fixedId: {
            type: Boolean,
            attribute: "fixed-id"
          },

          /**
           * Allow disabling the dynamic leveling
           */
          noDynamicLevel: {
            type: Boolean,
            attribute: "no-dynamic-level"
          },

          /**
           * Results which can be binded to something else
           */
          result: {
            type: Array
          },
          _routerManifest: {
            type: Object
          }
        };
      }
    }]);
    return SiteQueryMenuSlice;
  }(_index.LitElement);

  _exports.SiteQueryMenuSlice = SiteQueryMenuSlice;
  customElements.define(SiteQueryMenuSlice.tag, SiteQueryMenuSlice);
});