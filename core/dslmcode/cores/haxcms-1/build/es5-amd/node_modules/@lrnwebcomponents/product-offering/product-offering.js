define(["exports", "../../lit/index.js", "../simple-colors/simple-colors.js", "../intersection-element/lib/IntersectionObserverMixin.js", "../simple-icon/simple-icon.js", "../simple-icon/lib/simple-icons.js"], function (_exports, _index, _simpleColors, _IntersectionObserverMixin, _simpleIcon, _simpleIcons) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ProductOffering = void 0;

  var _templateObject_70ce1d10809211edaa2833647dc78c6c, _templateObject2_70ce1d10809211edaa2833647dc78c6c, _templateObject3_70ce1d10809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * Copyright 2021 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `product-offering`
   * `Simple card for displaying product info`
   * @demo demo/index.html
   * @element product-offering
   */
  var ProductOffering = /*#__PURE__*/function (_IntersectionObserver) {
    babelHelpers.inherits(ProductOffering, _IntersectionObserver);

    var _super = _createSuper(ProductOffering);

    /**
     * HTMLElement
     */
    function ProductOffering() {
      var _this;

      babelHelpers.classCallCheck(this, ProductOffering);
      _this = _super.call(this);
      _this.alt = "";
      _this.accentColor = "blue";
      return _this;
    }
    /**
     * LitElement style callback
     */


    babelHelpers.createClass(ProductOffering, [{
      key: "render",
      value:
      /**
       * LitElement render callback
       */
      function render() {
        return (0, _index.html)(_templateObject_70ce1d10809211edaa2833647dc78c6c || (_templateObject_70ce1d10809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      ", "\n    "])), this.elementVisible ? (0, _index.html)(_templateObject2_70ce1d10809211edaa2833647dc78c6c || (_templateObject2_70ce1d10809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <!-- Container -->\n            <div class=\"container\">\n              <img\n                class=\"image\"\n                src=\"", "\"\n                alt=\"", "\"\n                loading=\"lazy\"\n              />\n\n              <div class=\"square\">\n                <!-- Icon, Header -->\n                <div class=\"squareTitle\">\n                  <!-- icon -->\n                  <div class=\"icon-background\">\n                    <simple-icon\n                      accent-color=\"", "\"\n                      ?dark=\"", "\"\n                      .icon=\"", "\"\n                    ></simple-icon>\n                  </div>\n                  <!-- header -->\n                  <h4>\n                    <span class=\"underline\">", "</span>&nbsp;<span\n                      >", "</span\n                    >\n                  </h4>\n                </div>\n\n                <!-- descripton -->\n                <div class=\"sqaureDescription\">\n                  <slot name=\"description\">", "</slot>\n                </div>\n              </div>\n            </div>"])), this.source, this.alt, this.accentColor, this.dark, this.icon, this._titleOne, this._titleTwo, this.description) : "");
      }
      /**
       * Convention we use
       */

    }, {
      key: "firstUpdated",
      value:
      /**
       * LitElement ready
       */
      function firstUpdated(changedProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering.prototype), "firstUpdated", this).call(this, changedProperties);
        }
      }
      /**
       * LitElement life cycle - property changed
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "title") {
            if (_this2.title.split(" ").length > 1) {
              var tmp = _this2.title.split(" ");

              _this2._titleOne = tmp.shift();
              _this2._titleTwo = tmp.join(" ");
            } else {
              _this2._titleOne = _this2.title;
            }
          }
        });
      }
    }], [{
      key: "styles",
      get: function get() {
        // support for using in other classes
        var styles = [];

        if (babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering), "styles", this)) {
          styles = babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering), "styles", this);
        }

        return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject3_70ce1d10809211edaa2833647dc78c6c || (_templateObject3_70ce1d10809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          padding: var(--product-offering-padding, 25px);\n          color: var(--product-offering-text-color, #000);\n          font-family: var(--product-offering-font-family, Verdana, sans-serif);\n        }\n        .container {\n          padding: 5%;\n          display: grid;\n          grid-template-columns: 25% 75%;\n        }\n        .image {\n          height: var(--product-offering-image-height, 150px);\n          width: var(--product-offering-image-width, 200px);\n          border-radius: 2%;\n        }\n        simple-icon {\n          padding: 8px;\n          height: 30px;\n          width: 30px;\n        }\n        .icon-background {\n          background-color: var(\n            --simple-colors-default-theme-accent-12,\n            #eeeeee\n          );\n          border-radius: 50%;\n          padding: 2px;\n          margin: 5px;\n          margin-right: 10px;\n          box-shadow: 10px 10px 25px 0 rgb(0 0 0 / 10%);\n        }\n        .squareTitle {\n          display: flex;\n        }\n        .underline {\n          border-bottom: 5px solid orange;\n          display: inline-block;\n        }\n        .sqaureDescription {\n          color: var(--simple-colors-default-theme-accent-12, #eeeeee);\n          font-size: 12pt;\n          padding: 20px;\n          padding-left: 60px;\n          margin: 0;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "product-offering";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(ProductOffering), "properties", this)), {}, {
          alt: {
            type: String
          },
          source: {
            type: String
          },
          icon: {
            type: String
          },
          title: {
            type: String
          },
          _titleOne: {
            type: String
          },
          _titleTwo: {
            type: String
          },
          description: {
            type: String
          }
        });
      }
    }]);
    return ProductOffering;
  }((0, _IntersectionObserverMixin.IntersectionObserverMixin)(_simpleColors.SimpleColors));

  _exports.ProductOffering = ProductOffering;
  customElements.define(ProductOffering.tag, ProductOffering);
});