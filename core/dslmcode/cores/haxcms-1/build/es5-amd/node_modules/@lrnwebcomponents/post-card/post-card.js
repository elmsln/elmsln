define(["exports", "meta", "require", "../../lit/index.js"], function (_exports, meta, _require, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.PostCard = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_ac08b7708e0011ed99ce491205e67b1d, _templateObject2_ac08b7708e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `post-card`
   * `sending you mail from afar, or the browser.`
   * @demo demo/index.html
   * @element post-card
   */
  var postCardLines = new URL("./lib/assets/postcard-lines.png", meta.url).href;
  var entireCardBg = new URL("./lib/assets/postcard-bg.jpg", meta.url).href;

  var PostCard = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(PostCard, _LitElement);

    var _super = _createSuper(PostCard);

    function PostCard() {
      var _this;

      babelHelpers.classCallCheck(this, PostCard);
      _this = _super.call(this);
      _this.t = {
        label: "Post Card",
        send: "To",
        receive: "From"
      };
      _this.photoSrc = new URL("./lib/assets/postcard-photo-stock.jpg", meta.url).href;
      _this.stampSrc = new URL("./lib/assets/postcard-stamp-stock.jpg", meta.url).href;
      _this.postMarkLocations = "insert - locations - here";
      window.dispatchEvent(new CustomEvent("i18n-manager-register-element", {
        detail: {
          context: babelHelpers.assertThisInitialized(_this),
          namespace: "post-card",
          localesPath: new URL("./locales", meta.url).href,
          updateCallback: "render",
          locales: ["es", "de", "fr", "it", "ja", "zh_CN"]
        }
      }));
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["./lib/PostCardPhoto.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/PostCardStamp.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["./lib/PostCardPostmark.js"], res, rej);
        });
      }, 0);
      return _this;
    }
    /**
     * LitElement / popular convention
     */


    babelHelpers.createClass(PostCard, [{
      key: "render",
      value:
      /**
       * LitElement render life cycle
       */
      function render() {
        return (0, _index.html)(_templateObject_ac08b7708e0011ed99ce491205e67b1d || (_templateObject_ac08b7708e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"entireCard\" style=\"background-image: url(", ");\">\n        <div class=\"backgroundLines\">\n          <h2 class=\"label\">", "</h2>\n          <img loading=\"lazy\" alt=\"\" src=\"", "\" />\n        </div>\n        <div class=\"foregroundElements\">\n          <div class=\"postage\">\n            <post-card-postmark\n              class=\"postmark\"\n              locations=\"", "\"\n            ></post-card-postmark>\n            <post-card-stamp\n              class=\"stamp\"\n              image=\"", "\"\n            ></post-card-stamp>\n          </div>\n          <div class=\"image\">\n            <post-card-photo image=\"", "\"></post-card-photo>\n          </div>\n          <div class=\"tofrom\">\n            <div class=\"to\">\n              <h3>", "</h3>\n              <slot name=\"to\"><div class=\"toContent\">", "</div></slot>\n            </div>\n            <div class=\"from\">\n              <h3>", ":</h3>\n              <slot name=\"from\"\n                ><div class=\"fromContent\">", "</div></slot\n              >\n            </div>\n          </div>\n          <div class=\"message\">\n            <slot name=\"message\"\n              ><div class=\"messageContent\">", "</div></slot\n            >\n          </div>\n        </div>\n      </div>\n    "])), entireCardBg, this.t.label, postCardLines, this.postMarkLocations, this.stampSrc, this.photoSrc, this.t.send, this.to, this.t.receive, this.from, this.message);
      }
      /**
       * haxProperties integration via file reference
       */

    }], [{
      key: "tag",
      get: function get() {
        return "post-card";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          t: {
            type: Object
          },
          to: {
            type: String,
            reflect: true
          },
          from: {
            type: String,
            reflect: true
          },
          message: {
            type: String,
            reflect: true
          },
          photoSrc: {
            type: String,
            attribute: "photo-src",
            reflect: true
          },
          stampSrc: {
            type: String,
            attribute: "stamp-src",
            reflect: true
          },
          postMarkLocations: {
            type: String,
            reflect: true,
            attribute: "post-mark-locations"
          }
        };
      }
      /**
       * LitElement shadow styles convention
       */

    }, {
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_ac08b7708e0011ed99ce491205e67b1d || (_templateObject2_ac08b7708e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        --width-body: 690px;\n        height: calc(var(--width-body) * (2 / 3));\n        width: var(--width-body);\n        margin: 20px;\n        display: inline-grid;\n        grid-template-rows: 1fr 1fr 1fr 1fr;\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n        transition: all 0.35s ease-in-out;\n      }\n\n      .entireCard {\n        height: calc(var(--width-body) * (2 / 3));\n        width: var(--width-body);\n        background-color: rgb(246, 240, 232);\n        border: 1px solid lightgrey;\n        box-shadow: grey 3px 3px 3px;\n        text-align: center;\n        display: inline-grid;\n        grid-template-rows: 1fr 2fr 1fr;\n        grid-template-columns: 1fr 1fr 1fr;\n        text-transform: uppercase;\n        font-family: \"Patrick Hand\", cursive;\n      }\n\n      .backgroundLines {\n        display: block;\n        z-index: 1;\n        padding: 0px;\n        border: none;\n        width: var(--width-body);\n        height: calc(var(--width-body) * (2 / 3));\n      }\n\n      .label {\n        letter-spacing: 16px;\n        font-size: 50px;\n        font-weight: 400;\n        color: rgb(202, 134, 134);\n        text-align: center;\n        z-index: 2;\n      }\n\n      .backgroundLines img {\n        width: calc(var(--width-body) * (17 / 25));\n        mix-blend-mode: multiply;\n        transform: translate(14%, -10%);\n      }\n\n      .foregroundElements {\n        z-index: 2;\n        display: inline-grid;\n        position: absolute;\n        width: var(--width-body);\n        height: calc(var(--width-body) * (2 / 3));\n      }\n\n      /* Inlcudes both the post mark and the stamp */\n      .postage {\n        grid-column: 4 / 5;\n        grid-row: 1 / 2;\n        font-family: \"Bebas Neue\", sans-serif;\n        display: grid;\n        display: inline-grid;\n        grid-template-columns: 330px 1fr;\n        grid-template-rows: 150px 1fr;\n      }\n\n      .stamp {\n        z-index: 3;\n        grid-area: 1 / 1 / 1 / 1;\n        margin-left: 195px;\n        margin-bottom: 20px;\n        padding-top: 20px;\n      }\n\n      .postmark {\n        z-index: 5;\n        grid-area: 1 / 1 / 1 / 1;\n        padding-top: 35px;\n      }\n\n      .image {\n        grid-column: 1 / 3;\n        grid-row: 1 / 4;\n        border-radius: 1px;\n        padding-top: 70px;\n      }\n\n      .tofrom {\n        grid-column: 4 / 6;\n        grid-row: 2 / 5;\n        font-size: 20px;\n      }\n\n      .tofrom ::slotted(*),\n      .tofrom .toContent,\n      .tofrom .fromContent {\n        width: 270px;\n        margin: auto;\n        opacity: 0.8;\n        text-align: center;\n      }\n\n      .to {\n        height: 150px;\n        margin-bottom: 20px;\n      }\n\n      .to ::slotted(*),\n      .to .toContent {\n        height: 100px;\n        font-size: 40px;\n        font-weight: bolder;\n        letter-spacing: 2px;\n        line-height: 1.25;\n        margin-top: 12px;\n        overflow: hidden;\n      }\n\n      .from {\n        height: 140px;\n      }\n\n      .from ::slotted(*),\n      .from .fromContent {\n        height: 70px;\n        font-size: 22px;\n        font-weight: bolder;\n        letter-spacing: 1px;\n        line-height: 1;\n        margin-top: 8px;\n        overflow: hidden;\n        display: flex;\n        place-content: flex-end center;\n        align-items: flex-end;\n      }\n\n      h2,\n      h3 {\n        margin: 0px;\n      }\n\n      .tofrom h3 {\n        text-align: left;\n        transform: rotate(-1deg);\n        color: #ca8686;\n        padding-left: 20px;\n      }\n\n      .message {\n        grid-column: 1 / 3;\n        grid-row: 2 / 5;\n        padding-right: 20px;\n        padding-bottom: 20px;\n        padding-top: 200px;\n        font-size: 22px;\n        margin: auto;\n      }\n\n      .message ::slotted(*),\n      .message .messageContent {\n        width: 270px;\n        height: 100px;\n        font-weight: bolder;\n        text-align: center;\n        line-height: 1.1;\n        overflow: hidden;\n        align-self: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      /* Query sizes sourced from: https://www.geeksforgeeks.org/how-to-target-desktop-tablet-and-mobile-using-media-query/ */\n      @media (max-width: 370px) {\n        :host {\n          transform: scale(0.25);\n          transition: all 0.35s ease-in-out;\n        }\n      }\n\n      @media (min-width: 371px) and (max-width: 480px) {\n        :host {\n          transform: scale(0.5);\n          transition: all 0.35s ease-in-out;\n        }\n      }\n\n      @media (min-width: 481px) and (max-width: 600px) {\n        :host {\n          transform: scale(0.6);\n          transition: all 0.35s ease-in-out;\n        }\n      }\n\n      @media (min-width: 601px) and (max-width: 720px) {\n        :host {\n          transform: scale(0.8);\n          transition: all 0.35s ease-in-out;\n        }\n      }\n\n      @media (min-width: 721px) {\n        :host {\n          transform: scale(1);\n          transition: all 0.35s ease-in-out;\n        }\n      }\n    "])));
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./lib/post-card.haxProperties.json", meta.url).href;
      }
    }]);
    return PostCard;
  }(_index.LitElement);

  _exports.PostCard = PostCard;
  customElements.define(PostCard.tag, PostCard);
});