define(["exports", "../../../../../lit/index.js", "../../core/haxcms-site-store.js", "../../core/utils/HAXCMSI18NMixin.js", "../../../../utils/utils.js", "../../../../micro-frontend-registry/lib/microServices.js", "../../../../micro-frontend-registry/micro-frontend-registry.js", "../../../../citation-element/citation-element.js"], function (_exports, _index, _haxcmsSiteStore, _HAXCMSI18NMixin2, _utils, _microServices, _microFrontendRegistry, _citationElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteRemoteContent = void 0;

  var _templateObject_c37bbb80809211edaa2833647dc78c6c, _templateObject2_c37bbb80809211edaa2833647dc78c6c, _templateObject3_c37bbb80809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && babelHelpers.instanceof(outerFn.prototype, Generator) ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers.typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  (0, _microServices.enableServices)(['haxcms']);
  /**
   * `site-remote-content`
   * `Remote render of content given a site URL and UUID`
   *
   * @demo demo/index.html
   */

  var SiteRemoteContent = /*#__PURE__*/function (_HAXCMSI18NMixin) {
    babelHelpers.inherits(SiteRemoteContent, _HAXCMSI18NMixin);

    var _super = _createSuper(SiteRemoteContent);

    function SiteRemoteContent() {
      var _this;

      babelHelpers.classCallCheck(this, SiteRemoteContent);
      _this = _super.call(this);
      _this.circularBlock = false;
      _this.itemManifest = {};
      _this.loading = false;
      _this.uuid = null;
      _this.siteurl = '';
      _this.showTitle = false;
      _this.breakreference = false;
      _this._remoteTitle = null;
      _this.t = {
        selectPage: "Select page"
      };
      var pNode = babelHelpers.assertThisInitialized(_this);
      var pCounter = 0; // ensure we don't have too deep a reference to avoid infinite remotes

      while (pNode && pNode.tagName) {
        pNode = pNode.parentNode;

        if (pNode && pNode.tagName && pNode.tagName === 'SITE-REMOTE-CONTENT') {
          pCounter++;

          if (pCounter >= 3) {
            _this.circularBlock = true;
          }
        }
      }

      return _this;
    }
    /**
    * LitElement
    */


    babelHelpers.createClass(SiteRemoteContent, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_c37bbb80809211edaa2833647dc78c6c || (_templateObject_c37bbb80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n    <div class=\"loading\"></div>\n    ", "\n    <div id=\"slot\"><slot></slot></div>\n    <div id=\"content\"></div>\n    "])), this.showTitle && this._remoteTitle ? (0, _index.html)(_templateObject2_c37bbb80809211edaa2833647dc78c6c || (_templateObject2_c37bbb80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<h3>", "</h3>"])), this._remoteTitle) : "");
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(SiteRemoteContent.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(SiteRemoteContent.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === 'uuid' && _this2[propName] && !_this2.breakreference && !_this2.loading && !_this2.circularBlock) {
            _this2.loading = true;
            var url = _this2.siteurl;

            if (url == '' && window.HAXCMS && window.location) {
              url = "".concat(window.location.origin).concat(window.HAXCMS.instance.store.location.baseUrl);
            } // when UUID changes, remote load the content from it, replacing our own light dom material


            _microFrontendRegistry.MicroFrontendRegistry.call("@haxcms/pageCache", {
              site: url,
              type: "link",
              uuid: _this2.uuid,
              data: true
            }, _this2.renderContentResponse.bind(_this2));
          } // aggressive, only run this if we actually are an author of material / have HAX tools


          if (propName === 'siteurl' && window.HaxStore && !_this2.loading && !_this2.circularBlock) {
            clearTimeout(_this2.__debounce);
            _this2.__debounce = setTimeout(function () {
              _this2.loading = true; // forces the form to update as opposed to deferring to what it loaded initially

              _this2.__refresh = true;
              window.HaxStore.instance.refreshActiveNodeForm();
            }, 1500);
          } // this is crazy, take that content and spill it into lightDom
          // and it should be modifiable


          if (propName === 'breakreference' && _this2[propName]) {
            // find the content area in shadow
            var cid = _this2.shadowRoot.querySelector('#content');

            var child = cid.firstElementChild;

            while (child) {
              _this2.appendChild(child);

              child = cid.firstElementChild;
            }
          } // used to be break reference, now we as re-establishing the reference
          else if (propName === 'breakreference' && !_this2[propName] && oldValue && !_this2.circularBlock) {
              _this2.loading = true;
              (0, _utils.wipeSlot)(_this2);
              var _url = _this2.siteurl;

              if (_url == '' && window.HAXCMS && window.location) {
                _url = "".concat(window.location.origin).concat(window.HAXCMS.instance.store.location.baseUrl);
              }

              _microFrontendRegistry.MicroFrontendRegistry.call("@haxcms/pageCache", {
                site: _url,
                type: "link",
                uuid: _this2.uuid,
                data: true
              }, _this2.renderContentResponse.bind(_this2));
            }
        });
      }
    }, {
      key: "renderContentResponse",
      value: function renderContentResponse(response) {
        if (response.data) {
          // if HAX is actively editing, don't capture these mutations
          // in hax-body or the nodes become contenteditable when they
          // should not be
          if (window.HaxStore && !this.breakreference) {
            window.HaxStore.instance.activeBodyIgnoreActive(true);
          } // find the content area in shadow


          var cid = this.shadowRoot.querySelector('#content'); // remove past stuff

          (0, _utils.wipeSlot)(cid); // build fake div and encap the content from endpoint

          var div = document.createElement('div'); // encap script just to be paranoid

          var _html = response.data.content.replace(/<script[\s\S]*?>/gi, "&lt;script&gt;");

          _html = _html.replace(/<\/script>/gi, "&lt;/script&gt;");
          div.innerHTML = _html; // append as child of this element

          this.appendChild(div); // kill the div, the children spill into this tag

          (0, _utils.unwrap)(div); // update title and loading status

          this._remoteTitle = response.data.title;
          this.loading = false; // if we break the linkage, we blow this instance of the tag up
          // and we'll have everything in the state the user expects but
          // without the reference to the original
          // if we don't break the reference, the childNodes are moved
          // into the shadow selector for content so they can't be modified

          if (!this.breakreference) {
            (0, _utils.lightChildrenToShadowRootSelector)(this, '#content');
          }

          if (this.itemManifest && response.data && !this.breakreference) {
            window.HaxStore.instance.activeBodyIgnoreActive(false);
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear(); // create and inject these values into the dom node NEXT to this one.

            if (!this.nextElementSibling || this.nextElementSibling && this.nextElementSibling.tagName !== 'CITATION-ELEMENT') {
              var ce = document.createElement('citation-element');
              ce.title = "".concat(this.itemManifest.title, " - ").concat(response.data.title);
              ce.source = "".concat(response.data.site).concat(response.data.slug);
              ce.date = "".concat(dd, "/").concat(mm, "/").concat(yyyy);
              ce.scope = "sibling";
              ce.license = this.itemManifest.license;
              ce.creator = this.itemManifest.metadata.author.name;
              this.insertAdjacentElement('afterend', ce);
            } // already exists, so just update the one next to it
            else if (this.nextElementSibling && this.nextElementSibling.tagName === 'CITATION-ELEMENT') {
                var _ce = this.nextElementSibling;
                _ce.title = "".concat(this.itemManifest.title, " - ").concat(response.data.title);
                _ce.source = "".concat(response.data.site).concat(response.data.slug);
                _ce.date = "".concat(dd, "/").concat(mm, "/").concat(yyyy);
                _ce.scope = "sibling";
                _ce.license = this.itemManifest.license;
                _ce.creator = this.itemManifest.metadata.author.name;
              }
          }
        }
      }
      /**
      * Props
      */

    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        babelHelpers.get(babelHelpers.getPrototypeOf(SiteRemoteContent.prototype), "firstUpdated", this).call(this, changedProperties);

        if (this.children.length > 0) {
          var cid = this.shadowRoot.querySelector('#content');
          (0, _utils.wipeSlot)(cid);
          (0, _utils.lightChildrenToShadowRootSelector)(this, '#content');
        }
      }
      /**
      * haxProperties integration via file reference
      */

    }, {
      key: "haxHooks",
      value:
      /**
      * Implements haxHooks to tie into life-cycle if hax exists.
      */
      function haxHooks() {
        return {
          // need to add the nodeToContent hook / progressive enhancement
          progressiveEnhancement: "haxprogressiveEnhancement",
          setupActiveElementForm: "haxsetupActiveElementForm"
        };
      } // render the shadow root hidden content to lightDom
      // so we can pull it in on initial page load

    }, {
      key: "haxprogressiveEnhancement",
      value: function haxprogressiveEnhancement(el) {
        return this.shadowRoot.querySelector('#content').innerHTML;
      }
      /**
       * Allow for dynamic setting of the parent field if we have the store around
       * with values to do so
       */

    }, {
      key: "haxsetupActiveElementForm",
      value: function () {
        var _haxsetupActiveElementForm = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(props) {
          var _this3 = this;

          var response, items;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!window.HAXCMS) {
                    _context.next = 15;
                    break;
                  }

                  if (!(Object.keys(this.itemManifest).length === 0 || this.__refresh)) {
                    _context.next = 11;
                    break;
                  }

                  this.__refresh = false; // support remore vs local look up

                  if (!this.siteurl) {
                    _context.next = 10;
                    break;
                  }

                  _context.next = 6;
                  return _microFrontendRegistry.MicroFrontendRegistry.call("@haxcms/siteManifest", {
                    site: this.siteurl
                  });

                case 6:
                  response = _context.sent;

                  if (response.data) {
                    this.itemManifest = response.data;
                  }

                  _context.next = 11;
                  break;

                case 10:
                  this.itemManifest = _haxcmsSiteStore.store.getManifest(true);

                case 11:
                  // default to null parent as the whole site
                  items = [{
                    text: this.t.selectPage,
                    value: null
                  }];
                  this.itemManifest.items.forEach(function (el) {
                    if (el.id != _this3.itemId) {
                      (function () {
                        // calculate -- depth so it looks like a tree
                        var itemBuilder = el; // walk back through parent tree

                        var distance = "- ";

                        while (itemBuilder && itemBuilder.parent != null) {
                          itemBuilder = _this3.itemManifest.items.find(function (i) {
                            return i.id == itemBuilder.parent;
                          }); // double check structure is sound

                          if (itemBuilder) {
                            distance = "--" + distance;
                          }
                        }

                        items.push({
                          text: distance + el.title,
                          value: el.id
                        });
                      })();
                    }
                  });
                  props.settings.configure.forEach(function (attr, index) {
                    if (attr.property === "uuid") {
                      props.settings.configure[index].disabled = false;
                      props.settings.configure[index].inputMethod = "select";
                      props.settings.configure[index].itemsList = items; // disable changes if we broke a reference

                      if (_this3.breakreference) {
                        props.settings.configure[index].disabled = true;
                      }
                    } else if (attr.property === "siteurl") {
                      props.settings.configure[index].disabled = false; // disable changes if we broke a reference

                      if (_this3.breakreference) {
                        props.settings.configure[index].disabled = true;
                      }
                    }
                  }); // end loading indicator as data should be present now

                  this.loading = false;

                case 15:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function haxsetupActiveElementForm(_x) {
          return _haxsetupActiveElementForm.apply(this, arguments);
        }

        return haxsetupActiveElementForm;
      }()
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject3_c37bbb80809211edaa2833647dc78c6c || (_templateObject3_c37bbb80809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline;\n        }\n        #slot {\n          display: none;\n        }\n        :host #content {\n          border-left: 10px solid #EEEEEE;\n          margin-left: -10px;\n        }\n        :host([breakreference]) #slot {\n          display: block;\n        }\n        :host([breakreference]) #content {\n          display: none;\n          border-left: unset;\n          margin-left: unset;\n        }\n        :host([loading]) .loading {\n          margin: 8px 0 0 -12px;\n          font-size: 2px;\n          width: 4px;\n          height: 4px;\n          border-radius: 50%;\n          position: absolute;\n          -webkit-animation: load5 1.1s infinite ease;\n          animation: load5 1.1s infinite ease;\n          -webkit-transform: translateZ(0);\n          -ms-transform: translateZ(0);\n          transform: translateZ(0);\n        }\n        @-webkit-keyframes load5 {\n          0%,\n          100% {\n            box-shadow: 0em -2.6em 0em 0em var(--enhanced-text-color, #000000),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.5),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7);\n          }\n          12.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.7),\n              1.8em -1.8em 0 0em var(--enhanced-text-color, #000000),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5);\n          }\n          25% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.5),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7),\n              2.5em 0em 0 0em var(--enhanced-text-color, #000000),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          37.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.7),\n              1.75em 1.75em 0 0em var(--enhanced-text-color, #000000),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          50% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.5),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.7),\n              0em 2.5em 0 0em var(--enhanced-text-color, #000000),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          62.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.5),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.7),\n              -1.8em 1.8em 0 0em var(--enhanced-text-color, #000000),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          75% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.5),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.7),\n              -2.6em 0em 0 0em var(--enhanced-text-color, #000000),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          87.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.5),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.7),\n              -1.8em -1.8em 0 0em var(--enhanced-text-color, #000000);\n          }\n        }\n        @keyframes load5 {\n          0%,\n          100% {\n            box-shadow: 0em -2.6em 0em 0em var(--enhanced-text-color, #000000),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.5),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7);\n          }\n          12.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.7),\n              1.8em -1.8em 0 0em var(--enhanced-text-color, #000000),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5);\n          }\n          25% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.5),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.7),\n              2.5em 0em 0 0em var(--enhanced-text-color, #000000),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          37.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.5),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.7),\n              1.75em 1.75em 0 0em var(--enhanced-text-color, #000000),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          50% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.5),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.7),\n              0em 2.5em 0 0em var(--enhanced-text-color, #000000),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.2),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          62.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.5),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.7),\n              -1.8em 1.8em 0 0em var(--enhanced-text-color, #000000),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          75% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.5),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.7),\n              -2.6em 0em 0 0em var(--enhanced-text-color, #000000),\n              -1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2);\n          }\n          87.5% {\n            box-shadow: 0em -2.6em 0em 0em rgba(255, 255, 255, 0.2),\n              1.8em -1.8em 0 0em rgba(255, 255, 255, 0.2),\n              2.5em 0em 0 0em rgba(255, 255, 255, 0.2),\n              1.75em 1.75em 0 0em rgba(255, 255, 255, 0.2),\n              0em 2.5em 0 0em rgba(255, 255, 255, 0.2),\n              -1.8em 1.8em 0 0em rgba(255, 255, 255, 0.5),\n              -2.6em 0em 0 0em rgba(255, 255, 255, 0.7),\n              -1.8em -1.8em 0 0em var(--enhanced-text-color, #000000);\n          }\n        }\n      "])))];
      }
      /**
      * Store the tag name to make it easier to obtain directly.
      */

    }, {
      key: "tag",
      get: function get() {
        return "site-remote-content";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SiteRemoteContent), "properties", this)), {}, {
          uuid: {
            type: String
          },
          // to avoid confusion w/ the site itself
          siteurl: {
            type: String
          },
          showTitle: {
            type: Boolean,
            attribute: 'show-title'
          },
          _remoteTitle: {
            type: String
          },
          loading: {
            type: Boolean,
            reflect: true
          },
          breakreference: {
            type: Boolean,
            reflect: true
          }
        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          type: "grid",
          canScale: false,
          canPosition: false,
          canEditSource: false,
          gizmo: {
            title: "Site Content",
            description: "Reuse content from one site in another.",
            icon: "hax:remote",
            color: "grey",
            groups: ["Content", "CMS"],
            handles: [],
            meta: {
              author: "HAXTheWeb core team"
            }
          },
          settings: {
            configure: [{
              property: "siteurl",
              title: "Site address",
              description: "Paste address to reference content from if not the current site",
              inputMethod: "textfield"
            }, {
              property: "uuid",
              title: "Item",
              description: "Item to render for the link / title data",
              inputMethod: "textfield"
            }, {
              property: "breakreference",
              title: "Break reference",
              description: "Checking this box copies the remote content for editing locally but removes the association. It will no longer get updates when the reference material updates.",
              inputMethod: "boolean"
            }, {
              property: "showTitle",
              title: "Show title",
              description: "Toggle on to render the title of the resource being displayed",
              inputMethod: "boolean"
            }]
          },
          demoSchema: [{
            tag: "site-remote-content",
            properties: {
              showTitle: true,
              _remoteTitle: "Select content"
            },
            content: "<div>Select content to load</div>"
          }],
          saveOptions: {
            unsetAttributes: ["t", "_remote-title"]
          }
        };
      }
    }]);
    return SiteRemoteContent;
  }((0, _HAXCMSI18NMixin2.HAXCMSI18NMixin)(_index.LitElement));

  _exports.SiteRemoteContent = SiteRemoteContent;
  customElements.define(SiteRemoteContent.tag, SiteRemoteContent);
});