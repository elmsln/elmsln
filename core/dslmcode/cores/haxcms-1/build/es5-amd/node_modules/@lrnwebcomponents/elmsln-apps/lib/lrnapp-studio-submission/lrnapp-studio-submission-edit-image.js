define(["exports", "../../../../@polymer/polymer/polymer-element.js", "./lrnapp-studio-submission-media-editoverlay.js"], function (_exports, _polymerElement, _lrnappStudioSubmissionMediaEditoverlay) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEditImage = void 0;

  var _templateObject_eb3bc3608e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioSubmissionEditImage = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionEditImage, _PolymerElement);

    var _super = _createSuper(LrnappStudioSubmissionEditImage);

    function LrnappStudioSubmissionEditImage() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionEditImage);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioSubmissionEditImage, [{
      key: "_getThumbnail",
      value: function _getThumbnail(image) {
        return image.url;
      }
    }, {
      key: "_computeEmbedCode",
      value: function _computeEmbedCode(image) {
        return "![Alternative Text Here](" + image.url + ")";
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_eb3bc3608e0011ed99ce491205e67b1d || (_templateObject_eb3bc3608e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style is=\"custom-style\">\n          :host {\n            display: inline-flex;\n            justify-content: space-around;\n            min-height: 100px;\n            position: relative;\n          }\n\n          img.image {\n            height: 200px;\n            display: block;\n          }\n        </style>\n      </custom-style>\n      <lrnapp-studio-submission-media-editoverlay\n        data-index$=\"[[index]]\"\n        embedcode=\"{{embedcode}}\"\n      >\n        <img\n          src=\"[[thumbnail]]\"\n          style=\"width:200px; height:200px; background-color: lightgray;\"\n          class=\"contain\"\n          loading=\"lazy\"\n        />\n      </lrnapp-studio-submission-media-editoverlay>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-edit-image";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          image: {
            type: Object,
            notify: true
          },
          thumbnail: {
            type: String,
            notify: true,
            computed: "_getThumbnail(image)"
          },
          embedcode: {
            type: String,
            computed: "_computeEmbedCode(image)"
          }
        };
      }
    }]);
    return LrnappStudioSubmissionEditImage;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionEditImage = LrnappStudioSubmissionEditImage;
  customElements.define(LrnappStudioSubmissionEditImage.tag, LrnappStudioSubmissionEditImage);
});