define(["exports", "../../../lit/index.js", "../../simple-modal/lib/simple-modal-template.js", "./hax-view-source.js", "./hax-ui-styles.js", "../../i18n-manager/lib/I18NMixin.js"], function (_exports, _index, _simpleModalTemplate, _haxViewSource, _haxUiStyles, _I18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxExportDialog = void 0;

  var _templateObject_9fd37790809211edaa2833647dc78c6c, _templateObject2_9fd37790809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-export-dialog`
   * @element hax-export-dialog
   * `Export dialog with all export options and settings provided.`
   */
  var HaxExportDialog = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(HaxExportDialog, _I18NMixin);

    var _super = _createSuper(HaxExportDialog);

    function HaxExportDialog() {
      var _this;

      babelHelpers.classCallCheck(this, HaxExportDialog);
      _this = _super.call(this);
      _this.t = {
        viewPageSource: "View Page Source"
      };

      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        namespace: "hax"
      });

      return _this;
    }

    babelHelpers.createClass(HaxExportDialog, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxExportDialog.prototype), "connectedCallback", this).call(this);
        window.addEventListener("simple-modal-show", this.modalToggle.bind(this));
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.removeEventListener("simple-modal-show", this.modalToggle.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxExportDialog.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * a bit hacky but gets around the cloning element and events issue
       */

    }, {
      key: "modalToggle",
      value: function modalToggle(e) {
        if (e.detail.id == "hax-export") {
          e.detail.elements.custom.openSource();
        }
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_9fd37790809211edaa2833647dc78c6c || (_templateObject_9fd37790809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-modal-template\n        modal-id=\"hax-export\"\n        mode=\"hax-ui\"\n        id=\"dialog\"\n        .title=\"", "\"\n      >\n        <hax-view-source slot=\"custom\"></hax-view-source>\n      </simple-modal-template>\n    "])), this.t.viewPageSource);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(_haxUiStyles.HaxComponentStyles), [(0, _index.css)(_templateObject2_9fd37790809211edaa2833647dc78c6c || (_templateObject2_9fd37790809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: none;\n          --simple-modal-resize: both;\n          --simple-modal-height: 100vh;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-export-dialog";
      }
    }]);
    return HaxExportDialog;
  }((0, _I18NMixin2.I18NMixin)(_index.LitElement));

  _exports.HaxExportDialog = HaxExportDialog;
  customElements.define(HaxExportDialog.tag, HaxExportDialog);
});