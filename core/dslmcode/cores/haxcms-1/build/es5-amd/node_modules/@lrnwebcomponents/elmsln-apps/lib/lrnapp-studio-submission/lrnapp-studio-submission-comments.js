define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "./lrnapp-studio-submission-comment.js"], function (_exports, _polymerElement, _domIf, _domRepeat, _lrnappStudioSubmissionComment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionComments = void 0;

  var _templateObject_b4006a20809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioSubmissionComments = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionComments, _PolymerElement);

    var _super = _createSuper(LrnappStudioSubmissionComments);

    function LrnappStudioSubmissionComments() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionComments);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioSubmissionComments, [{
      key: "_toArray",
      value:
      /**
       * Simple way to convert from object to array.
       */
      function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_b4006a20809211edaa2833647dc78c6c || (_templateObject_b4006a20809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"[[submission.relationships.comments]]\">\n        <template\n          is=\"dom-repeat\"\n          items=\"[[_toArray(submission.relationships.comments.data)]]\"\n          as=\"comment\"\n        >\n          <lrnapp-studio-submission-comment\n            comment=\"{{comment}}\"\n          ></lrnapp-studio-submission-comment>\n        </template>\n      </template>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-comments";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          submission: {
            type: Object
          }
        };
      }
    }]);
    return LrnappStudioSubmissionComments;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionComments = LrnappStudioSubmissionComments;
  customElements.define(LrnappStudioSubmissionComments.tag, LrnappStudioSubmissionComments);
});