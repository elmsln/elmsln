define(["exports", "../../lit/index.js", "../chartist-render/chartist-render.js", "../simple-colors/simple-colors.js"], function (_exports, _index, _chartistRender, _simpleColors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignChart = void 0;

  var _templateObject_6e1bf560809211edaa2833647dc78c6c, _templateObject2_6e1bf560809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrndesign-chart`
   * common properties and behaviors for lrndesign chart types
   *
   * @extends ChartistRenderSuper
   * @see @lrnwebcomponents/chartist-render/chartist-render.js
   * @see @lrnwebcomponents/simple-colors/simple-colors.js
   */
  var LrndesignChart = function LrndesignChart(SuperClass) {
    return /*#__PURE__*/function (_ChartistRenderSuper) {
      babelHelpers.inherits(_class, _ChartistRenderSuper);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);

        _this.setProperties();

        _this.makeChart();

        return _this;
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */


      babelHelpers.createClass(_class, [{
        key: "render",
        value: // render function
        function render() {
          return (0, _index.html)(_templateObject_6e1bf560809211edaa2833647dc78c6c || (_templateObject_6e1bf560809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" ", ""])), babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "render", this).call(this));
        } // haxProperty definition

      }, {
        key: "axisTitles",
        get:
        /**
         * gets axis title options
         * @readonly
         */
        function get() {
          var axisTitles = {};
          if (this.axisXTitle) axisTitles.axisX = {
            axisTitle: this.axisXTitle,
            offset: {
              x: this.axisXTitleOffsetX,
              y: this.axisXTitleOffsetY
            },
            textAnchor: ["start", "end", "middle"].includes(this.axisXTitleAnchor) ? this.axisXTitleAnchor : "middle"
          };
          if (this.axisYTitle) axisTitles.axisY = {
            axisTitle: this.axisYTitle,
            offset: {
              x: this.axisYTitleOffsetX,
              y: this.axisYTitleOffsetY
            },
            textAnchor: ["start", "end", "middle"].includes(this.axisYTitleAnchor) ? this.axisYTitleAnchor : "middle"
          };
          return this.axisXTitle || this.axisYTitle ? axisTitles : undefined;
        } // extends haxProperty definition to line and bar properties

      }, {
        key: "lineBarOptions",
        get:
        /**
         * override this with type-specific options
         * @returns {object} options specific to both bar and line charts
         * @readonly
         * @memberof LrndesignChart
         * @memberof LrndesignChart
         */
        function get() {
          return {
            high: this.high,
            low: this.low,
            axisX: {
              labelOffset: {
                x: this.axisXLabelOffsetX,
                y: this.axisXLabelOffsetY,
                offset: this.axisXOffset
              },
              position: this.axisXPosition,
              showGrid: this.axisXShowGrid,
              showLabel: this.axisXShowLabel
            },
            axisY: {
              labelOffset: {
                x: this.axisYLabelOffsetX,
                y: this.axisYLabelOffsetY,
                offset: this.axisYOffset
              },
              position: this.axisYPosition,
              showGrid: this.axisYShowGrid,
              showLabel: this.axisYShowLabel,
              onlyInteger: this.axisYOnlyInteger,
              scaleMinSpace: this.axisYScaleMinSpace
            },
            showGridBackground: this.showGridBackground,
            chartPadding: {
              bottom: this.chartPaddingBottom + (this.axisXTitle ? 40 : 0),
              left: this.chartPaddingLeft + (this.axisYTitle ? 30 : 0),
              right: this.chartPaddingRight + (this.axisYTitle ? 15 : 0),
              top: this.chartPaddingTop + (this.axisXTitle ? 20 : 0)
            }
          };
        }
        /**
         *
         * override this with type-specific options
         * @returns {object} options
         * @readonly
         * @memberof LrndesignChart
         */

      }, {
        key: "options",
        get: function get() {
          return {
            reverseData: this.reverseData
          };
        }
      }, {
        key: "updated",
        value: function updated(changedProperties) {
          var _this2 = this;

          changedProperties.forEach(function (oldValue, propName) {
            if ((propName.indexOf("axisXTitle") > -1 || propName.indexOf("axisYTitle") > -1) && _this2[propName] !== oldValue) {
              _this2.pluginAxisTitle = _this2.axisTitles;
            }
          });
          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this).call(this, changedProperties);
        }
        /**
         * Sets properties for chart.
         * Specific chart types can extend this function
         * with type-specific properties.
         */

      }, {
        key: "setProperties",
        value: function setProperties() {
          this.dark = false;
          this.scale = "ct-minor-seventh";
          this.reverseData = false;
          this.rawData = "";
        }
        /**
         * Sets properties specific to bar and line charts.
         * Bar and line charts can include this function
         * in their extended setProperties function.
         */

      }, {
        key: "setBarLineProperties",
        value: function setBarLineProperties() {
          this.high = undefined;
          this.low = undefined;
          this.axisXLabelOffsetX = 0;
          this.axisXLabelOffsetY = 0;
          this.axisXOffset = 30;
          this.axisXPosition = "end";
          this.axisXShowGrid = true;
          this.axisXShowLabel = true;
          this.axisXTopLeft = false;
          this.axisXTitleOffsetX = 0;
          this.axisXTitleOffsetY = 50;
          this.axisXTitleAnchor = "middle";
          this.axisYTitleOffsetX = 0;
          this.axisYTitleOffsetY = -25;
          this.axisYTitleAnchor = "middle";
          this.axisYTitleFlip = false;
          this.axisYLabelOffsetX = 0;
          this.axisYLabelOffsetY = 0;
          this.axisYOffset = 30;
          this.axisYOnlyInteger = false;
          this.axisYPosition = "start";
          this.axisYScaleMinSpace = 20;
          this.axisYShowGrid = true;
          this.axisYShowLabel = true;
          this.axisYTopLeft = true;
          this.showGridBackground = false;
          this.chartPaddingBottom = 15;
          this.chartPaddingLeft = 15;
          this.chartPaddingRight = 15;
          this.chartPaddingTop = 15;
        }
        /**
         * life cycle, element is removed from the DOM
         */
        //disconnectedCallback() {}

      }], [{
        key: "styles",
        get: //styles function
        function get() {
          return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)), babelHelpers.toConsumableArray(_simpleColors.SimpleColors.styles), [(0, _index.css)(_templateObject2_6e1bf560809211edaa2833647dc78c6c || (_templateObject2_6e1bf560809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          :host {\n            background-color: var(--simple-colors-default-theme-grey-1);\n            color: var(--simple-colors-default-theme-grey-12);\n            --chartist-color-1: var(--simple-colors-default-theme-red-9);\n            --chartist-color-2: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-3: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-4: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-5: var(--simple-colors-default-theme-green-9);\n            --chartist-color-6: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-7: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-8: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-9: var(--simple-colors-default-theme-red-9);\n            --chartist-color-10: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-11: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-12: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-13: var(--simple-colors-default-theme-green-9);\n            --chartist-color-14: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-15: var(--simple-colors-default-theme-pink-9);\n          }\n\n          :host([dark]) {\n            --chartist-padding: 10px;\n          }\n\n          :host([accent-color=\"red\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-red-9);\n            --chartist-color-2: var(--simple-colors-default-theme-pink-10);\n            --chartist-color-3: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n            --chartist-color-4: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-5: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-6: var(--simple-colors-default-theme-red-11);\n            --chartist-color-7: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-8: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-9: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-10: var(--simple-colors-default-theme-orange-9);\n            --chartist-color-11: var(--simple-colors-default-theme-red-10);\n            --chartist-color-12: var(--simple-colors-default-theme-pink-11);\n            --chartist-color-13: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-14: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-15: var(--simple-colors-default-theme-orange-11);\n          }\n\n          :host([accent-color=\"pink\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-2: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-3: var(--simple-colors-default-theme-red-11);\n            --chartist-color-4: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-5: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-6: var(--simple-colors-default-theme-pink-11);\n            --chartist-color-7: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-8: var(--simple-colors-default-theme-red-10);\n            --chartist-color-9: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-10: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-11: var(--simple-colors-default-theme-pink-10);\n            --chartist-color-12: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-13: var(--simple-colors-default-theme-red-9);\n            --chartist-color-14: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-15: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n          }\n\n          :host([accent-color=\"purple\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-2: var(\n              --simple-colors-default-theme-deep-purple-10\n            );\n            --chartist-color-3: var(--simple-colors-default-theme-pink-11);\n            --chartist-color-4: var(--simple-colors-default-theme-indigo-9);\n            --chartist-color-5: var(--simple-colors-default-theme-red-10);\n            --chartist-color-6: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-7: var(\n              --simple-colors-default-theme-deep-purple-9\n            );\n            --chartist-color-8: var(--simple-colors-default-theme-pink-10);\n            --chartist-color-9: var(--simple-colors-default-theme-indigo-11);\n            --chartist-color-10: var(--simple-colors-default-theme-red-9);\n            --chartist-color-11: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-12: var(\n              --simple-colors-default-theme-deep-purple-11\n            );\n            --chartist-color-13: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-14: var(--simple-colors-default-theme-indigo-10);\n            --chartist-color-15: var(--simple-colors-default-theme-red-11);\n          }\n\n          :host([accent-color=\"deep-purple\"]) {\n            --chartist-color-1: var(\n              --simple-colors-default-theme-deep-purple-9\n            );\n            --chartist-color-2: var(--simple-colors-default-theme-indigo-10);\n            --chartist-color-3: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-4: var(--simple-colors-default-theme-blue-9);\n            --chartist-color-5: var(--simple-colors-default-theme-pink-10);\n            --chartist-color-6: var(\n              --simple-colors-default-theme-deep-purple-11\n            );\n            --chartist-color-7: var(--simple-colors-default-theme-indigo-9);\n            --chartist-color-8: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-9: var(--simple-colors-default-theme-blue-11);\n            --chartist-color-10: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-11: var(\n              --simple-colors-default-theme-deep-purple-10\n            );\n            --chartist-color-12: var(--simple-colors-default-theme-indigo-11);\n            --chartist-color-13: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-14: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-15: var(--simple-colors-default-theme-pink-11);\n          }\n\n          :host([accent-color=\"indigo\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-indigo-9);\n            --chartist-color-2: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-3: var(\n              --simple-colors-default-theme-deep-purple-11\n            );\n            --chartist-color-4: var(--simple-colors-default-theme-light-blue-9);\n            --chartist-color-5: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-6: var(--simple-colors-default-theme-indigo-11);\n            --chartist-color-7: var(--simple-colors-default-theme-blue-9);\n            --chartist-color-8: var(\n              --simple-colors-default-theme-deep-purple-10\n            );\n            --chartist-color-9: var(\n              --simple-colors-default-theme-light-blue-11\n            );\n            --chartist-color-10: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-11: var(--simple-colors-default-theme-indigo-10);\n            --chartist-color-12: var(--simple-colors-default-theme-blue-11);\n            --chartist-color-13: var(\n              --simple-colors-default-theme-deep-purple-9\n            );\n            --chartist-color-14: var(\n              --simple-colors-default-theme-light-blue-10\n            );\n            --chartist-color-15: var(--simple-colors-default-theme-purple-11);\n          }\n\n          :host([accent-color=\"blue\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-blue-9);\n            --chartist-color-2: var(\n              --simple-colors-default-theme-light-blue-10\n            );\n            --chartist-color-3: var(--simple-colors-default-theme-indigo-11);\n            --chartist-color-4: var(--simple-colors-default-theme-cyan-9);\n            --chartist-color-5: var(\n              --simple-colors-default-theme-deep-purple-10\n            );\n            --chartist-color-6: var(--simple-colors-default-theme-blue-11);\n            --chartist-color-7: var(--simple-colors-default-theme-light-blue-9);\n            --chartist-color-8: var(--simple-colors-default-theme-indigo-10);\n            --chartist-color-9: var(--simple-colors-default-theme-cyan-11);\n            --chartist-color-10: var(\n              --simple-colors-default-theme-deep-purple-9\n            );\n            --chartist-color-11: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-12: var(\n              --simple-colors-default-theme-light-blue-11\n            );\n            --chartist-color-13: var(--simple-colors-default-theme-indigo-9);\n            --chartist-color-14: var(--simple-colors-default-theme-cyan-10);\n            --chartist-color-15: var(\n              --simple-colors-default-theme-deep-purple-11\n            );\n          }\n\n          :host([accent-color=\"light-blue\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-light-blue-9);\n            --chartist-color-2: var(--simple-colors-default-theme-cyan-10);\n            --chartist-color-3: var(--simple-colors-default-theme-blue-11);\n            --chartist-color-4: var(--simple-colors-default-theme-teal-9);\n            --chartist-color-5: var(--simple-colors-default-theme-indigo-10);\n            --chartist-color-6: var(\n              --simple-colors-default-theme-light-blue-11\n            );\n            --chartist-color-7: var(--simple-colors-default-theme-cyan-9);\n            --chartist-color-8: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-9: var(--simple-colors-default-theme-teal-11);\n            --chartist-color-10: var(--simple-colors-default-theme-indigo-9);\n            --chartist-color-11: var(\n              --simple-colors-default-theme-light-blue-10\n            );\n            --chartist-color-12: var(--simple-colors-default-theme-cyan-11);\n            --chartist-color-13: var(--simple-colors-default-theme-blue-9);\n            --chartist-color-14: var(--simple-colors-default-theme-teal-10);\n            --chartist-color-15: var(--simple-colors-default-theme-indigo-11);\n          }\n\n          :host([accent-color=\"cyan\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-cyan-9);\n            --chartist-color-2: var(--simple-colors-default-theme-teal-10);\n            --chartist-color-3: var(\n              --simple-colors-default-theme-light-blue-11\n            );\n            --chartist-color-4: var(--simple-colors-default-theme-green-9);\n            --chartist-color-5: var(--simple-colors-default-theme-blue-10);\n            --chartist-color-6: var(--simple-colors-default-theme-cyan-11);\n            --chartist-color-7: var(--simple-colors-default-theme-teal-9);\n            --chartist-color-8: var(\n              --simple-colors-default-theme-light-blue-10\n            );\n            --chartist-color-9: var(--simple-colors-default-theme-green-11);\n            --chartist-color-10: var(--simple-colors-default-theme-blue-9);\n            --chartist-color-11: var(--simple-colors-default-theme-cyan-10);\n            --chartist-color-12: var(--simple-colors-default-theme-teal-11);\n            --chartist-color-13: var(\n              --simple-colors-default-theme-light-blue-9\n            );\n            --chartist-color-14: var(--simple-colors-default-theme-green-10);\n            --chartist-color-15: var(--simple-colors-default-theme-blue-11);\n          }\n\n          :host([accent-color=\"teal\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-teal-9);\n            --chartist-color-2: var(--simple-colors-default-theme-green-10);\n            --chartist-color-3: var(--simple-colors-default-theme-cyan-11);\n            --chartist-color-4: var(\n              --simple-colors-default-theme-light-green-9\n            );\n            --chartist-color-5: var(\n              --simple-colors-default-theme-light-blue-10\n            );\n            --chartist-color-6: var(--simple-colors-default-theme-teal-11);\n            --chartist-color-7: var(--simple-colors-default-theme-green-9);\n            --chartist-color-8: var(--simple-colors-default-theme-cyan-10);\n            --chartist-color-9: var(\n              --simple-colors-default-theme-light-green-11\n            );\n            --chartist-color-10: var(\n              --simple-colors-default-theme-light-blue-9\n            );\n            --chartist-color-11: var(--simple-colors-default-theme-teal-10);\n            --chartist-color-12: var(--simple-colors-default-theme-green-11);\n            --chartist-color-13: var(--simple-colors-default-theme-cyan-9);\n            --chartist-color-14: var(\n              --simple-colors-default-theme-light-green-10\n            );\n            --chartist-color-15: var(\n              --simple-colors-default-theme-light-blue-11\n            );\n          }\n\n          :host([accent-color=\"green\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-green-9);\n            --chartist-color-2: var(\n              --simple-colors-default-theme-light-green-10\n            );\n            --chartist-color-3: var(--simple-colors-default-theme-teal-11);\n            --chartist-color-4: var(--simple-colors-default-theme-lime-9);\n            --chartist-color-5: var(--simple-colors-default-theme-cyan-10);\n            --chartist-color-6: var(--simple-colors-default-theme-green-11);\n            --chartist-color-7: var(\n              --simple-colors-default-theme-light-green-9\n            );\n            --chartist-color-8: var(--simple-colors-default-theme-teal-10);\n            --chartist-color-9: var(--simple-colors-default-theme-lime-11);\n            --chartist-color-10: var(--simple-colors-default-theme-cyan-9);\n            --chartist-color-11: var(--simple-colors-default-theme-green-10);\n            --chartist-color-12: var(\n              --simple-colors-default-theme-light-green-11\n            );\n            --chartist-color-13: var(--simple-colors-default-theme-teal-9);\n            --chartist-color-14: var(--simple-colors-default-theme-lime-10);\n            --chartist-color-15: var(--simple-colors-default-theme-cyan-11);\n          }\n\n          :host([accent-color=\"light-green\"]) {\n            --chartist-color-1: var(\n              --simple-colors-default-theme-light-green-9\n            );\n            --chartist-color-2: var(--simple-colors-default-theme-lime-10);\n            --chartist-color-3: var(--simple-colors-default-theme-green-11);\n            --chartist-color-4: var(--simple-colors-default-theme-amber-9);\n            --chartist-color-5: var(--simple-colors-default-theme-teal-10);\n            --chartist-color-6: var(\n              --simple-colors-default-theme-light-green-11\n            );\n            --chartist-color-7: var(--simple-colors-default-theme-lime-9);\n            --chartist-color-8: var(--simple-colors-default-theme-green-10);\n            --chartist-color-9: var(--simple-colors-default-theme-amber-11);\n            --chartist-color-10: var(--simple-colors-default-theme-teal-9);\n            --chartist-color-11: var(\n              --simple-colors-default-theme-light-green-10\n            );\n            --chartist-color-12: var(--simple-colors-default-theme-lime-11);\n            --chartist-color-13: var(--simple-colors-default-theme-green-9);\n            --chartist-color-14: var(--simple-colors-default-theme-amber-10);\n            --chartist-color-15: var(--simple-colors-default-theme-teal-11);\n          }\n\n          :host([accent-color=\"lime\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-lime-9);\n            --chartist-color-2: var(--simple-colors-default-theme-yellow-10);\n            --chartist-color-3: var(\n              --simple-colors-default-theme-light-green-11\n            );\n            --chartist-color-4: var(--simple-colors-default-theme-orange-9);\n            --chartist-color-5: var(--simple-colors-default-theme-green-10);\n            --chartist-color-6: var(--simple-colors-default-theme-lime-11);\n            --chartist-color-7: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-8: var(\n              --simple-colors-default-theme-light-green-10\n            );\n            --chartist-color-9: var(--simple-colors-default-theme-orange-11);\n            --chartist-color-10: var(--simple-colors-default-theme-green-9);\n            --chartist-color-11: var(--simple-colors-default-theme-lime-10);\n            --chartist-color-12: var(--simple-colors-default-theme-yellow-11);\n            --chartist-color-13: var(\n              --simple-colors-default-theme-light-green-9\n            );\n            --chartist-color-14: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-15: var(--simple-colors-default-theme-green-11);\n          }\n\n          :host([accent-color=\"yellow\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-2: var(--simple-colors-default-theme-amber-10);\n            --chartist-color-3: var(--simple-colors-default-theme-lime-11);\n            --chartist-color-4: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-5: var(\n              --simple-colors-default-theme-light-green-10\n            );\n            --chartist-color-6: var(--simple-colors-default-theme-yellow-11);\n            --chartist-color-7: var(--simple-colors-default-theme-amber-9);\n            --chartist-color-8: var(--simple-colors-default-theme-lime-10);\n            --chartist-color-9: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n            --chartist-color-10: var(\n              --simple-colors-default-theme-light-green-9\n            );\n            --chartist-color-11: var(--simple-colors-default-theme-yellow-10);\n            --chartist-color-12: var(--simple-colors-default-theme-amber-11);\n            --chartist-color-13: var(--simple-colors-default-theme-lime-9);\n            --chartist-color-14: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-15: var(\n              --simple-colors-default-theme-light-green-11\n            );\n          }\n\n          :host([accent-color=\"amber\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-amber-9);\n            --chartist-color-2: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-3: var(--simple-colors-default-theme-yellow-11);\n            --chartist-color-4: var(--simple-colors-default-theme-red-9);\n            --chartist-color-5: var(--simple-colors-default-theme-lime-10);\n            --chartist-color-6: var(--simple-colors-default-theme-amber-11);\n            --chartist-color-7: var(--simple-colors-default-theme-orange-9);\n            --chartist-color-8: var(--simple-colors-default-theme-yellow-10);\n            --chartist-color-9: var(--simple-colors-default-theme-red-11);\n            --chartist-color-10: var(--simple-colors-default-theme-lime-9);\n            --chartist-color-11: var(--simple-colors-default-theme-amber-10);\n            --chartist-color-12: var(--simple-colors-default-theme-orange-11);\n            --chartist-color-13: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-14: var(--simple-colors-default-theme-red-10);\n            --chartist-color-15: var(--simple-colors-default-theme-lime-11);\n          }\n\n          :host([accent-color=\"orange\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-orange-9);\n            --chartist-color-2: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-3: var(--simple-colors-default-theme-amber-11);\n            --chartist-color-4: var(--simple-colors-default-theme-pink-9);\n            --chartist-color-5: var(--simple-colors-default-theme-yellow-10);\n            --chartist-color-6: var(--simple-colors-default-theme-orange-11);\n            --chartist-color-7: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-8: var(--simple-colors-default-theme-amber-10);\n            --chartist-color-9: var(--simple-colors-default-theme-pink-11);\n            --chartist-color-10: var(--simple-colors-default-theme-yellow-9);\n            --chartist-color-11: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-12: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n            --chartist-color-13: var(--simple-colors-default-theme-amber-9);\n            --chartist-color-14: var(--simple-colors-default-theme-pink-10);\n            --chartist-color-15: var(--simple-colors-default-theme-yellow-11);\n          }\n\n          :host([accent-color=\"deep-orange\"]) {\n            --chartist-color-1: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-2: var(--simple-colors-default-theme-red-10);\n            --chartist-color-3: var(--simple-colors-default-theme-orange-11);\n            --chartist-color-4: var(--simple-colors-default-theme-purple-9);\n            --chartist-color-5: var(--simple-colors-default-theme-amber-10);\n            --chartist-color-6: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n            --chartist-color-7: var(--simple-colors-default-theme-red-9);\n            --chartist-color-8: var(--simple-colors-default-theme-orange-10);\n            --chartist-color-9: var(--simple-colors-default-theme-purple-11);\n            --chartist-color-10: var(--simple-colors-default-theme-amber-9);\n            --chartist-color-11: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-12: var(--simple-colors-default-theme-red-11);\n            --chartist-color-13: var(--simple-colors-default-theme-orange-9);\n            --chartist-color-14: var(--simple-colors-default-theme-purple-10);\n            --chartist-color-15: var(--simple-colors-default-theme-amber-11);\n          }\n\n          :host([accent-color=\"brown\"]) {\n            --chartist-color-1: var(--simple-colors-default-theme-brown-9);\n            --chartist-color-2: var(--simple-colors-default-theme-red-10);\n            --chartist-color-3: var(\n              --simple-colors-default-theme-deep-orange-11\n            );\n            --chartist-color-4: var(--simple-colors-default-theme-brown-12);\n            --chartist-color-5: var(--simple-colors-default-theme-red-13);\n            --chartist-color-6: var(\n              --simple-colors-default-theme-deep-orange-9\n            );\n            --chartist-color-7: var(--simple-colors-default-theme-brown-10);\n            --chartist-color-8: var(--simple-colors-default-theme-red-11);\n            --chartist-color-9: var(\n              --simple-colors-default-theme-deep-orange-12\n            );\n            --chartist-color-10: var(--simple-colors-default-theme-brown-13);\n            --chartist-color-11: var(--simple-colors-default-theme-red-9);\n            --chartist-color-12: var(\n              --simple-colors-default-theme-deep-orange-10\n            );\n            --chartist-color-13: var(--simple-colors-default-theme-brown-11);\n            --chartist-color-14: var(--simple-colors-default-theme-red-12);\n            --chartist-color-15: var(\n              --simple-colors-default-theme-deep-orange-13\n            );\n          }\n\n          #chart,\n          ::slotted(table) {\n            font-family: sans-serif;\n            --chartist-grid-color: var(--simple-colors-default-theme-grey-6);\n            --chartist-bg-color: var(--simple-colors-default-theme-grey-1);\n            --chartist-text-color: var(--simple-colors-default-theme-grey-12);\n          }\n\n          :host([label-position=\"inside\"]) .ct-label {\n            --chartist-text-color: var(--simple-colors-default-theme-grey-1);\n          }\n\n          :host([dark]) ::slotted(table) {\n            --chartist-text-color: var(--simple-colors-default-theme-grey-12);\n            --chartist-grid-color: var(--simple-colors-default-theme-grey-6);\n          }\n        "])))]);
        }
      }, {
        key: "haxProperties",
        get: function get() {
          return {
            canScale: true,
            canPosition: true,
            canEditSource: true,
            gizmo: {
              description: "Creates an accessible chart based on a CSV.",
              color: "green darken-4",
              groups: ["Data", "Presentation"],
              handles: [{
                type: "data",
                url: "csvFile"
              }],
              meta: {
                author: "HAXTheWeb core team"
              }
            },
            settings: {
              configure: [{
                property: "accentColor",
                title: "Accent Color",
                description: "An optional accent color.",
                inputMethod: "colorpicker"
              }, {
                property: "dark",
                title: "Dark Theme",
                description: "Enable Dark Theme",
                inputMethod: "boolean"
              }, {
                property: "dataSource",
                title: "CSV File",
                description: "Load data from a CSV.",
                inputMethod: "haxupload",
                icon: "link"
              }, {
                slot: "heading",
                title: "Chart Title",
                description: "Accessible alt text for your chart.",
                inputMethod: "textfield",
                icon: "text-field"
              }, {
                slot: "desc",
                title: "Chart Description",
                description: "Accessible description of your chart.",
                inputMethod: "textfield",
                icon: "text-field"
              }, {
                property: "scale",
                title: "Scale Name",
                description: "The ratio of width:height of the chart (See https://gionkunz.github.io/chartist-js/getting-started.html#default-sass-settings for $ct-scales and $ct-scales-names).",
                inputMethod: "select",
                options: {
                  "ct-square": "ct-square (1:1)",
                  "ct-minor-second": "ct-minor-second  (15:16)",
                  "ct-major-second": "ct-major-second  (8:9)",
                  "ct-minor-third": "ct-minor-third  (5:6)",
                  "ct-major-third": "ct-major-third  (4:5)",
                  "ct-perfect-fourth": "ct-perfect-fourth  (3:4)",
                  "ct-perfect-fifth": "ct-perfect-fifth  (2:3)",
                  "ct-minor-sixth": "ct-minor-sixth  (5:8)",
                  "ct-golden-section": "ct-golden-section  (1:1.618)",
                  "ct-major-sixth": "ct-major-sixth  (3:5)",
                  "ct-minor-seventh": "ct-minor-seventh  (9:16)",
                  "ct-major-seventh": "ct-major-seventh  (8:15)",
                  "ct-octave": "ct-octave  (1:2)",
                  "ct-major-tenth": "ct-major-tenth  (2:5)",
                  "ct-major-eleventh": "ct-major-eleventh  (3:8)",
                  "ct-major-twelfth": "ct-major-twelfth  (1:3)",
                  "ct-double-octave": "ct-double-octave  (1:4`)"
                }
              }],
              advanced: [{
                property: "reverseData",
                title: "Reverse Data",
                description: "Reverse data including labels, the series order as well as the whole series data arrays.",
                inputMethod: "boolean"
              }, {
                slot: "",
                title: "HTML Table",
                description: "Optional: Load data as an HTML table.",
                inputMethod: "code-editor"
              }]
            }
          };
        } // properties available to the custom element for data binding

      }, {
        key: "properties",
        get: function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            /**
             * Location of the CSV file.
             */
            accentColor: {
              type: String,
              attribute: "accent-color",
              reflect: true
            },

            /**
             * Location of the CSV file.
             */
            dark: {
              type: Boolean,
              attribute: "dark",
              reflect: true
            },

            /**
             * Fixed height for the chart as a string (i.e. '100px' or '50%').
             */
            height: {
              type: String
            },

            /**
             * Reverse data including labels, the series order as well as
             * the whole series data arrays.
             */
            reverseData: {
              type: Boolean,
              attribute: "reverse-data"
            },

            /**
             * Fixed width for the chart as a string (i.e. '100px' or '50%').
             */
            width: {
              type: String
            }
          });
        }
      }, {
        key: "tag",
        get: function get() {
          return "lrndesign-chart";
        }
      }, {
        key: "lineBarHaxProperties",
        get: function get() {
          return {
            gridBackground: [{
              property: "showGridBackground",
              title: "Show Grid Background",
              inputMethod: "boolean"
            }],
            padding: [{
              property: "chartPaddingTop",
              title: "Chart Padding (top)",
              inputMethod: "text-field"
            }, {
              property: "chartPaddingBottom",
              title: "Chart Padding (bottom)",
              inputMethod: "text-field"
            }, {
              property: "chartPaddingLeft",
              title: "Chart Padding (left)",
              inputMethod: "text-field"
            }, {
              property: "chartPaddingRight",
              title: "Chart Padding (right)",
              inputMethod: "text-field"
            }],
            minMax: [{
              property: "low",
              title: "Chart Minimum",
              description: "\n             Overriding the natural low of the chart allows you to zoom in \n             or limit the chart's lowest displayed value",
              inputMethod: "number"
            }, {
              property: "high",
              title: "Chart Maximum",
              description: "\n             Overriding the natural high of the chart allows you to zoom in \n             or limit the chart's highest displayed value",
              inputMethod: "number"
            }],
            xAxis: [{
              property: "axisXShowGrid",
              title: "X-Axis Show Grid",
              description: "Show the X-Axis's grid.",
              inputMethod: "boolean"
            }, {
              property: "axisXOffset",
              title: "X-Axis Offset",
              inputMethod: "number"
            }, {
              property: "axisXPosition",
              title: "X-Axis Position",
              description: "\n               Position where labels are placed. Can be set to \"start\" or \"end\" \n               where \"start\" is equivalent to left or top on vertical axis\n               and \"end\" is equivalent to right or bottom on horizontal axis",
              inputMethod: "text-field"
            }, {
              property: "axisXShowLabel",
              title: "X-Axis Show Label",
              description: "Show the X-Axis's label.",
              inputMethod: "boolean"
            }, {
              property: "axisXLabelOffsetX",
              title: "X-Axis Label (horizontal offset)",
              description: "Horizontal position of the X-Axis's labels.",
              inputMethod: "number"
            }, {
              property: "axisXTitleOffsetY",
              title: "X-Axis Label (vertical offset)",
              description: "Vertical position of the X-Axis's labels.",
              inputMethod: "number"
            }, {
              property: "axisXTitle",
              title: "X-Axis Title",
              description: "Optional title for X-axis.",
              inputMethod: "textfield"
            }, {
              property: "axisXTitleOffsetX",
              title: "X-Axis Title (horizontal offset)",
              description: "Horizontal position of the X-Axis's title.",
              inputMethod: "number"
            }, {
              property: "axisXLabelOffsetY",
              title: "X-Axis Title (vertical offset)",
              description: "Vertical position of the X-Axis's title.",
              inputMethod: "number"
            }, {
              property: "axisXTitleAnchor",
              title: "X-Axis Title Anchoe",
              description: "Optional anchor for X-axis's title.",
              inputMethod: "select",
              options: {
                middle: "middle",
                end: "end",
                start: "start"
              }
            }],
            yAxis: [{
              property: "axisYShowGrid",
              title: "Y-Axis: Show Grid",
              description: "Show the Y-Axis's grid.",
              inputMethod: "boolean"
            }, {
              property: "axisYOffset",
              title: "Y-Axis Offset",
              inputMethod: "number"
            }, {
              property: "axisYPosition",
              title: "Y-Axis Position",
              description: "\n               Position where labels are placed. Can be set to \"start\" or \"end\" \n               where \"start\" is equivalent to left or top on vertical axis\n               and \"end\" is equivalent to right or bottom on horizontal axis",
              inputMethod: "text-field"
            }, {
              property: "axisYShowLabel",
              title: "Y-Axis Show Label",
              description: "Show the Y-Axis's label.",
              inputMethod: "boolean"
            }, {
              property: "axisYLabelOffsetX",
              title: "Y-Axis Label (horizontal offset)",
              description: "Horizontal position of the Y-Axis's label.",
              inputMethod: "number"
            }, {
              property: "axisYLabelOffsetY",
              title: "Y-Axis Label (vertical offset)",
              description: "Vertical position of the Y-Axis's label.",
              inputMethod: "number"
            }, {
              property: "axisYScaleMinSpace",
              title: "Y-Axis Scale Minimum Space",
              description: "Specifies minimum height in pixel of scale steps.",
              inputMethod: "number"
            }, {
              property: "axisYOnlyInteger",
              title: "Y-Axis Scale (only integers)",
              description: "Use only integer values (whole numbers) for the scale steps.",
              inputMethod: "boolean"
            }, {
              property: "axisYTitle",
              title: "Y-Axis Title",
              description: "Optional title for Y-axis.",
              inputMethod: "textfield"
            }, {
              property: "axisYTitleOffsetX",
              title: "Y-Axis Title (vertical offset)",
              description: "Horizontal position of the Y-Axis's title.",
              inputMethod: "number"
            }, {
              property: "axisYLabelOffsetY",
              title: "Y-Axis Title (horizontal offset)",
              description: "Horizontal position of the Y-Axis's title.",
              inputMethod: "number"
            }, {
              property: "axisYTitleAnchor",
              title: "Y-Axis Title Anchoe",
              description: "Optional anchor for Y-axis's title.",
              inputMethod: "select",
              options: {
                middle: "middle",
                end: "end",
                start: "start"
              }
            }, {
              property: "axisYTitleFlip",
              title: "Y-Axis Title Flip",
              description: "Flip the title for Y-axis?",
              inputMethod: "boolean"
            }]
          };
        } //properties common to line and bar charts

      }, {
        key: "lineBarProperties",
        get: function get() {
          return {
            /**
             * Offset X of labels for X-axis
             */
            axisXLabelOffsetX: {
              attribute: "axis-x-label-offset-x",
              type: Number
            },

            /**
             * Offset Y of labels for X-axis
             */
            axisXLabelOffsetY: {
              attribute: "axis-x-label-offset-y",
              type: Number
            },

            /**
             * The offset of the chart drawing area to the border of the container.
             */
            axisXOffset: {
              attribute: "axis-x-offset",
              type: Number
            },

            /**
             * Position where labels are placed.
             * Can be set to `start` or `end`
             * where `start` is equivalent to left or top on vertical axis
             * and `end` is equivalent to right or bottom on horizontal axis.
             */
            axisXPosition: {
              attribute: "axis-x-position",
              type: String
            },

            /**
             * Show axis X grid?
             */
            axisXShowGrid: {
              attribute: "axis-x-show-grid",
              type: Boolean
            },

            /**
             * Show axis X labels?
             */
            axisXShowLabel: {
              attribute: "axis-x-show-label",
              type: Boolean
            },

            /**
             * Optional title of x-axis
             */
            axisXTitle: {
              attribute: "axis-x-title",
              type: String
            },

            /**
             * Optional x-offset for x-axis title
             */
            axisXTitleOffsetX: {
              attribute: "axis-x-title-offset",
              type: Number
            },

            /**
             * Optional y-offset for x-axis title
             */
            axisXTitleOffsetY: {
              attribute: "axis-x-title-offset",
              type: Number
            },

            /**
             * Optional title of x-axis. Possible values are 'start', 'end' and 'middle'.
             */
            axisXTitleAnchor: {
              attribute: "axis-x-title-anchor",
              type: String
            },

            /**
             /**
              * Offset X of labels for Y-axis
              */
            axisYLabelOffsetX: {
              attribute: "axis-y-label-offset-x",
              type: Number
            },

            /**
             * Offset Y of labels for Y-axis
             */
            axisYLabelOffsetY: {
              attribute: "axis-y-label-offset-y",
              type: Number
            },

            /**
             * Position where labels are placed.
             * Can be set to `start` or `end`
             * where `start` is equivalent to left or top on vertical axis
             * and `end` is equivalent to right or bottom on horizontal axis.
             */
            axisYPosition: {
              attribute: "axis-y-position",
              type: String
            },

            /**
             * Specifies minimum height in pixel of scale steps
             */
            axisYScaleMinSpace: {
              attribute: "axis-y-scale-min-space",
              type: Number
            },

            /**
             * The offset of the chart drawing area to the border of the container.
             */
            axisYOffset: {
              attribute: "axis-y-offset",
              type: Number
            },

            /**
             * Use only integer values (whole numbers) for the scale steps
             */
            axisYOnlyInteger: {
              attribute: "axis-y-only-integer",
              type: Boolean
            },

            /**
             * Show axis Y grid?
             */
            axisYshowGrid: {
              attribute: "axis-y-show-grid",
              type: Boolean
            },

            /**
             * Show axis Y labels?
             */
            axisYShowLabel: {
              attribute: "axis-y-show-label",
              type: Boolean
            },

            /**
             * Position labels at top-left of axis?
             */
            axisYTopLeft: {
              attribute: "axis-y-top-left",
              type: Boolean
            },

            /**
             * Optional title of y-axis
             */
            axisYTitle: {
              attribute: "axis-y-title",
              type: String
            },

            /**
             * Optional x-offset for y-axis title.
             * Please note, x and y offset values for axisY are flipped due to the rotation of the axisY title by 90 degrees.
             * Therefore changing y moves left/right.
             */
            axisYTitleOffsetX: {
              attribute: "axis-y-title-offset",
              type: Number
            },

            /**
             * Optional y-offset for y-axis title.
             * Please note, x and y offset values for axisY are flipped due to the rotation of the axisY title by 90 degrees.
             * Therefore changing the x value moves up/down the chart.
             */
            axisYTitleOffsetY: {
              attribute: "axis-y-title-offset",
              type: Number
            },

            /**
             * Optional title of y-axis. Possible values are 'start', 'end' and 'middle'.
             */
            axisYTitleAnchor: {
              attribute: "axis-y-title-anchor",
              type: String
            },

            /**
             * Optional title of y-axis
             */
            axisYTitleFlip: {
              attribute: "axis-y-title-flip",
              type: Boolean
            },

            /**
             * Padding below chart drawing area
             */
            chartPaddingBottom: {
              attribute: "chart-padding-bottom",
              type: String
            },

            /**
             * Padding left of chart drawing area
             */
            chartPaddingLeft: {
              attribute: "chart-padding-left",
              type: String
            },

            /**
             * Padding right of chart drawing area
             */
            chartPaddingRight: {
              attribute: "chart-padding-right",
              type: String
            },

            /**
             * Padding above chart drawing area
             */
            chartPaddingTop: {
              attribute: "chart-padding-top",
              type: String
            },

            /**
             * Overriding the natural high of the chart allows you to zoom in
             * or limit the charts highest displayed value.
             */
            high: {
              type: Number
            },

            /**
             * Overriding the natural low of the chart allows you to zoom in
             * or limit the charts lowest displayed value.
             */
            low: {
              type: Number
            },

            /**
             * If the bar chart should add a background fill to the .ct-grids group.
             */
            showGridBackground: {
              attribute: "show-grid-background",
              type: Boolean
            }
          };
        }
      }]);
      return _class;
    }((0, _chartistRender.ChartistRenderSuper)(SuperClass));
  };

  _exports.LrndesignChart = LrndesignChart;
});