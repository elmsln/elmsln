define(["exports", "../../../lit/index.js", "../../a11y-menu-button/lib/a11y-menu-button-item.js"], function (_exports, _index, _a11yMenuButtonItem) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleToolbarMenuItem = void 0;

  var _templateObject_de8055508e0011ed99ce491205e67b1d, _templateObject2_de8055508e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `simple-toolbar-menu`
   * `An icon / button that has support for multiple options via drop down.`
   *
   * @microcopy - the mental model for this element
   * - panel - the flyout from left or right side that has elements that can be placed
   * - button - an item that expresses what interaction you will have with the content.
   *
   * @element simple-toolbar-menu-item
   * @extends A11yMenuButtonItemBehaviors
   */
  var SimpleToolbarMenuItem = /*#__PURE__*/function (_A11yMenuButtonItemBe) {
    babelHelpers.inherits(SimpleToolbarMenuItem, _A11yMenuButtonItemBe);

    var _super = _createSuper(SimpleToolbarMenuItem);

    function SimpleToolbarMenuItem() {
      babelHelpers.classCallCheck(this, SimpleToolbarMenuItem);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(SimpleToolbarMenuItem, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_de8055508e0011ed99ce491205e67b1d || (_templateObject_de8055508e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <li role=\"none\">\n        <slot></slot>\n      </li>\n    "])));
      }
    }, {
      key: "menuItem",
      get:
      /**
       * gets item with role="menuitem"
       *
       * @readonly
       */
      function get() {
        return this.querySelector("[role=menuitem]") || babelHelpers.get(babelHelpers.getPrototypeOf(SimpleToolbarMenuItem.prototype), "menuItem", this);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SimpleToolbarMenuItem), "styles", this)), [(0, _index.css)(_templateObject2_de8055508e0011ed99ce491205e67b1d || (_templateObject2_de8055508e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          --simple-toolbar-button-min-width: 100% !important;\n        }\n        ::slotted(*) {\n          --simple-toolbar-border-radius: 0px;\n          display: flex;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "simple-toolbar-menu-item";
      }
    }]);
    return SimpleToolbarMenuItem;
  }((0, _a11yMenuButtonItem.A11yMenuButtonItemBehaviors)(_index.LitElement));

  _exports.SimpleToolbarMenuItem = SimpleToolbarMenuItem;
  customElements.define(SimpleToolbarMenuItem.tag, SimpleToolbarMenuItem);
});