define(["exports", "../../lit/index.js", "../simple-modal/simple-modal.js", "./lib/img-view-viewer.js", "../img-pan-zoom/img-pan-zoom.js"], function (_exports, _index, _simpleModal, _imgViewViewer, _imgPanZoom) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ImgViewModal = void 0;

  var _templateObject_a6dcb6208e0011ed99ce491205e67b1d, _templateObject2_a6dcb6208e0011ed99ce491205e67b1d;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `img-view-modal`
   * Combines img-pan-zoom and simple-modal for an easy image zoom solution
   *
  ### Styling
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--img-view-modal-width` | sets width of modal | 90%
  `--img-view-modal-height` | sets height of modal | 90vh
  `--img-view-modal-backgroundColor` | background color | white
  `--img-view-modal-color` | text color | black
  `--img-view-modal-borderColor` | border color | #ddd
  `--img-view-modal-toggled-backgroundColor` | background color of toggled buttons and kbd commands | #eee
   *
   * @demo demo/index.html
   * @element img-view-modal
   * 
   */
  var ImgViewModal = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(ImgViewModal, _LitElement);

    var _super = _createSuper(ImgViewModal);

    function ImgViewModal() {
      var _this;

      babelHelpers.classCallCheck(this, ImgViewModal);
      _this = _super.call(this);
      _this.modal = window.SimpleModal.requestAvailability();

      _this.addEventListener("click", _this.modalOpen);

      return _this;
    }

    babelHelpers.createClass(ImgViewModal, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a6dcb6208e0011ed99ce491205e67b1d || (_templateObject_a6dcb6208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" <slot></slot> "])));
      }
    }, {
      key: "_getCssVar",
      value: function _getCssVar(propName) {
        return getComputedStyle(this).getPropertyValue(propName);
      }
    }, {
      key: "modalOpen",
      value: function modalOpen() {
        var _this2 = this;

        if (!this.disabled) {
          var _modalStyles, _detail;

          var evt,
              modalStyles = (_modalStyles = {
            "--simple-modal-width": this._getCssVar("--simple-modal-width") || "90%",
            "--simple-modal-height": this._getCssVar("--simple-modal-height") || "90vh",
            "--simple-modal-titlebar-height": this._getCssVar("--simple-modal-titlebar-height") || "40px",
            "--simple-modal-titlebar-line-height": this._getCssVar("--simple-modal-titlebar-line-height") || "40px"
          }, babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-height", this._getCssVar("--simple-modal-titlebar-height") || "40px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-padding", this._getCssVar("--simple-modal-titlebar-padding") || "0px 5px 0px 15px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-background", this._getCssVar("--simple-modal-titlebar-background") || "white"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-background", this._getCssVar("--simple-modal-header-background") || "white"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-color", this._getCssVar("--simple-modal-header-color") || "black"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-padding", this._getCssVar("--simple-modal-header-padding") || "0px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-content-padding", this._getCssVar("--simple-modal-content-padding") || "0px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-buttons-padding", this._getCssVar("--simple-modal-buttons-padding") || "0px"), _modalStyles),
              imgStyles = {
            "--img-view-viewer-backgroundColor": this._getCssVar("i--mg-view-viewer-backgroundColor") || "white",
            "--img-view-viewer-height": "calc(var(--simple-modal-height) - var(--simple-modal-titlebar-height))",
            "--img-view-viewer-color": this._getCssVar("--img-view-viewer-color") || "black",
            "--img-view-viewer-borderColor": this._getCssVar("--img-view-viewer-borderColor") || "#ddd",
            "--img-view-viewer-toggled-backgroundColor": this._getCssVar("--img-view-viewer-toggled-backgroundColor") || "#eee"
          },
              img = document.createElement("img-view-viewer"),
              props = [].concat(babelHelpers.toConsumableArray(Object.keys(_imgViewViewer.ImgViewViewer.properties || {})), babelHelpers.toConsumableArray(Object.keys(_imgPanZoom.ImgPanZoom.properties || {})));
          props.forEach(function (prop) {
            if (_this2[prop]) img[prop] = _this2[prop];
          });
          Object.keys(imgStyles || {}).forEach(function (key) {
            return img.style.setProperty(key, imgStyles[key]);
          });
          this.dispatchEvent(new CustomEvent("modal-button-click", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: this
          }));
          evt = new CustomEvent("simple-modal-show", {
            bubbles: true,
            composed: true,
            cancelable: false,
            detail: (_detail = {
              title: this.title || false,
              elements: {
                content: img
              },
              styles: {
                "--simple-modal-width": "50vw",
                "--simple-modal-max-width": "75vw",
                "--simple-modal-z-index": "100000000",
                "--simple-modal-min-height": "50vh"
              }
            }, babelHelpers.defineProperty(_detail, "styles", modalStyles), babelHelpers.defineProperty(_detail, "invokedBy", this), babelHelpers.defineProperty(_detail, "clone", false), _detail)
          });
          this.dispatchEvent(evt);
        }
      }
    }], [{
      key: "tag",
      get:
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      function get() {
        return "img-view-modal";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread(_objectSpread({}, _imgViewViewer.ImgViewViewer.properties), _imgPanZoom.ImgPanZoom.properties), {}, {
          title: {
            type: String
          },
          modal: {
            type: Object
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_a6dcb6208e0011ed99ce491205e67b1d || (_templateObject2_a6dcb6208e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: block;\n        --simple-modal-width: var(--img-view-modal-width, 90%);\n        --simple-modal-height: var(--img-view-modal-height, 90vh);\n        --simple-modal-titlebar-height: 40px;\n        --simple-modal-titlebar-line-height: 40px;\n        --simple-modal-titlebar-height: 40px;\n        --simple-modal-titlebar-padding: 0px 5px 0px 15px;\n        --simple-modal-titlebar-background: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --simple-modal-header-background: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --simple-modal-header-color: var(--img-view-modal-color, black);\n        --simple-modal-header-padding: 0px;\n        --simple-modal-content-padding: 0px;\n        --simple-modal-buttons-padding: 0px;\n        --img-view-viewer-height: calc(\n          var(--simple-modal-height) - var(--simple-modal-titlebar-height)\n        );\n        --img-view-viewer-backgroundColor: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --img-view-viewer-color: var(--img-view-modal-color, black);\n        --img-view-viewer-borderColor: var(--img-view-modal-borderColor, #ddd);\n        --img-view-viewer-toggled-backgroundColor: var(\n          --img-view-modal-toggled-backgroundColor,\n          #eee\n        );\n      }\n      :host([hidden]) {\n        display: none;\n      }\n    "])));
      }
    }]);
    return ImgViewModal;
  }(_index.LitElement);

  _exports.ImgViewModal = ImgViewModal;
  customElements.define(ImgViewModal.tag, ImgViewModal);
});