define(["exports", "require", "../../../lit/index.js", "../../dl-behavior/dl-behavior.js", "../../utils/utils.js", "./hax-store.js", "./hax-toolbar.js", "./hax-ui-styles.js", "../../../mobx/dist/mobx.esm.js", "../../i18n-manager/lib/I18NMixin.js", "../../file-system-broker/lib/docx-file-system-broker.js", "../../simple-toolbar/lib/simple-toolbar-menu.js", "../../simple-toolbar/lib/simple-toolbar-menu-item.js", "./hax-tray-button.js", "../../micro-frontend-registry/micro-frontend-registry.js"], function (_exports, _require, _index, _dlBehavior, _utils, _haxStore, _haxToolbar, _haxUiStyles, _mobxEsm, _I18NMixin2, _docxFileSystemBroker, _simpleToolbarMenu, _simpleToolbarMenuItem, _haxTrayButton, _microFrontendRegistry) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxViewSource = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_a0d02710809211edaa2833647dc78c6c, _templateObject2_a0d02710809211edaa2833647dc78c6c, _templateObject3_a0d02710809211edaa2833647dc78c6c, _templateObject4_a0d02710809211edaa2833647dc78c6c, _templateObject5_a0d02710809211edaa2833647dc78c6c, _templateObject6_a0d02710809211edaa2833647dc78c6c, _templateObject7_a0d02710809211edaa2833647dc78c6c, _templateObject8_a0d02710809211edaa2833647dc78c6c, _templateObject9_a0d02710809211edaa2833647dc78c6c, _templateObject10_a0d02710809211edaa2833647dc78c6c, _templateObject11_a0d02710809211edaa2833647dc78c6c, _templateObject12_a0d02710809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && babelHelpers.instanceof(outerFn.prototype, Generator) ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers.typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-eview-source`
   * @element hax-eview-source
   * `Export dialog with all export options and settings provided.`
   */
  var HaxViewSource = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(HaxViewSource, _I18NMixin);

    var _super = _createSuper(HaxViewSource);

    function HaxViewSource() {
      var _this;

      babelHelpers.classCallCheck(this, HaxViewSource);
      _this = _super.call(this);
      _this.t = {
        updateContent: "Update content",
        copyHTML: "Copy HTML",
        downloadContent: "Download content",
        downloadHTML: "Download HTML",
        fileDownloaded: "File downloaded",
        downloadDOCX: "Download DOCX",
        downloadMD: "Download Markdown",
        downloadPDF: "Download PDF",
        cleanFormatting: "Clean Formatting",
        haxSchema: "HAXSchema",
        importContent: "Import content",
        importMarkdown: "Import Markdown",
        importDOCX: "Import DOCX",
        fileImported: "File imported"
      };

      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        namespace: "hax"
      });

      _this.fileTypes = {
        CSV: "text/csv",
        JSON: "text/json",
        PDF: "application/pdf",
        TXT: "text/plain",
        HTML: "text/html"
      };
      (0, _mobxEsm.autorun)(function () {
        _this.globalPreferences = (0, _mobxEsm.toJS)(_haxStore.HAXStore.globalPreferences);
        _this.haxUiTheme = (_this.globalPreferences || {}).haxUiTheme || "hax";
      });
      return _this;
    }

    babelHelpers.createClass(HaxViewSource, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a0d02710809211edaa2833647dc78c6c || (_templateObject_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <hax-toolbar always-expanded>\n        <simple-toolbar-menu\n          icon=\"icons:file-upload\"\n          icon-position=\"top\"\n          label=\"", "\"\n          show-text-label\n        >\n          <simple-toolbar-menu-item>\n            ", "\n          </simple-toolbar-menu-item>\n          ", "\n        </simple-toolbar-menu>\n        <hax-tray-button\n          @click=\"", "\"\n          icon=\"editor:format-clear\"\n          label=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <hax-tray-button\n          @click=\"", "\"\n          icon=\"hax:html-code\"\n          label=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n        <simple-toolbar-menu\n          icon=\"icons:file-download\"\n          icon-position=\"top\"\n          label=\"", "\"\n          @dblclick=\"", "\"\n          show-text-label\n        >\n          <simple-toolbar-menu-item>\n            <hax-tray-button\n              icon=\"hax:file-html\"\n              icon-position=\"top\"\n              label=\"", "\"\n              @click=\"", "\"\n              show-text-label\n            >\n            </hax-tray-button>\n          </simple-toolbar-menu-item>\n          <simple-toolbar-menu-item>\n            ", "\n          </simple-toolbar-menu-item>\n          ", "\n          ", "\n          <simple-toolbar-menu-item>\n            <hax-tray-button\n              @click=\"", "\"\n              label=\"", "\"\n              icon=\"hax:code-json\"\n              show-text-label\n              icon-position=\"top\"\n            ></hax-tray-button>\n          </simple-toolbar-menu-item>\n        </simple-toolbar-menu>\n        <hax-tray-button\n          label=\"", "\"\n          icon=\"icons:check\"\n          @click=\"", "\"\n          show-text-label\n          icon-position=\"top\"\n        >\n        </hax-tray-button>\n      </hax-toolbar>\n      <div id=\"wrapper\">\n        <div id=\"spacer\"></div>\n        <textarea id=\"hiddentextarea\" hidden></textarea>\n        <code-editor\n          id=\"textarea\"\n          theme=\"", "\"\n          language=\"html\"\n          font-size=\"13\"\n          word-wrap\n        ></code-editor>\n      </div>\n    "])), this.t.importContent, _microFrontendRegistry.MicroFrontendRegistry.has("@core/docxToHtml") ? (0, _index.html)(_templateObject2_a0d02710809211edaa2833647dc78c6c || (_templateObject2_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <hax-tray-button\n                  @click=\"", "\"\n                  label=\"", "\"\n                  icon=\"hax:file-docx\"\n                  show-text-label\n                  icon-position=\"top\"\n                >\n                </hax-tray-button>"])), this.importDOCXviaMicro, this.t.importDOCX) : (0, _index.html)(_templateObject3_a0d02710809211edaa2833647dc78c6c || (_templateObject3_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <hax-tray-button\n                    @click=\"", "\"\n                    label=\"", "\"\n                    icon=\"hax:file-docx\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                "])), this.importDOCX, this.t.importDOCX), _microFrontendRegistry.MicroFrontendRegistry.has("@core/mdToHtml") ? (0, _index.html)(_templateObject4_a0d02710809211edaa2833647dc78c6c || (_templateObject4_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                <simple-toolbar-menu-item>\n                  <hax-tray-button\n                    label=\"", "\"\n                    icon=\"hax:format-textblock\"\n                    @click=\"", "\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                </simple-toolbar-menu-item>\n              "])), this.t.importMarkdown, this.importMDviaMicro) : (0, _index.html)(_templateObject5_a0d02710809211edaa2833647dc78c6c || (_templateObject5_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([""]))), this.scrubContent, this.t.cleanFormatting, this.selectBody, this.t.copyHTML, this.t.downloadContent, this.download, this.t.downloadHTML, this.download, _microFrontendRegistry.MicroFrontendRegistry.has("@core/htmlToDocx") ? (0, _index.html)(_templateObject6_a0d02710809211edaa2833647dc78c6c || (_templateObject6_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <hax-tray-button\n                    label=\"", "\"\n                    icon=\"hax:file-docx\"\n                    @click=\"", "\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                "])), this.t.downloadDOCX, this.downloadDOCXviaMicro) : (0, _index.html)(_templateObject7_a0d02710809211edaa2833647dc78c6c || (_templateObject7_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <hax-tray-button\n                    label=\"", "\"\n                    icon=\"hax:file-docx\"\n                    @click=\"", "\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                "])), this.t.downloadDOCX, this.downloadDOCX), _microFrontendRegistry.MicroFrontendRegistry.has("@core/htmlToMd") ? (0, _index.html)(_templateObject8_a0d02710809211edaa2833647dc78c6c || (_templateObject8_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                <simple-toolbar-menu-item>\n                  <hax-tray-button\n                    label=\"", "\"\n                    icon=\"hax:format-textblock\"\n                    @click=\"", "\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                </simple-toolbar-menu-item>\n              "])), this.t.downloadMD, this.downloadMDviaMicro) : (0, _index.html)(_templateObject9_a0d02710809211edaa2833647dc78c6c || (_templateObject9_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([""]))), _microFrontendRegistry.MicroFrontendRegistry.has("@core/htmlToPdf") ? (0, _index.html)(_templateObject10_a0d02710809211edaa2833647dc78c6c || (_templateObject10_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                <simple-toolbar-menu-item>\n                  <hax-tray-button\n                    label=\"", "\"\n                    icon=\"lrn:pdf\"\n                    @click=\"", "\"\n                    show-text-label\n                    icon-position=\"top\"\n                  >\n                  </hax-tray-button>\n                </simple-toolbar-menu-item>\n              "])), this.t.downloadPDF, this.downloadPDFviaMicro) : (0, _index.html)(_templateObject11_a0d02710809211edaa2833647dc78c6c || (_templateObject11_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([""]))), this.htmlToHaxElements, this.t.haxSchema, this.t.updateContent, this.importContent, this.haxUiTheme == "hax" ? "vs" : this.haxUiTheme == "haxdark" ? "vs-dark" : "auto");
      }
    }, {
      key: "refreshHTMLEditor",
      value: // ability to refresh source view; possible something else in the system updated it
      // after we loaded
      function refreshHTMLEditor(e) {
        this.updateEditor();
      } // import docx file, locally

    }, {
      key: "importDOCX",
      value: function importDOCX(e) {
        // import and then go for it
        new Promise(function (res, rej) {
          return _require.default(["../../file-system-broker/lib/docx-file-system-broker.js"], res, rej);
        }).then( /*#__PURE__*/function () {
          var _ref = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
            var broker, file;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    broker = window.FileSystemBroker.requestAvailability();
                    _context.next = 3;
                    return broker.loadFile("docx");

                  case 3:
                    file = _context.sent;
                    // returns a Promise via event call when it's ready
                    window.DOCXFileSystemBroker.requestAvailability().fileToHTML(file, "hax-view-source");

                  case 5:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));

          return function (_x) {
            return _ref.apply(this, arguments);
          };
        }());
      } // import markdown from a file

    }, {
      key: "importMDviaMicro",
      value: function importMDviaMicro(e) {
        var _this2 = this;

        new Promise(function (res, rej) {
          return _require.default(["../../file-system-broker/lib/docx-file-system-broker.js"], res, rej);
        }).then( /*#__PURE__*/function () {
          var _ref2 = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {
            var broker, contents, response;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    broker = window.FileSystemBroker.requestAvailability();
                    _context2.next = 3;
                    return broker.getFileContents("markdown");

                  case 3:
                    contents = _context2.sent;
                    _context2.next = 6;
                    return _microFrontendRegistry.MicroFrontendRegistry.call("@core/mdToHtml", {
                      md: contents
                    });

                  case 6:
                    response = _context2.sent;

                    if (response.status == 200) {
                      // fake file event from built in method for same ux
                      _this2.insertContentsFromFile({
                        detail: {
                          name: "hax-view-source",
                          value: response.data
                        }
                      });
                    }

                  case 8:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));

          return function (_x2) {
            return _ref2.apply(this, arguments);
          };
        }());
      } // import using microservice to obtain file contents

    }, {
      key: "importDOCXviaMicro",
      value: function importDOCXviaMicro(e) {
        var _this3 = this;

        new Promise(function (res, rej) {
          return _require.default(["../../file-system-broker/lib/docx-file-system-broker.js"], res, rej);
        }).then( /*#__PURE__*/function () {
          var _ref3 = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {
            var broker, file, formData, response;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    broker = window.FileSystemBroker.requestAvailability();
                    _context3.next = 3;
                    return broker.loadFile("docx");

                  case 3:
                    file = _context3.sent;
                    formData = new FormData();
                    formData.append("upload", file);
                    _context3.next = 8;
                    return _microFrontendRegistry.MicroFrontendRegistry.call("@core/docxToHtml", formData);

                  case 8:
                    response = _context3.sent;

                    if (response.status == 200) {
                      // fake file event from built in method for same ux
                      _this3.insertContentsFromFile({
                        detail: {
                          name: "hax-view-source",
                          value: response.data.contents
                        }
                      });
                    }

                  case 10:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }));

          return function (_x3) {
            return _ref3.apply(this, arguments);
          };
        }());
      } // this will get called at a later time bc of the Promise involved

    }, {
      key: "insertContentsFromFile",
      value: function insertContentsFromFile(e) {
        // sanity check
        if (e.detail.name === "hax-view-source") {
          var div = document.createElement("div");
          div.innerHTML = e.detail.value;
          var slot = false;

          if (_haxStore.HAXStore.activeNode.hasAttribute("slot")) {
            slot = _haxStore.HAXStore.activeNode.getAttribute("slot");
          }

          for (var i = div.children.length - 1; i > 0; i--) {
            if (slot) {
              div.children[i].setAttribute("slot", slot);
            }

            _haxStore.HAXStore.activeNode.parentNode.insertBefore(div.children[i], _haxStore.HAXStore.activeNode.nextSibling);
          }

          _haxStore.HAXStore.toast(this.t.fileImported);

          this.close();
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource.prototype), "connectedCallback", this).call(this);
        window.addEventListener("docx-file-system-data", this.insertContentsFromFile.bind(this));
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.removeEventListener("docx-file-system-data", this.insertContentsFromFile.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * Download file.
       */

    }, {
      key: "download",
      value: function () {
        var _download = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(e) {
          var data;
          return _regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  _context4.next = 2;
                  return this.contentToFile(false);

                case 2:
                  data = _context4.sent;
                  this.downloadFromData(data, "html", "my-new-code");

                  _haxStore.HAXStore.toast(this.t.fileDownloaded);

                  this.close();

                case 6:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));

        function download(_x4) {
          return _download.apply(this, arguments);
        }

        return download;
      }()
      /**
       * Download DOCX.
       */

    }, {
      key: "downloadDOCX",
      value: function () {
        var _downloadDOCX = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(e) {
          var body;
          return _regeneratorRuntime().wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  body = _context5.sent;
                  window.DOCXFileSystemBroker.requestAvailability().HTMLToDOCX(body, document.title);

                  _haxStore.HAXStore.toast(this.t.fileDownloaded);

                  this.close();

                case 6:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5, this);
        }));

        function downloadDOCX(_x5) {
          return _downloadDOCX.apply(this, arguments);
        }

        return downloadDOCX;
      }()
      /**
       * Download DOCX, via microservice
       */

    }, {
      key: "downloadDOCXviaMicro",
      value: function () {
        var _downloadDOCXviaMicro = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(e) {
          var haxBodyHtml, response, link;
          return _regeneratorRuntime().wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  _context6.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  haxBodyHtml = _context6.sent;
                  _context6.next = 5;
                  return _microFrontendRegistry.MicroFrontendRegistry.call("@core/htmlToDocx", {
                    html: haxBodyHtml
                  });

                case 5:
                  response = _context6.sent;

                  if (response.status == 200) {
                    link = document.createElement("a"); // click link to download file
                    // @todo this downloads but claims to be corrupt.

                    link.href = window.URL.createObjectURL((0, _utils.b64toBlob)("".concat(response.data), "application/vnd.openxmlformats-officedocument.wordprocessingml.document"));
                    link.download = "PageContents.docx";
                    link.target = "_blank";
                    this.appendChild(link);
                    link.click();
                    this.removeChild(link);

                    _haxStore.HAXStore.toast(this.t.fileDownloaded);

                    this.close();
                  }

                case 7:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6, this);
        }));

        function downloadDOCXviaMicro(_x6) {
          return _downloadDOCXviaMicro.apply(this, arguments);
        }

        return downloadDOCXviaMicro;
      }()
      /**
       * Download MD, via microservice
       */

    }, {
      key: "downloadMDviaMicro",
      value: function () {
        var _downloadMDviaMicro = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e) {
          var haxBodyHtml, response, link;
          return _regeneratorRuntime().wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _context7.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  haxBodyHtml = _context7.sent;
                  _context7.next = 5;
                  return _microFrontendRegistry.MicroFrontendRegistry.call("@core/htmlToMd", {
                    html: haxBodyHtml
                  });

                case 5:
                  response = _context7.sent;

                  if (response.status == 200 && response.data) {
                    link = document.createElement("a"); // click link to download file
                    // @todo this downloads but claims to be corrupt.

                    link.href = window.URL.createObjectURL((0, _utils.b64toBlob)(btoa(response.data), "text/markdown"));
                    link.download = "PageContents.md";
                    link.target = "_blank";
                    this.appendChild(link);
                    link.click();
                    this.removeChild(link);

                    _haxStore.HAXStore.toast(this.t.fileDownloaded);

                    this.close();
                  }

                case 7:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7, this);
        }));

        function downloadMDviaMicro(_x7) {
          return _downloadMDviaMicro.apply(this, arguments);
        }

        return downloadMDviaMicro;
      }()
      /**
       * Download PDF, via microservice
       */

    }, {
      key: "downloadPDFviaMicro",
      value: function () {
        var _downloadPDFviaMicro = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {
          var htmlContent, base, response, link;
          return _regeneratorRuntime().wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  _context8.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  htmlContent = _context8.sent;
                  // base helps w/ calculating URLs in content
                  base = "";

                  if (document.querySelector("base")) {
                    base = document.querySelector("base").href;
                  }

                  _context8.next = 7;
                  return _microFrontendRegistry.MicroFrontendRegistry.call("@core/htmlToPdf", {
                    base: base,
                    html: htmlContent
                  });

                case 7:
                  response = _context8.sent;

                  if (response.status == 200 && response.data) {
                    link = document.createElement("a"); // click link to download file
                    // @todo this downloads but claims to be corrupt.

                    link.href = window.URL.createObjectURL((0, _utils.b64toBlob)(response.data, "application/pdf"));
                    link.download = "PageContents.pdf";
                    link.target = "_blank";
                    this.appendChild(link);
                    link.click();
                    this.removeChild(link);

                    _haxStore.HAXStore.toast(this.t.fileDownloaded);

                    this.close();
                  }

                case 9:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8, this);
        }));

        function downloadPDFviaMicro(_x8) {
          return _downloadPDFviaMicro.apply(this, arguments);
        }

        return downloadPDFviaMicro;
      }()
      /**
       * Download file.
       */

    }, {
      key: "downloadfull",
      value: function () {
        var _downloadfull = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {
          var data;
          return _regeneratorRuntime().wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  _context9.next = 2;
                  return this.contentToFile(true);

                case 2:
                  data = _context9.sent;
                  this.downloadFromData(data, "html", "my-new-webpage");

                  _haxStore.HAXStore.toast(this.t.fileDownloaded);

                  this.close();

                case 6:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9, this);
        }));

        function downloadfull(_x9) {
          return _downloadfull.apply(this, arguments);
        }

        return downloadfull;
      }()
      /**
       * Import content into body area.
       */

    }, {
      key: "importContent",
      value: function importContent(e) {
        // import contents of this text area into the activeHaxBody
        var htmlBody = this.shadowRoot.querySelector("#textarea").value;

        _haxStore.HAXStore.activeHaxBody.importContent(htmlBody);

        _haxStore.HAXStore.haxTray.trayDetail = "";
      }
      /**
       * Scrub and then import content as if pasted from Word / GDocs
       */

    }, {
      key: "scrubContent",
      value: function scrubContent(e) {
        // import contents of this text area into the activeHaxBody
        var htmlBody = this.shadowRoot.querySelector("#textarea").value;

        _haxStore.HAXStore.toast("Scrubbed, Content updated");

        _haxStore.HAXStore.activeHaxBody.importContent((0, _utils.stripMSWord)(htmlBody));

        this.close();
      }
      /**
       * update content of the editor area
       */

    }, {
      key: "openSource",
      value: function openSource() {
        var _this4 = this;

        // import at this time so we can delay as long as possible
        // from needing to pull in monaco
        if (!window.customElements.get("code-editor")) {
          new Promise(function (res, rej) {
            return _require.default(["../../code-editor/code-editor.js"], res, rej);
          }).then(function () {
            _this4.updateEditor();

            setTimeout(function () {
              _this4.updateEditor();
            }, 1000);
          });
        } else {
          this.updateEditor();
        }
      }
      /**
       * selectBody
       */

    }, {
      key: "selectBody",
      value: function selectBody(e) {
        var hiddenarea = this.shadowRoot.querySelector("#hiddentextarea");
        hiddenarea.value = this.shadowRoot.querySelector("#textarea").value;
        hiddenarea.removeAttribute("hidden");
        hiddenarea.focus();
        hiddenarea.select();
        document.execCommand("copy");
        hiddenarea.setAttribute("hidden", "hidden");

        _haxStore.HAXStore.toast(this.t.copiedToClipboard); //this.close();

      }
      /**
       * HTML to HAX Elements
       */

    }, {
      key: "htmlToHaxElements",
      value: function () {
        var _htmlToHaxElements = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e) {
          var elements, str, val, hiddenarea;
          return _regeneratorRuntime().wrap(function _callee10$(_context10) {
            while (1) {
              switch (_context10.prev = _context10.next) {
                case 0:
                  _context10.next = 2;
                  return _haxStore.HAXStore.htmlToHaxElements(this.shadowRoot.querySelector("#textarea").value);

                case 2:
                  elements = _context10.sent;
                  str = JSON.stringify(elements, null, 2);
                  val = this.shadowRoot.querySelector("#textarea").value;
                  hiddenarea = this.shadowRoot.querySelector("#hiddentextarea");
                  hiddenarea.removeAttribute("hidden");
                  hiddenarea.value = str;
                  hiddenarea.focus();
                  hiddenarea.select();
                  document.execCommand("copy");
                  hiddenarea.value = val;
                  hiddenarea.setAttribute("hidden", "hidden");

                  _haxStore.HAXStore.toast(this.t.copiedToClipboard);

                  this.close();

                case 15:
                case "end":
                  return _context10.stop();
              }
            }
          }, _callee10, this);
        }));

        function htmlToHaxElements(_x10) {
          return _htmlToHaxElements.apply(this, arguments);
        }

        return htmlToHaxElements;
      }()
    }, {
      key: "close",
      value: function close() {
        _haxStore.HAXStore.haxTray.trayDetail = "";
      }
    }, {
      key: "updateEditor",
      value: function updateEditor() {
        var _this5 = this;

        if (_haxStore.HAXStore.activeHaxBody && this.shadowRoot && this.shadowRoot.querySelector("#textarea")) {
          this.shadowRoot.querySelector("#textarea").editorValue = "";
          setTimeout( /*#__PURE__*/babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
            var htmlCode;
            return _regeneratorRuntime().wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    _context11.t0 = _utils.formatHTML;
                    _context11.next = 3;
                    return _haxStore.HAXStore.activeHaxBody.haxToContent();

                  case 3:
                    _context11.t1 = _context11.sent;
                    htmlCode = (0, _context11.t0)(_context11.t1);
                    _this5.shadowRoot.querySelector("#textarea").editorValue = htmlCode;

                  case 6:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          })), 0);
        }
      }
      /**
       * Output entire thing as a file.
       */

    }, {
      key: "contentToFile",
      value: function () {
        var _contentToFile = babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(full) {
          var body, content;
          return _regeneratorRuntime().wrap(function _callee12$(_context12) {
            while (1) {
              switch (_context12.prev = _context12.next) {
                case 0:
                  _context12.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  body = _context12.sent;
                  content = body; // if you want full HTML headers or not

                  if (full) {
                    content = "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes\"\n            />\n            <title>hax-body demo</title>\n            <script>window.WCGlobalCDNPath=\"https://cdn.webcomponents.psu.edu/cdn/\"; </script> <script src=\"https://cdn.webcomponents.psu.edu/cdn/build.js\"></script> \n            <style>\n              body {\n                padding: 32px;\n              }\n            </style>\n          </head>\n          <body>\n          ".concat(body, "\n          </body>\n        </html>\n      ");
                  }

                  return _context12.abrupt("return", content);

                case 6:
                case "end":
                  return _context12.stop();
              }
            }
          }, _callee12);
        }));

        function contentToFile(_x11) {
          return _contentToFile.apply(this, arguments);
        }

        return contentToFile;
      }()
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(_haxUiStyles.HaxComponentStyles), [(0, _index.css)(_templateObject12_a0d02710809211edaa2833647dc78c6c || (_templateObject12_a0d02710809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host,\n        #wrapper {\n          margin: 0;\n          padding: 0;\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          position: relative;\n          flex: 1 1 100%;\n        }\n        #spacer {\n          flex: 1 1 100%;\n          z-index: -1;\n        }\n        #textarea {\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          margin: 0;\n          padding: 0;\n        }\n        hax-toolbar {\n          flex: 0 0 auto;\n          background-color: var(--hax-ui-background-color);\n        }\n        hax-toolbar::part(buttons) {\n          display: flex;\n          justify-content: center;\n          align-items: stretch;\n          margin: 0 auto;\n        }\n        hax-tray-button {\n          flex: 1 1 auto;\n        }\n        simple-toolbar-menu {\n          --simple-toolbar-button-border-color: var(--hax-ui-border-color);\n        }\n        /** This is mobile layout for controls */\n        @media screen and (max-width: 800px) {\n          hax-tray-button {\n            flex: 0 1 auto;\n          }\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-view-source";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(HaxViewSource), "properties", this)), {}, {
          /**
           * Global preferences for HAX overall
           */
          globalPreferences: {
            type: Object
          },
          theme: {
            type: String
          }
        });
      }
    }]);
    return HaxViewSource;
  }((0, _I18NMixin2.I18NMixin)((0, _dlBehavior.MtzFileDownloadBehaviors)(_index.LitElement)));

  _exports.HaxViewSource = HaxViewSource;
  customElements.define(HaxViewSource.tag, HaxViewSource);
});