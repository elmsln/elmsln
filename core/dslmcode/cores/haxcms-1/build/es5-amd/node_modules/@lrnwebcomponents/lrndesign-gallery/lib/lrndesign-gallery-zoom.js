define(["exports", "../../../lit/index.js", "../../simple-tooltip/simple-tooltip.js", "../../img-view-modal/img-view-modal.js", "./lrndesign-gallery-details.js"], function (_exports, _index, _simpleTooltip, _imgViewModal, _lrndesignGalleryDetails) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignGalleryZoom = void 0;

  var _templateObject_a13fffe0809211edaa2833647dc78c6c, _templateObject2_a13fffe0809211edaa2833647dc78c6c, _templateObject3_a13fffe0809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrndesign-gallery-zoom`
   * An element that renders the zoom feature for the gallery.
   * 
   * @element lrndesign-gallery-zoom
   *
   * @microcopy - language worth noting:```
  <lrndesign-gallery-zoom 
    details="Text details about the image." //optional text about the image
    heading="Image title"                  //required, image dialog title
    item-id="0"                             //required, index of the item to view
    src="${this.item.large}"                   //required, full-sized image
    tooltip="${this.item.tooltip}"             //required, tooltip text
    zoom-alt="${this.item.alt}"                //required, alt text for the image
    tooltip="ZOOM"                       
  </lrndesign-gallery-zoom>```
   *
   * CSS Variables: ```
  --lrndesign-gallery-dialog-color                        //text color of dialog
  --lrndesign-gallery-dialog-background-color             //background-color of dialog
  --lrndesign-gallery-dialog-titlebar-color               //text color of dialog titlebar
  --lrndesign-gallery-dialog-titlebar-background-color    //background-color of dialog titlebar
  --lrndesign-gallery-dialog-header-color                 //text color of dialog header
  --lrndesign-gallery-dialog-header-background-color      //background-color of dialog header```
   * 
   */
  var LrndesignGalleryZoom = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(LrndesignGalleryZoom, _LitElement);

    var _super = _createSuper(LrndesignGalleryZoom);

    /**
     * life cycle, element is ready
     */
    function LrndesignGalleryZoom() {
      var _this;

      babelHelpers.classCallCheck(this, LrndesignGalleryZoom);
      _this = _super.call(this);
      _this.heading = "Image Zoom";
      _this.details = "";
      _this.src = "";
      _this.tooltip = "Zoom In";
      _this.zoomAlt = "Full-sized Image";
      return _this;
    }

    babelHelpers.createClass(LrndesignGalleryZoom, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a13fffe0809211edaa2833647dc78c6c || (_templateObject_a13fffe0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <img-view-modal\n        .figures=\"", "\"\n        .toolbars=\"", "\"\n        title=\"", "\"\n        max-zoom-pixel-ratio=\"1.5\"\n        min-zoom-image-ratio=\"0.5\"\n        zoom-per-click=\"1.2\"\n        zoom-per-scroll=\"0.6\"\n      >\n        <button id=\"zoombtn\" aria-label=\"", "\">\n          <slot></slot>\n        </button>\n      </img-view-modal>\n      <simple-tooltip for=\"zoombtn\" position=\"right\" controls=\"zoomtpl\"\n        >", "</simple-tooltip\n      >\n    "])), this.figures, this.toolbars, this.heading || "", this.tooltip, this.tooltip);
      } // properties available to the custom element for data binding

    }, {
      key: "figures",
      get: function get() {
        return [{
          src: this.src,
          info: (0, _index.html)(_templateObject2_a13fffe0809211edaa2833647dc78c6c || (_templateObject2_a13fffe0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          <lrndesign-gallery-details\n            id=\"details\"\n            ?hidden=\"", "\"\n            details=\"", "\"\n          >\n          </lrndesign-gallery-details>\n        "])), !this.details || !this.zoomAlt, this.details || this.zoomAlt)
        }];
      }
    }, {
      key: "toolbars",
      get: function get() {
        return {
          bottom: {
            id: "bottom",
            type: "toolbar-group",
            contents: ["homebutton", "zoomgroup", "pangroup", "fullscreenbutton", "kbdbutton", "infobutton"]
          }
        };
      }
    }, {
      key: "button",
      get: function get() {
        return this.shadowRoot && this.shadowRoot.querySelector("#zoombtn") ? this.shadowRoot.querySelector("#zoombtn") : false;
      }
    }, {
      key: "modal",
      get: function get() {
        return this.shadowRoot && this.shadowRoot.querySelector("#zoomtpl") ? this.shadowRoot.querySelector("#zoomtpl") : false;
      }
      /**
       * opens the modal
       */

    }, {
      key: "zoom",
      value: function zoom() {
        if (this.button && this.modal) {
          this.modal.openModal(this.button);
          var event = new CustomEvent("gallery-zoom", {
            detail: this
          });
          this.button.dispatchEvent(event);
        }
      }
    }], [{
      key: "tag",
      get:
      /**
       * Store the tag name to make it easier to obtain directly.
       */
      function get() {
        return "lrndesign-gallery-zoom";
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject3_a13fffe0809211edaa2833647dc78c6c || (_templateObject3_a13fffe0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          background-color: none;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #zoombtn {\n          display: block;\n          width: 100%;\n          padding: 0;\n          margin: 0;\n          border-width: 0;\n          background-color: transparent;\n        }\n        simple-modal-template[modal-id=\"zoomdialog\"] {\n          --img-view-modal-backgroundColor: var(\n            --lrndesign-gallery-dialog-background-color\n          );\n          --img-view-modal-color: var(--lrndesign-gallery-dialog-color);\n          --img-view-modal-borderColor: var(\n            --lrndesign-gallery-dialog-border-color\n          );\n          --img-view-modal-toggled-backgroundColor: var(\n            --lrndesign-gallery-dialog-toggled-background-color\n          );\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * heading for zoom modal
           */
          heading: {
            type: String
          },

          /**
           * details for zoom modal
           */
          details: {
            type: String
          },

          /**
           * Image source.
           */
          src: {
            type: String,
            reflect: true,
            attribute: "src"
          },

          /**
           * tooltip for the zoom button
           */
          tooltip: {
            type: String
          },

          /**
           * gallery item's alt text
           */
          zoomAlt: {
            type: String,
            attribute: "zoom-alt"
          }
        };
      }
    }]);
    return LrndesignGalleryZoom;
  }(_index.LitElement);

  _exports.LrndesignGalleryZoom = LrndesignGalleryZoom;
  customElements.define(LrndesignGalleryZoom.tag, LrndesignGalleryZoom);
});