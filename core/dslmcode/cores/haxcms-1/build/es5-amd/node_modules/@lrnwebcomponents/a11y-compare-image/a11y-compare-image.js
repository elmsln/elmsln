define(["exports", "require", "../../lit/index.js", "../simple-colors/simple-colors.js"], function (_exports, _require, _index, _simpleColors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.a11yCompareImage = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_628690c0809211edaa2833647dc78c6c, _templateObject2_628690c0809211edaa2833647dc78c6c, _templateObject3_628690c0809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `a11y-compare-image`
   * Layers images over each other with a slider interface to compare them
   * @demo demo/index.html
   * @element a11y-compare-image
   */
  var a11yCompareImage = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(a11yCompareImage, _SimpleColors);

    var _super = _createSuper(a11yCompareImage);

    function a11yCompareImage() {
      var _this;

      babelHelpers.classCallCheck(this, a11yCompareImage);
      _this = _super.call(this);
      _this.opacity = false;
      _this.position = 50;
      _this.accentColor = "blue";
      _this.__markers = [];
      _this.label = "Compare images";
      new Promise(function (res, rej) {
        return _require.default(["../simple-range-input/simple-range-input.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(a11yCompareImage, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_628690c0809211edaa2833647dc78c6c || (_templateObject_628690c0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <figure>\n      <figcaption>\n        <slot name=\"heading\"></slot>\n        <div id=\"description\"><slot name=\"description\"></slot></div>\n      </figcaption>\n      <div id=\"container\" style=\"background-image: url(", ")\">\n        <div>\n          <div id=\"placeholder\">\n            <slot id=\"bottom\" name=\"bottom\"></slot>\n          </div>\n          <slot name=\"top\" hidden></slot>\n          <div id=\"layer\" style=\"background-image: url(", ")\"></div>\n          <slot></slot>\n        </div>\n      </div>\n      <div id=\"input\">\n        ", "\n        <simple-range-input\n          accent-color=\"", "\"\n          ?dark=\"", "\"\n          id=\"slider\"\n          label=\"", "\"\n          @immediate-value-changed=\"", "\"\n          value=\"", "\"\n          immediate-value=\"", "\"\n        ></simple-range-input>\n      </div>\n    </figure>"])), this.__lower, this.__upper, this.__markers.map(function (marker) {
          return (0, _index.html)(_templateObject2_628690c0809211edaa2833647dc78c6c || (_templateObject2_628690c0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <div\n                class=\"marker\"\n                .style=\"left: ", "%;\"\n                ?hidden=\"", "\"\n              ></div>\n            "])), marker, marker == 100);
        }), this.accentColor, this.dark, this.label, this._valueChanged, this.position, this.position);
      }
    }, {
      key: "_valueChanged",
      value: function _valueChanged(e) {
        this.position = e.detail.value;
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage.prototype), "firstUpdated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage.prototype), "firstUpdated", this).call(this, changedProperties);

        this._slide();
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "position" && _this2.position !== oldValue) {
            _this2._slide();
          }
        });
      }
      /**
       * updates the slider
       */

    }, {
      key: "_slide",
      value: function _slide() {
        var container = this.shadowRoot.querySelector("#container");
        var layers = this.querySelectorAll("[slot=top],[slot=bottom]"); // This is the total number of transitions between layers

        var total = layers.length - 1; //This is percent of the slider for each section

        var section = 100 / total; // Index of the upper image

        var active = Math.floor(this.position / section) || 0; // This is the layer number that is current on top.

        this.activeLayer = active + 1; // This is the slider percent when upper image is at 0.

        var lastSection = section * active; // How far we are into the current section.

        var relativePosition = this.position - lastSection;
        /* Percentage into the current section
        if (this.position === 100 && relativePosition === 0) {
        } else {
          this.position = (relativePosition * 100) / section || 0;
        }*/
        // Set background images

        this.__upper = layers[active + 1] ? layers[active + 1].src : layers[active] ? layers[active].src : "";
        this.__lower = layers[active] ? layers[active].src : ""; // Adding Fake markers behind the slider.

        if (total - 1 != this.__markers.length) {
          this._updateMarkers(total);
        }

        if (container && this.opacity === false) {
          container.style.setProperty("--a11y-compare-image-width", this.position + "%");
          container.style.setProperty("--a11y-compare-image-opacity", 1);
        } else if (container) {
          container.style.setProperty("--a11y-compare-image-width", "100%");
          container.style.setProperty("--a11y-compare-image-opacity", this.position / 100);
        }
      }
    }, {
      key: "_updateMarkers",
      value: function _updateMarkers(total) {
        this.__markers = [];

        if (total != 0) {
          var step = 100 / total;

          for (var i = step; i <= 100; i += step) {
            this.__markers.push(i);
          }
        }
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage), "styles", this)), [(0, _index.css)(_templateObject3_628690c0809211edaa2833647dc78c6c || (_templateObject3_628690c0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n          margin: 15px 0;\n          --simple-range-input-track-height: 4pxsnow;\n          --simple-range-input-pin-height: 20px;\n          --simple-range-offet: calc(\n            var(--simple-range-input-pin-height, 20px) / 2\n          );\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        figure {\n          margin: 0;\n        }\n        #container,\n        #container > div {\n          margin: 0;\n          padding: 0;\n        }\n        #container,\n        #input {\n          position: relative;\n        }\n        /* Added background-size: cover to adjust the bottom layer to match top in first example */\n        #container {\n          background-size: cover;\n          background-repeat: no-repeat;\n        }\n\n        #layer {\n          top: 0;\n          left: 0;\n          position: absolute;\n          height: 100%;\n          opacity: var(--a11y-compare-image-opacity, 1);\n          width: var(--a11y-compare-image-width, 50%);\n          background-size: cover;\n          background-position-x: 0%;\n          background-repeat: no-repeat;\n        }\n        #placeholder {\n          opacity: 0;\n        }\n\n        #bottom {\n          width: 100%;\n        }\n        #slider {\n          top: calc(0px - var(--simple-range-offet, 10px));\n          left: 0;\n          position: absolute;\n          width: 100%;\n          margin: 0;\n        }\n        .marker {\n          z-index: 1;\n          top: calc(0px - var(--simple-range-input-pin-height, 20px) / 2);\n          position: absolute;\n          width: 1px;\n          outline: 1px solid\n            var(\n              --simple-range-input-bg,\n              var(--simple-colors-default-theme-accent-2, grey)\n            );\n          background-color: var(\n            --simple-range-input-color,\n            var(--simple-colors-default-theme-accent-8, grey)\n          );\n          padding-top: var(--simple-range-input-pin-height, 20px);\n        }\n        #placeholder ::slotted([slot=\"bottom\"]) {\n          max-width: 100%;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "a11y-compare-image";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage), "properties", this)), {}, {
          activeLayer: {
            type: Number,
            attribute: "active-layer",
            reflect: true
          },

          /**
           * mode for the slider: wipe
           */
          opacity: {
            type: Boolean
          },
          label: {
            type: String
          },
          position: {
            type: Number,
            reflect: true
          },
          __lower: {
            type: String
          },
          __upper: {
            type: String
          },
          __markers: {
            type: Array
          }
        });
      }
    }]);
    return a11yCompareImage;
  }(_simpleColors.SimpleColors);

  _exports.a11yCompareImage = a11yCompareImage;
  customElements.define(a11yCompareImage.tag, a11yCompareImage);
});