define(["exports", "meta", "require", "../../lit/index.js", "../schema-behaviors/schema-behaviors.js", "../intersection-element/lib/IntersectionObserverMixin.js", "../i18n-manager/lib/I18NMixin.js", "../simple-colors/simple-colors.js"], function (_exports, meta, _require, _index, _schemaBehaviors, _IntersectionObserverMixin, _I18NMixin2, _simpleColors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ImageCompareSlider = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_69c656e0809211edaa2833647dc78c6c, _templateObject2_69c656e0809211edaa2833647dc78c6c, _templateObject3_69c656e0809211edaa2833647dc78c6c, _templateObject4_69c656e0809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `image-compare-slider`
   * hax-wired a11y-compare-image
   * @demo demo/index.html
   * @element image-compare-slider
   */
  var ImageCompareSlider = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(ImageCompareSlider, _I18NMixin);

    var _super = _createSuper(ImageCompareSlider);

    function ImageCompareSlider() {
      var _this;

      babelHelpers.classCallCheck(this, ImageCompareSlider);
      _this = _super.call(this);
      _this.opacity = false;
      _this.position = 50;
      _this.accentColor = "blue";
      _this.t = {
        slideToCompareImages: "Slide to compare images"
      };

      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        basePath: meta.url,
        locales: ["es"]
      });

      return _this;
    }

    babelHelpers.createClass(ImageCompareSlider, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_69c656e0809211edaa2833647dc78c6c || (_templateObject_69c656e0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["", ""])), this.elementVisible ? (0, _index.html)(_templateObject2_69c656e0809211edaa2833647dc78c6c || (_templateObject2_69c656e0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          <a11y-compare-image\n            label=\"", "\"\n            accent-color=\"", "\"\n            ?dark=\"", "\"\n            ?opacity=\"", "\"\n            position=\"", "\"\n          >\n            <div slot=\"heading\">\n              ", "\n              <slot name=\"heading\"></slot>\n            </div>\n            <div slot=\"description\"><slot name=\"description\"></slot></div>\n            <img\n              slot=\"bottom\"\n              src=\"", "\"\n              alt=\"", "\"\n              aria-describedby=\"", "\"\n            />\n            <img\n              slot=\"top\"\n              src=\"", "\"\n              alt=\"", "\"\n              aria-describedby=\"", "\"\n            />\n          </a11y-compare-image>\n        "])), this.t.slideToCompareImages, this.accentColor, this.dark, this.opacity, this.position, this.title ? (0, _index.html)(_templateObject3_69c656e0809211edaa2833647dc78c6c || (_templateObject3_69c656e0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <h2>", "</h2> "])), this.title) : "", this.bottomSrc, this.bottomAlt, this.bottomDescriptionId || "description", this.topSrc, this.topAlt, this.topDescriptionId || "description") : "");
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(ImageCompareSlider.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(ImageCompareSlider.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "elementVisible" && _this2[propName]) {
            new Promise(function (res, rej) {
              return _require.default(["../a11y-compare-image/a11y-compare-image.js"], res, rej);
            });
          }
        });
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject4_69c656e0809211edaa2833647dc78c6c || (_templateObject4_69c656e0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "image-compare-slider";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(ImageCompareSlider), "properties", this)), {}, {
          /**
           * src for top image
           */
          bottomAlt: {
            type: String,
            attribute: "bottom-alt"
          },

          /**
           * aria-describedby for top image
           */
          bottomDescriptionId: {
            type: String,
            attribute: "bottom-description-id"
          },

          /**
           * src for top image
           */
          bottomSrc: {
            type: String,
            attribute: "bottom-src"
          },

          /**
           * mode for the slider: wipe
           */
          opacity: {
            type: Boolean
          },

          /**
           * mode for the slider: wipe
           */
          position: {
            type: Number
          },

          /**
           * @deprecated Use `slot=heading`
           */
          title: {
            type: String
          },

          /**
           * src for top image
           */
          topAlt: {
            type: String,
            attribute: "top-alt"
          },

          /**
           * aria-describedby for top image
           */
          topDescriptionId: {
            type: String,
            attribute: "top-description-id"
          },

          /**
           * src for top image
           */
          topSrc: {
            type: String,
            attribute: "top-src"
          }
        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./lib/image-compare-slider.haxProperties.json", meta.url).href;
      }
    }]);
    return ImageCompareSlider;
  }((0, _I18NMixin2.I18NMixin)((0, _IntersectionObserverMixin.IntersectionObserverMixin)((0, _schemaBehaviors.SchemaBehaviors)(_simpleColors.SimpleColors))));

  _exports.ImageCompareSlider = ImageCompareSlider;
  customElements.define(ImageCompareSlider.tag, ImageCompareSlider);
});