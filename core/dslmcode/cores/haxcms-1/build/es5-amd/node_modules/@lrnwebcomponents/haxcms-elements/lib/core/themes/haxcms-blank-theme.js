define(["exports", "../../../../../lit/index.js", "../../../../clean-two/clean-two.js"], function (_exports, _index, _cleanTwo) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSBlankTheme = void 0;

  var _templateObject_fa0020d08e0011ed99ce491205e67b1d, _templateObject2_fa0020d08e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  // a blank theme that extends the conventions of CleanTwo bootstrap but can output a very clean
  var HAXCMSBlankTheme = /*#__PURE__*/function (_CleanTwo) {
    babelHelpers.inherits(HAXCMSBlankTheme, _CleanTwo);

    var _super = _createSuper(HAXCMSBlankTheme);

    function HAXCMSBlankTheme() {
      babelHelpers.classCallCheck(this, HAXCMSBlankTheme);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(HAXCMSBlankTheme, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_fa0020d08e0011ed99ce491205e67b1d || (_templateObject_fa0020d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <main>\n        <article>\n          <section>\n            <slot></slot>\n          </section>\n        </article>\n      </main>\n    "])));
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBlankTheme.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBlankTheme.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        document.body.style.setProperty("--haxcms-color", "white"); // in-case coming from a theme that undoes this

        document.body.style.overflow = "auto";
      }
    }], [{
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_fa0020d08e0011ed99ce491205e67b1d || (_templateObject2_fa0020d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: block;\n        margin: 20px;\n      }\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "haxcms-blank-theme";
      }
    }]);
    return HAXCMSBlankTheme;
  }(_cleanTwo.CleanTwo);

  _exports.HAXCMSBlankTheme = HAXCMSBlankTheme;
  customElements.define(HAXCMSBlankTheme.tag, HAXCMSBlankTheme);
});