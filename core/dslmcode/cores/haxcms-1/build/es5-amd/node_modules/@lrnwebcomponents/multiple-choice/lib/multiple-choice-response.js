define(["exports", "meta", "../../../lit/index.js", "../../simple-fields/lib/simple-fields-field.js"], function (_exports, meta, _index, _simpleFieldsField) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MultipleChoiceResponse = void 0;
  meta = _interopRequireWildcard(meta);

  var _templateObject_a2946c50809211edaa2833647dc78c6c, _templateObject2_a2946c50809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `multiple-choice-response`
   * `Ask the user a question from a set of possible answers.`
   * @demo demo/index.html
   * @element multiple-choice-response
   */
  var MultipleChoiceResponse = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(MultipleChoiceResponse, _LitElement);

    var _super = _createSuper(MultipleChoiceResponse);

    function MultipleChoiceResponse() {
      var _this;

      babelHelpers.classCallCheck(this, MultipleChoiceResponse);
      _this = _super.call(this);
      _this.correct = false;
      _this.type = "checkbox";
      if (!_this.__fieldLabel) fetch(MultipleChoiceResponse.haxProperties).then(function (response) {
        return response.json();
      }).then(function (data) {
        var settings = data.settings || {},
            config = settings.configure || [],
            filter = config.filter(function (prop) {
          return prop.property === "correct";
        }),
            correct = filter[0] || {};
        _this.__fieldLabel = correct.description || correct.title;
      });
      return _this;
    }
    /**
     * handles clicking for indicating response as correct
     *
     * @param {event} e
     * @memberof MultipleChoiceResponse
     */


    babelHelpers.createClass(MultipleChoiceResponse, [{
      key: "_handleClick",
      value: function _handleClick(e) {
        this.correct = e.detail.value;
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a2946c50809211edaa2833647dc78c6c || (_templateObject_a2946c50809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <slot id=\"slot\" property=\"oer:answer\"></slot>\n      <simple-fields-field\n        label=\"", "\"\n        aria-describedby=\"slot\"\n        type=\"", "\"\n        @value-changed=\"", "\"\n        .value=\"", "\"\n      ></simple-fields-field>"])), this.__fieldLabel || "Is this response correct?", this.type, this._handleClick, !!this.correct);
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject2_a2946c50809211edaa2833647dc78c6c || (_templateObject2_a2946c50809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n          opacity: 0.6;\n        }\n        :host(:hover),\n        :host(:focus-within) {\n          opacity: 1;\n          outline: 1px solid;\n        }\n        #slot {\n          flex: 0 0 auto;\n        }\n        simple-fields-field {\n          flex: 0 0 auto;\n          margin: 0;\n        }\n        ::slotted(*) {\n          font-size: var(--simple-fields-font-size, 16px);\n          text-align: var(--simple-fields-text-align);\n          font-family: var(--simple-fields-font-family, sans-serif);\n          line-height: var(--simple-fields-line-height, 22px);\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "multiple-choice-response";
      }
      /**
       * haxProperties integration via file reference
       */

    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./".concat(this.tag, ".haxProperties.json"), meta.url).href;
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(MultipleChoiceResponse), "properties", this)), {}, {
          /**
           * whether the response is correct
           */
          correct: {
            type: Boolean
          },

          /**
           * whether the response is correct
           */
          disabled: {
            type: Boolean
          },

          /**
           * text of response
           */
          text: {
            type: String
          },

          /**
           * unique identifier for response
           */
          answerId: {
            type: String,
            attribute: "answer-id",
            reflect: true
          },
          __fieldLabel: {
            type: String
          }
        });
      }
    }]);
    return MultipleChoiceResponse;
  }(_index.LitElement);

  _exports.MultipleChoiceResponse = MultipleChoiceResponse;
  customElements.define(MultipleChoiceResponse.tag, MultipleChoiceResponse);
});