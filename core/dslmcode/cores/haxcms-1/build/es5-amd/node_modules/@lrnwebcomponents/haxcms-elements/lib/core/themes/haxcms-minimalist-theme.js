define(["exports", "../../../../../@polymer/polymer/polymer-element.js", "../HAXCMSPolymerElementTheme.js", "../../ui-components/templates/minimalist-template.js", "../../../../simple-colors/lib/simple-colors-polymer.js"], function (_exports, _polymerElement, _HAXCMSPolymerElementTheme, _minimalistTemplate, _simpleColorsPolymer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSMinimalistTheme = void 0;

  var _templateObject_fa01ce808e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `haxcms-minimalist-theme`
   * `Minimalist design, just a whole page really.
   *
  
   * @polymer
   * @demo demo/index.html
   */
  var HAXCMSMinimalistTheme = /*#__PURE__*/function (_MinimalistTemplate) {
    babelHelpers.inherits(HAXCMSMinimalistTheme, _MinimalistTemplate);

    var _super = _createSuper(HAXCMSMinimalistTheme);

    function HAXCMSMinimalistTheme() {
      babelHelpers.classCallCheck(this, HAXCMSMinimalistTheme);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(HAXCMSMinimalistTheme, null, [{
      key: "template",
      get: // render function
      function get() {
        var template = babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSMinimalistTheme), "template", this);
        return (0, _polymerElement.html)(_templateObject_fa01ce808e0011ed99ce491205e67b1d || (_templateObject_fa01ce808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: block;\n          font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial,\n            sans-serif;\n          background-color: white;\n          --haxcms-basic-theme-accent-color: var(--haxcms-color, yellow);\n        }\n        header.masthead {\n          margin-bottom: 50px;\n          background: no-repeat center center;\n          background-color: #868e96;\n          background-attachment: scroll;\n          position: relative;\n          -webkit-background-size: cover;\n          -moz-background-size: cover;\n          -o-background-size: cover;\n          background-size: cover;\n        }\n\n        header.masthead .overlay {\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 100%;\n          width: 100%;\n          background-color: #212529;\n          opacity: 0.6;\n        }\n\n        header.masthead .page-heading,\n        header.masthead .post-heading,\n        header.masthead .site-heading {\n          padding: 200px 0 150px;\n          color: #fff;\n        }\n\n        @media only screen and (min-width: 768px) {\n          header.masthead .page-heading,\n          header.masthead .post-heading,\n          header.masthead .site-heading {\n            padding: 200px 0;\n          }\n        }\n\n        header.masthead .page-heading,\n        header.masthead .site-heading {\n          text-align: center;\n        }\n\n        header.masthead .page-heading h1,\n        header.masthead .site-heading h1 {\n          font-size: 50px;\n          margin-top: 0;\n        }\n\n        header.masthead .page-heading .subheading,\n        header.masthead .site-heading .subheading {\n          font-size: 24px;\n          font-weight: 300;\n          line-height: 1.1;\n          display: block;\n          margin: 10px 0 0;\n          font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial,\n            sans-serif;\n        }\n\n        @media only screen and (min-width: 768px) {\n          header.masthead .page-heading h1,\n          header.masthead .site-heading h1 {\n            font-size: 80px;\n          }\n        }\n\n        header.masthead .post-heading h1 {\n          font-size: 35px;\n        }\n\n        header.masthead .post-heading .meta,\n        header.masthead .post-heading .subheading {\n          line-height: 1.1;\n          display: block;\n        }\n\n        header.masthead .post-heading .subheading {\n          font-size: 24px;\n          font-weight: 600;\n          margin: 10px 0 30px;\n          font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial,\n            sans-serif;\n        }\n\n        header.masthead .post-heading .meta {\n          font-size: 20px;\n          font-weight: 300;\n          font-style: italic;\n          font-family: Lora, \"Times New Roman\", serif;\n        }\n\n        header.masthead .post-heading .meta a {\n          color: #fff;\n        }\n\n        @media only screen and (min-width: 768px) {\n          header.masthead .post-heading h1 {\n            font-size: 55px;\n          }\n\n          header.masthead .post-heading .subheading {\n            font-size: 30px;\n          }\n        }\n        /**\n         * Hide the slotted content during edit mode. This must be here to work.\n         */\n        :host([edit-mode]) #slot {\n          display: none;\n        }\n        :host #slot ::slotted(p) {\n          line-height: 1.5;\n          margin: 30px 0;\n        }\n        @media (min-width: 1200px) {\n          .container {\n            max-width: 1140px;\n          }\n        }\n        @media (min-width: 992px) {\n          .container {\n            max-width: 960px;\n          }\n        }\n        @media (min-width: 768px) {\n          .container {\n            max-width: 720px;\n          }\n        }\n        @media (min-width: 576px) {\n          .container {\n            max-width: 540px;\n          }\n        }\n        .container {\n          width: 100%;\n          min-height: 80vh;\n          padding: 0 16px;\n          margin: 48px auto;\n        }\n\n        site-menu-button {\n          --site-menu-button-button-hover-background-color: #dee2e6;\n          color: black;\n          display: inline-flex;\n          border: 1px solid #dee2e6;\n          padding: 0;\n          font-size: 1.25rem;\n          margin: 0;\n          height: 50px;\n          width: 50px;\n          min-width: unset;\n          line-height: 1.5;\n        }\n        site-top-menu[sticky] {\n          --site-top-menu-wrapper: {\n            font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            border-bottom: 1px solid #fff;\n            max-width: 1140px;\n            font-weight: 800;\n          }\n          height: 50px;\n          line-height: 50px;\n          color: black;\n          font-size: 20px;\n          --site-top-menu-bg: rgba(255, 255, 255, 0.9);\n        }\n        hr {\n          margin-top: 1rem;\n          margin-bottom: 1rem;\n          border: 0;\n          border-top: 1px solid rgba(0, 0, 0, 0.1);\n          box-sizing: content-box;\n          height: 0;\n          overflow: visible;\n        }\n        site-top-menu:not([sticky]) {\n          --site-top-menu-wrapper: {\n            font-family: \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            justify-content: center;\n          }\n          --site-top-menu-tooltip: {\n            --simple-tooltip-background: #000000;\n            --simple-tooltip-opacity: 1;\n            --simple-tooltip-text-color: #ffffff;\n            --simple-tooltip-delay-in: 0;\n            --simple-tooltip-border-radius: 0;\n          }\n          color: #007bff;\n          --site-top-menu-bg: white;\n          --site-top-menu-button: {\n            border: 1px solid #dee2e6;\n            padding: 0;\n            margin: 0;\n            height: 50px;\n            width: 50px;\n            min-width: unset;\n            border-radius: 0;\n            font-size: 1.25rem;\n            line-height: 1.5;\n          }\n          --site-top-menu-button-hover: {\n            background-color: #dee2e6;\n          }\n        }\n        site-print-button simple-tooltip {\n          --simple-tooltip-background: #000000;\n          --simple-tooltip-opacity: 1;\n          --simple-tooltip-text-color: #ffffff;\n          --simple-tooltip-delay-in: 0;\n          --simple-tooltip-border-radius: 0;\n        }\n\n        scroll-button {\n          position: fixed;\n          right: 0;\n          bottom: 50px;\n          z-index: 10000;\n        }\n        .spacing {\n          height: 50px;\n        }\n      </style>\n      ", "\n    "])), template);
      }
    }]);
    return HAXCMSMinimalistTheme;
  }((0, _minimalistTemplate.MinimalistTemplate)(_HAXCMSPolymerElementTheme.HAXCMSPolymerElementTheme));

  _exports.HAXCMSMinimalistTheme = HAXCMSMinimalistTheme;
  customElements.define("haxcms-minimalist-theme", HAXCMSMinimalistTheme);
});