define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@vaadin/vaadin-split-layout/vaadin-split-layout.js", "./lrnapp-studio-submission-media-editoverlay.js", "./lrnapp-studio-submission-edit-images.js", "./lrnapp-studio-submission-edit-files.js", "./lrnapp-studio-submission-edit-video.js", "./lrnapp-studio-submission-edit-links.js", "./lrnapp-studio-submission-display.js", "./lrnapp-studio-submission-edit-textarea.js", "./lrnapp-studio-block.js", "./lrnapp-studio-submission-critique-panel.js"], function (_exports, _polymerElement, _domIf, _vaadinSplitLayout, _lrnappStudioSubmissionMediaEditoverlay, _lrnappStudioSubmissionEditImages, _lrnappStudioSubmissionEditFiles, _lrnappStudioSubmissionEditVideo, _lrnappStudioSubmissionEditLinks, _lrnappStudioSubmissionDisplay, _lrnappStudioSubmissionEditTextarea, _lrnappStudioBlock, _lrnappStudioSubmissionCritiquePanel) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionCritique = void 0;

  var _templateObject_b4035050809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioSubmissionCritique = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionCritique, _PolymerElement);

    var _super = _createSuper(LrnappStudioSubmissionCritique);

    function LrnappStudioSubmissionCritique() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionCritique);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioSubmissionCritique, [{
      key: "_toArray",
      value:
      /**
       * Simple way to convert from object to array.
       */
      function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_b4035050809211edaa2833647dc78c6c || (_templateObject_b4035050809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n\n        .submission-critique {\n          display: flex;\n          justify-content: space-around;\n        }\n\n        .submission-critique-panel {\n          flex: 1 1 auto;\n          width: 100%;\n          flex-wrap: nowrap;\n          margin: 0.3em;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"{{submission}}\">\n        <template is=\"dom-if\" if=\"[[!edit]]\">\n          <div class=\"submission-critique\">\n            <!-- critique panel -->\n            <div class=\"submission-critique-panel\" id=\"crititque-panel\">\n              <lrnapp-studio-submission-display\n                submission=\"[[submission.relationships.relatedSubmission]]\"\n              ></lrnapp-studio-submission-display>\n            </div>\n            <!-- critique panel -->\n            <div class=\"submission-critique-panel\">\n              <lrnapp-studio-submission-critique-panel\n                submission=\"[[submission]]\"\n                edit=\"[[edit]]\"\n              ></lrnapp-studio-submission-critique-panel>\n            </div>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[edit]]\">\n          <vaadin-split-layout class=\"submission-critique\">\n            <!-- critique panel -->\n            <div class=\"submission-critique-panel\" id=\"crititque-panel\">\n              <lrnapp-studio-submission-display\n                submission=\"[[submission.relationships.relatedSubmission]]\"\n              ></lrnapp-studio-submission-display>\n            </div>\n            <!-- critique panel -->\n            <div class=\"submission-critique-panel\">\n              <lrnapp-studio-submission-critique-panel\n                submission=\"{{submission}}\"\n                edit=\"[[edit]]\"\n              ></lrnapp-studio-submission-critique-panel>\n            </div>\n          </vaadin-split-layout>\n        </template>\n      </template>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-critique";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          submission: {
            type: Object,
            notify: true
          },
          edit: {
            type: Boolean,
            value: false,
            reflectToAttribute: true
          }
        };
      }
    }]);
    return LrnappStudioSubmissionCritique;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionCritique = LrnappStudioSubmissionCritique;
  customElements.define(LrnappStudioSubmissionCritique.tag, LrnappStudioSubmissionCritique);
});