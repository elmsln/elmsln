define(["exports", "require", "../../@polymer/polymer/polymer-element.js"], function (_exports, _require, _polymerElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignCourseBanner = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_a90080808e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrndesign-course-banner`
   * @element lrndesign-course-banner
   * @demo demo/index.html
   */
  var LrndesignCourseBanner = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrndesignCourseBanner, _PolymerElement);

    var _super = _createSuper(LrndesignCourseBanner);

    function LrndesignCourseBanner() {
      var _this;

      babelHelpers.classCallCheck(this, LrndesignCourseBanner);
      _this = _super.call(this);
      new Promise(function (res, rej) {
        return _require.default(["../lrndesign-avatar/lrndesign-avatar.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(LrndesignCourseBanner, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_a90080808e0011ed99ce491205e67b1d || (_templateObject_a90080808e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        /**\n       * Dialog\n       */\n        .course-image {\n        }\n        .course-heading {\n          position: relative;\n          background-color: rgba(30, 30, 30, 0.8);\n          text-align: left;\n          margin: -5em 0 0 0;\n          padding: 16px;\n          color: #ffffff;\n          height: 64px;\n        }\n        .course-avatar {\n          float: left;\n          display: inline-flex;\n          padding: 0 16px 0 0;\n        }\n        .course-name {\n          font-size: 16px;\n          line-height: 16px;\n          min-width: 96px;\n        }\n        .course-title {\n          font-size: 16px;\n          line-height: 16px;\n          display: none;\n        }\n        .name-wrapper {\n          display: flow-root;\n          overflow: hidden;\n          text-overflow: clip;\n        }\n        @media screen and (min-width: 420px) {\n          .course-name {\n            font-size: 24px;\n          }\n          .course-title {\n            display: block;\n          }\n        }\n      </style>\n      <img\n        class=\"course-image\"\n        style=\"width:100%; height:200px; background-color: lightgray;\"\n        loading=\"lazy\"\n        src$=\"[[image]]\"\n      />\n      <div class=\"course-heading\">\n        <lrndesign-avatar\n          class=\"course-avatar\"\n          label=\"[[name]]\"\n          jdenticon=\"\"\n          color=\"[[color]]\"\n        >\n        </lrndesign-avatar>\n        <div class=\"name-wrapper\">\n          <div class=\"course-name\">[[name]]</div>\n          <div class=\"course-title\">[[title]]</div>\n        </div>\n      </div>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-course-banner";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Text representation of the color like red or blue
           */
          color: {
            type: String
          },

          /**
           * Banner image
           */
          image: {
            type: String
          },

          /**
           * Name of the course
           */
          name: {
            type: String
          },

          /**
           * Title of the course, longer description.
           */
          title: {
            type: String
          }
        };
      }
    }]);
    return LrndesignCourseBanner;
  }(_polymerElement.PolymerElement);

  _exports.LrndesignCourseBanner = LrndesignCourseBanner;
  customElements.define(LrndesignCourseBanner.tag, LrndesignCourseBanner);
});