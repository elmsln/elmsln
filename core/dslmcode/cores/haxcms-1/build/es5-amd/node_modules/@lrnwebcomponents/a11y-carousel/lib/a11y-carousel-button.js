define(["exports", "../../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.a11yCarouselButton = void 0;

  var _templateObject_ae51bd108e0011ed99ce491205e67b1d, _templateObject2_ae51bd108e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `a11y-carousel-button`
   * button that controls a carousel
   * @demo demo/index.html
   * @element a11y-carousel-button
   */
  var a11yCarouselButton = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(a11yCarouselButton, _LitElement);

    var _super = _createSuper(a11yCarouselButton);

    function a11yCarouselButton() {
      var _this;

      babelHelpers.classCallCheck(this, a11yCarouselButton);
      _this = _super.call(this);
      _this.tabindex = 0;

      _this.setAttribute("role", "button");

      _this.setAttribute("tabindex", 0);

      _this.addEventListener("click", _this._handleClick);

      _this.addEventListener("keydown", _this._handleClick);

      _this.active = false;
      _this.hidden = false;
      _this.disabled = false;
      return _this;
    }

    babelHelpers.createClass(a11yCarouselButton, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_ae51bd108e0011ed99ce491205e67b1d || (_templateObject_ae51bd108e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" <slot></slot> "])));
      } // properties available to the custom element for data binding

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("click", this._handleClick);
        this.removeEventListener("keydown", this._handleClick);
        if (babelHelpers.get(babelHelpers.getPrototypeOf(a11yCarouselButton.prototype), "disconnectedCallback", this)) babelHelpers.get(babelHelpers.getPrototypeOf(a11yCarouselButton.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(a11yCarouselButton.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(a11yCarouselButton.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (["controls", "active"].includes(propName)) _this2.disabled = !_this2.controls || _this2.active;
        });
      }
      /**
       * Fires when clicked.
       *
       * @event select-carousel-item
       */

    }, {
      key: "_handleClick",
      value: function _handleClick(e) {
        if (e.type !== "keydown" || e.key === " " || e.key === "Enter" || e.key === "Spacebar") {
          if (!this.disabled) {
            e.preventDefault();
            this.dispatchEvent(new CustomEvent("select-carousel-item", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: this
            }));
          }
        }
      }
    }], [{
      key: "styles",
      get: //styles function
      function get() {
        return [(0, _index.css)(_templateObject2_ae51bd108e0011ed99ce491205e67b1d || (_templateObject2_ae51bd108e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline;\n          background-color: transparent;\n          border: 1px solid black;\n          padding: 2px 5px;\n          margin: 15px 2px;\n          text-align: center;\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        :host([disabled]) {\n          opacity: 0.5;\n        }\n        @media print {\n          :host {\n            display: none !important;\n          }\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          active: {
            type: Boolean,
            attribute: "active",
            reflect: true
          },
          buttonType: {
            type: String,
            attribute: "button-type",
            reflect: true
          },
          controls: {
            type: String,
            attribute: "controls",
            reflect: true
          },
          disabled: {
            type: Boolean,
            attribute: "disabled",
            reflect: true
          },
          hidden: {
            type: Boolean,
            attribute: "hidden",
            reflect: true
          }
        };
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "a11y-carousel-button";
      }
    }]);
    return a11yCarouselButton;
  }(_index.LitElement);

  _exports.a11yCarouselButton = a11yCarouselButton;
  customElements.define(a11yCarouselButton.tag, a11yCarouselButton);
});