define(["exports", "../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ServiceCard = void 0;

  var _templateObject_9d15f7008e0011ed99ce491205e67b1d, _templateObject2_9d15f7008e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `service-card`
   * `simple showcase of services provided`
   * @demo demo/index.html
   * @element service-card
   */
  var ServiceCard = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(ServiceCard, _LitElement);

    var _super = _createSuper(ServiceCard);

    function ServiceCard() {
      var _this;

      babelHelpers.classCallCheck(this, ServiceCard);
      _this = _super.call(this);
      _this.alt = "";
      return _this;
    }

    babelHelpers.createClass(ServiceCard, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_9d15f7008e0011ed99ce491205e67b1d || (_templateObject_9d15f7008e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"card\">\n        <div class=\"container\">\n          <img\n            loading=\"lazy\"\n            class=\"avatar\"\n            src=\"", "\"\n            alt=\"", "\"\n          />\n          <h3 class=\"title\"><b>", "</b></h3>\n          <p class=\"info\"><slot></slot></p>\n        </div>\n      </div>\n    "])), this.source, this.alt, this.title);
      }
    }], [{
      key: "tag",
      get: function get() {
        return "service-card";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          source: {
            type: String
          },
          title: {
            type: String
          },
          alt: {
            type: String
          }
        };
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: false,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Service card",
            description: "Simple presentation of services or info",
            icon: "icons:credit-card",
            color: "orange",
            groups: ["Card"],
            handles: [],
            meta: {
              author: "McGarvelcuddy",
              owner: "elmsln"
            }
          },
          settings: {
            configure: [{
              property: "source",
              title: "Source",
              inputMethod: "haxupload"
            }, {
              property: "alt",
              title: "Alt Text",
              description: "Alternative text for non-sighted users",
              inputMethod: "alt"
            }, {
              property: "title",
              title: "Title",
              description: "Service title / name",
              inputMethod: "textfield"
            }, {
              slot: "",
              title: "Decription",
              description: "Details of the service",
              inputMethod: "code-editor"
            }],
            advanced: []
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _index.css)(_templateObject2_9d15f7008e0011ed99ce491205e67b1d || (_templateObject2_9d15f7008e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: inline-flex;\n        margin: 16px;\n      }\n      .card {\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n        transition: 0.3s all ease-in-out;\n        width: var(--service-card-card-width, 300px);\n      }\n      .card:hover {\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n      }\n      .container {\n        padding: 2px 2px 2px 2px;\n      }\n      .avatar {\n        border-radius: 50%;\n        width: calc(var(--service-card-card-width, 300px) - 10px);\n        padding: 5px;\n      }\n      .title {\n        padding: 4px 4px 4px 4px;\n        text-align: center;\n        font-family: \"Courier New\", courier, sans-serif;\n      }\n      .info {\n        padding: 4px 4px 4px 4px;\n        height: 125px;\n        overflow-y: auto;\n      }\n    "])));
      }
    }]);
    return ServiceCard;
  }(_index.LitElement);

  _exports.ServiceCard = ServiceCard;
  customElements.define(ServiceCard.tag, ServiceCard);
});