define(["exports", "require", "../../../../../lit/index.js", "../haxcms-site-store.js"], function (_exports, _require, _index, _haxcmsSiteStore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSOperationButtons = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_c2e80700809211edaa2833647dc78c6c, _templateObject2_c2e80700809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HAXCMSOperationButtons = function HAXCMSOperationButtons(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);

        if (!_this.t) {
          _this.t = {};
        }

        if (_this.t) {
          _this.t = _objectSpread(_objectSpread({}, _this.t), {}, {
            edit: "Edit",
            save: "Save",
            cancel: "Cancel",
            editStack: "Edit stack",
            import: "Import",
            archive: "Archive"
          });
        }

        return _this;
      }

      babelHelpers.createClass(_class, [{
        key: "HAXCMSRenderOperationButtons",
        value: // this should be called in the template of the theme using it
        // and is intended to be used just above the content container
        // though not required for usage
        function HAXCMSRenderOperationButtons() {
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/simple-icon.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/lib/simple-icons.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/lib/simple-icon-button-lite.js"], res, rej);
          });
          return (0, _index.html)(_templateObject_c2e80700809211edaa2833647dc78c6c || (_templateObject_c2e80700809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        <div class=\"operation-buttons-wrapper\">\n          <simple-icon-button-lite\n            class=\"btn ", "\"\n            icon=\"lrn:write\"\n            @click=\"", "\"\n            >", "</simple-icon-button-lite\n          >\n          <simple-icon-button-lite\n            class=\"btn\"\n            icon=\"lrn:content\"\n            @click=\"", "\"\n            >", "</simple-icon-button-lite\n          >\n          <simple-icon-button-lite class=\"btn\" icon=\"icons:archive\"\n            >", "</simple-icon-button-lite\n          >\n          <simple-icon-button-lite class=\"btn\" icon=\"icons:file-upload\"\n            >", "</simple-icon-button-lite\n          >\n        </div>\n      "])), this.editMode ? "edit-mode-active" : "", this._editButtonTap, !this.editMode ? this.t.edit : this.t.save, this._editButtonTap, this.t.editStack, this.t.archive, this.t.import);
        }
      }, {
        key: "_editButtonTap",
        value: function _editButtonTap(e) {
          this.editMode = !this.editMode; // save button shifted to edit

          if (!this.editMode) {
            this.dispatchEvent(new CustomEvent("haxcms-save-node", {
              bubbles: true,
              composed: true,
              cancelable: false,
              detail: _haxcmsSiteStore.store.activeItem
            }));
          }

          window.dispatchEvent(new CustomEvent("simple-modal-hide", {
            bubbles: true,
            cancelable: true,
            detail: {}
          }));
        }
      }, {
        key: "_editDetailsButtonTap",
        value: function _editDetailsButtonTap(e) {
          var evt = new CustomEvent("haxcms-load-node-fields", {
            bubbles: true,
            composed: true,
            cancelable: false,
            detail: e.target
          });
          window.dispatchEvent(evt);
        }
      }, {
        key: "_cancelButtonTap",
        value: function _cancelButtonTap(e) {
          this.editMode = false;
          this.dispatchEvent(new CustomEvent("hax-cancel", {
            bubbles: true,
            composed: true,
            cancelable: false,
            detail: e.detail
          }));
          window.dispatchEvent(new CustomEvent("simple-modal-hide", {
            bubbles: true,
            cancelable: true,
            detail: {}
          }));
        }
      }], [{
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this);
          }

          return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject2_c2e80700809211edaa2833647dc78c6c || (_templateObject2_c2e80700809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          .operation-buttons-wrapper {\n            display: flex;\n            justify-content: flex-end;\n            height: 0px;\n            margin: 0;\n            padding: 0;\n            color: var(--simple-colors-default-theme-orange-7, orange);\n            background-color: var(\n              --simple-colors-default-theme-orange-1,\n              white\n            );\n          }\n          .operation-buttons-wrapper .btn {\n            display: inline-flex;\n            margin: 0 16px 0 0;\n            height: 12px;\n            max-width: 200px;\n            opacity: 0.8;\n            transition: all 0.3s ease-in-out;\n          }\n          .operation-buttons-wrapper .btn:hover,\n          .operation-buttons-wrapper .btn:focus {\n            opacity: 0.9;\n          }\n          .operation-buttons-wrapper .btn:active {\n            opacity: 1;\n            color: #000000;\n          }\n          .operation-buttons-wrapper .btn[part=\"edit-mode-active\"] {\n            opacity: 1;\n          }\n        "])))]);
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.HAXCMSOperationButtons = HAXCMSOperationButtons;
});