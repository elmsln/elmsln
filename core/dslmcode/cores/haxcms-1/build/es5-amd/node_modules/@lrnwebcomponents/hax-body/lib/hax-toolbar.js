define(["exports", "../../../lit/index.js", "./hax-toolbar-item.js", "./hax-context-item.js", "./hax-toolbar-menu.js", "../../simple-toolbar/lib/simple-toolbar-menu-item.js", "../../simple-toolbar/simple-toolbar.js"], function (_exports, _index, _haxToolbarItem, _haxContextItem, _haxToolbarMenu, _simpleToolbarMenuItem, _simpleToolbar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxToolbarBehaviors = _exports.HaxToolbar = void 0;

  var _templateObject_d7ff4b508e0011ed99ce491205e67b1d;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HaxToolbarBehaviors = function HaxToolbarBehaviors(SuperClass) {
    return /*#__PURE__*/function (_SimpleToolbarBehavio) {
      babelHelpers.inherits(_class, _SimpleToolbarBehavio);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.selected = false;
        _this.inline = false;
        return _this;
      }

      babelHelpers.createClass(_class, null, [{
        key: "styles",
        get:
        /**
         * LitElement constructable styles enhancement
         */
        function get() {
          return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)), [(0, _index.css)(_templateObject_d7ff4b508e0011ed99ce491205e67b1d || (_templateObject_d7ff4b508e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n          :host {\n            --hax-ui-border-radius: 0px;\n          }\n          .selected-buttons {\n            transition: 0.1s all ease-in-out;\n            width: 0;\n          }\n          :host([has-selected-text]) .selected-buttons {\n            width: 100%;\n          }\n          ::slotted(*) {\n            pointer-events: all;\n          }\n          ::slotted(.group) {\n            border: none;\n          }\n        "])))]);
        }
      }, {
        key: "tag",
        get: function get() {
          return "hax-toolbar";
        }
      }, {
        key: "properties",
        get: function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            /**
             * See what's selected
             */
            selected: {
              type: Boolean,
              reflect: true
            },

            /**
             * This is an inline context menu
             */
            inline: {
              type: Boolean,
              reflect: true
            }
          });
        }
      }]);
      return _class;
    }((0, _simpleToolbar.SimpleToolbarBehaviors)(SuperClass));
  };
  /**
   *
   * @customElement
   * @extends HaxToolbarItemBehaviors
   * @extends LitElement
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */


  _exports.HaxToolbarBehaviors = HaxToolbarBehaviors;

  var HaxToolbar = /*#__PURE__*/function (_HaxToolbarBehaviors) {
    babelHelpers.inherits(HaxToolbar, _HaxToolbarBehaviors);

    var _super2 = _createSuper(HaxToolbar);

    function HaxToolbar() {
      babelHelpers.classCallCheck(this, HaxToolbar);
      return _super2.apply(this, arguments);
    }

    return babelHelpers.createClass(HaxToolbar);
  }(HaxToolbarBehaviors(_index.LitElement));

  _exports.HaxToolbar = HaxToolbar;
  customElements.define(HaxToolbar.tag, HaxToolbar);
});