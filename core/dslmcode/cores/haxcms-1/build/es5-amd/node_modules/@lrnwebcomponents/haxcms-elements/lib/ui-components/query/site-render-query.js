define(["exports", "../../../../../lit/index.js", "../../../../../@polymer/iron-list/iron-list.js", "./site-query.js"], function (_exports, _index, _ironList, _siteQuery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteRenderQuery = void 0;

  var _templateObject_faea32b08e0011ed99ce491205e67b1d, _templateObject2_faea32b08e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `site-render-query`
   * `Render a query result as an iron-list`
   *
   * @demo demo/index.html
   */
  var SiteRenderQuery = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SiteRenderQuery, _LitElement);

    var _super = _createSuper(SiteRenderQuery);

    function SiteRenderQuery() {
      var _this;

      babelHelpers.classCallCheck(this, SiteRenderQuery);
      _this = _super.call(this);
      _this.conditions = {};
      _this.sort = {};
      _this.grid = false;
      _this.result = [];
      _this.__items = [];
      return _this;
    }

    babelHelpers.createClass(SiteRenderQuery, [{
      key: "render",
      value: // render function, this is non-visual
      function render() {
        return (0, _index.html)(_templateObject_faea32b08e0011ed99ce491205e67b1d || (_templateObject_faea32b08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <site-query\n        .result=\"", "\"\n        @result-changed=\"", "\"\n        .sort=\"", "\"\n        .conditions=\"", "\"\n      ></site-query>\n      <iron-list\n        id=\"list\"\n        .items=\"", "\"\n        ?grid=\"", "\"\n        mutable-data\n      >\n        <slot></slot>\n      </iron-list>\n    "])), this.result, this.resultEvent, this.sort, this.conditions, this.__items, this.grid);
      }
    }, {
      key: "resultEvent",
      value: function resultEvent(e) {
        this.result = babelHelpers.toConsumableArray(e.detail.value);
      }
      /**
       * Props
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "result") {
            _this2.dispatchEvent(new CustomEvent("result-changed", {
              detail: {
                value: _this2[propName]
              }
            }));

            _this2.__items = babelHelpers.toConsumableArray(newValue);
          }
        });
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject2_faea32b08e0011ed99ce491205e67b1d || (_templateObject2_faea32b08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "])))];
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-render-query";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Conditions that can be used to slice the data differently in the manifest
           */
          conditions: {
            type: Object
          },

          /**
           * Establish the order items should be displayed in
           */
          sort: {
            type: Object
          },

          /**
           * iron-list helper for this 1 flag
           */
          grid: {
            type: Boolean
          },
          result: {
            type: Array
          },
          __items: {
            type: Array
          }
        };
      }
    }]);
    return SiteRenderQuery;
  }(_index.LitElement);

  _exports.SiteRenderQuery = SiteRenderQuery;
  customElements.define(SiteRenderQuery.tag, SiteRenderQuery);
});