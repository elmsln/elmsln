define(["exports", "../../lit/index.js", "../schema-behaviors/schema-behaviors.js", "./lib/oerschema.js"], function (_exports, _index, _schemaBehaviors, _oerschema) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.OerSchemaElement = void 0;

  var _templateObject_ab9339508e0011ed99ce491205e67b1d, _templateObject2_ab9339508e0011ed99ce491205e67b1d;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `oer-schema`
   * `A LRN element to wrap an oer schema prefix onto materials.`
   * @demo demo/index.html
   * @element oer-schema
   */
  var OerSchemaElement = /*#__PURE__*/function (_SchemaBehaviors) {
    babelHelpers.inherits(OerSchemaElement, _SchemaBehaviors);

    var _super = _createSuper(OerSchemaElement);

    function OerSchemaElement() {
      var _this;

      babelHelpers.classCallCheck(this, OerSchemaElement);
      _this = _super.call(this);
      _this.text = "";
      _this.oerProperty = "name";
      _this.typeof = "Resource";
      return _this;
    }

    babelHelpers.createClass(OerSchemaElement, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_ab9339508e0011ed99ce491205e67b1d || (_templateObject_ab9339508e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <span property=\"oer:", "\">\n        <slot></slot> ", "\n      </span>\n    "])), this.oerProperty, this.text);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "relatedResource") {
            _this2._OERLink = _this2._generateforComponentLink(_this2.relatedResource);
          }
        });
      }
    }, {
      key: "_generateforComponentLink",
      value: function _generateforComponentLink(source) {
        if (document && document.head) {
          // remove existing if this is moving around
          if (this._OERLink) {
            document.head.removeChild(this._OERLink);
          }

          var link = document.createElement("link");
          link.setAttribute("property", "oer:forComponent");
          link.setAttribute("content", this.relatedResource);
          document.head.appendChild(link);
          return link;
        }
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject2_ab9339508e0011ed99ce491205e67b1d || (_templateObject2_ab9339508e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "oer-schema";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement), "properties", this)), {}, {
          /**
           * Text to wire into the middle of the element.
           * This is easier to manage then slotted data though
           * this supports both methods.
           */
          text: {
            type: String
          },

          /**
           * Property value for this oer resource
           */
          oerProperty: {
            type: String,
            attribute: "oer-property"
          },

          /**
           * Property value for this oer resource
           */
          typeof: {
            type: String
          },

          /**
           * Related Resource ID
           */
          relatedResource: {
            type: String,
            attribute: "related-resource"
          }
        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        var oerSchema = new _oerschema.OERSchema();
        return {
          canScale: false,
          canPosition: false,
          canEditSource: true,
          gizmo: {
            title: "Schema",
            description: "Schematized element area",
            icon: "hax:oerschema",
            color: "blue",
            groups: ["Instructional"],
            handles: [{
              type: "inline",
              text: "text"
            }],
            meta: {
              author: "HAXTheWeb core team",
              inlineOnly: true
            }
          },
          settings: {
            configure: [{
              slot: "",
              title: "Text",
              inputMethod: "textfield",
              icon: "editor:title"
            }, {
              property: "typeof",
              title: "Schema typeof",
              inputMethod: "select",
              allowNull: true,
              options: oerSchema.types
            }, {
              property: "oerProperty",
              title: "Schema property",
              description: "The OER Schema property this represents",
              inputMethod: "select",
              allowNull: true,
              options: {
                name: "name",
                additionalType: "additionalType",
                description: "description",
                image: "image",
                mainEntityOfPage: "mainEntityOfPage",
                sameAs: "sameAs",
                uri: "uri"
              }
            }, {
              property: "relatedResource",
              title: "Related resource",
              description: "A reference to the related Schema resource",
              inputMethod: "textfield",
              icon: "editor:title"
            }],
            advanced: []
          },
          saveOptions: {
            unsetAttributes: ["_oerlink"]
          }
        };
      }
    }]);
    return OerSchemaElement;
  }((0, _schemaBehaviors.SchemaBehaviors)(_index.LitElement));

  _exports.OerSchemaElement = OerSchemaElement;
  customElements.define(OerSchemaElement.tag, OerSchemaElement);
});