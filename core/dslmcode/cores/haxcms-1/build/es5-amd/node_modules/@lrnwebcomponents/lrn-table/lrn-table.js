define(["exports", "meta", "require", "../../lit/index.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, meta, _require, _index, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnTable = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_a7cfc8b08e0011ed99ce491205e67b1d, _templateObject2_a7cfc8b08e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrn-table`
   * `Accessibly render a HTML table from a csv file`
   *
   * @microcopy - language worth noting:
   *  - CSV - Comma separated values
   * @demo demo/index.html
   * @element lrn-table
   */
  var LrnTable = /*#__PURE__*/function (_SchemaBehaviors) {
    babelHelpers.inherits(LrnTable, _SchemaBehaviors);

    var _super = _createSuper(LrnTable);

    function LrnTable() {
      var _this;

      babelHelpers.classCallCheck(this, LrnTable);
      _this = _super.call(this);
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["../csv-render/csv-render.js"], res, rej);
        });
      }, 0);
      return _this;
    }

    babelHelpers.createClass(LrnTable, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a7cfc8b08e0011ed99ce491205e67b1d || (_templateObject_a7cfc8b08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div typeof=\"oer:SupportingMaterial\">\n        <div class=\"hidden-title\" property=\"oer:name\">", "</div>\n        <div property=\"oer:description\">\n          <slot></slot>\n          <csv-render\n            data-source=\"", "\"\n            caption=\"", "\"\n            summary=\"", "\"\n          ></csv-render>\n        </div>\n      </div>\n    "])), this.title, this.csvFile, this.title, this.description);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject2_a7cfc8b08e0011ed99ce491205e67b1d || (_templateObject2_a7cfc8b08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .hidden-title {\n          display: none;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrn-table";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(LrnTable), "properties", this)), {}, {
          /**
           * Title of this table. This is both for accessibility and presentation.
           */
          title: {
            type: String
          },

          /**
           * The file to load material from.
           */
          csvFile: {
            type: String,
            attribute: "csv-file"
          },

          /**
           * An extended description of the material in the table for improved accessibility.
           */
          description: {
            type: String
          }
        });
      }
      /**
       * Hax properties
       */

    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./lib/lrn-table.haxProperties.json", meta.url).href;
      }
    }]);
    return LrnTable;
  }((0, _schemaBehaviors.SchemaBehaviors)(_index.LitElement));

  _exports.LrnTable = LrnTable;
  customElements.define(LrnTable.tag, LrnTable);
});