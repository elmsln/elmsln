define(["exports", "meta", "require", "../../lit/index.js"], function (_exports, meta, _require, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimplePages = void 0;
  meta = _interopRequireWildcard(meta);
  _require = _interopRequireWildcard(_require);

  var _templateObject_9d22a1308e0011ed99ce491205e67b1d, _templateObject2_9d22a1308e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `simple-pages`
   * `toggle between pages`
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @demo demo/index.html
   * @element simple-pages
   */
  var SimplePages = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SimplePages, _LitElement);

    var _super = _createSuper(SimplePages);

    /**
     * HTMLElement
     */
    function SimplePages() {
      var _this;

      babelHelpers.classCallCheck(this, SimplePages);
      _this = _super.call(this);
      _this.selected = 0;
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["../../@polymer/iron-pages/iron-pages.js"], res, rej);
        });
      }, 0);
      return _this;
    }
    /**
     * Selected changed
     */


    babelHelpers.createClass(SimplePages, [{
      key: "render",
      value: // render function
      function render() {
        return (0, _index.html)(_templateObject_9d22a1308e0011ed99ce491205e67b1d || (_templateObject_9d22a1308e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([" <iron-pages\n      selected=\"", "\"\n      selected-attribute=\"", "\"\n      @selected-changed=\"", "\"\n    >\n      <slot></slot>\n    </iron-pages>"])), this.selected, this.selectedAttribute, this._selectedChanged);
      } // properties available to the custom element for data binding

    }, {
      key: "_selectedChanged",
      value: function _selectedChanged(e) {
        if (this.children && this.children[e.detail.value] && this.children[e.detail.value].tagName && this.children[e.detail.value].getAttribute("data-dimport")) {
          var el = this.children[e.detail.value];

          if (!window.customElements.get(el.tagName.toLowerCase())) {
            var basePath = new URL("./simple-pages.js", meta.url).href + "/../";
            new Promise(function (res, rej) {
              return _require.default(["".concat(basePath, "../../").concat(el.getAttribute("data-dimport"))], res, rej);
            }).then(function (response) {
              setTimeout(function () {
                window.dispatchEvent(new Event("resize"));
              }, 0);
            });
          }
        }
      }
      /**
       * LitElement ready
       */

    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {}
      /**
       * LitElement life cycle - property changed
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        changedProperties.forEach(function (oldValue, propName) {
          /* notify example
          // notify
          if (propName == 'format') {
            this.dispatchEvent(
              new CustomEvent(`${propName}-changed`, {
                detail: {
                  value: this[propName],
                }
              })
            );
          }
          */

          /* observer example
          if (propName == 'activeNode') {
            this._activeNodeChanged(this[propName], oldValue);
          }
          */

          /* computed example
          if (['id', 'selected'].includes(propName)) {
            this.__selectedChanged(this.selected, this.id);
          }
          */
        });
      }
    }], [{
      key: "styles",
      get: //styles function
      function get() {
        return [(0, _index.css)(_templateObject2_9d22a1308e0011ed99ce491205e67b1d || (_templateObject2_9d22a1308e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        iron-pages:not(:defined) {\n          display: none;\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SimplePages), "properties", this)), {}, {
          selected: {
            type: Number
          },
          selectedAttribute: {
            type: String,
            attribute: "selected-attribute"
          }
        });
      }
      /**
       * Convention we use
       */

    }, {
      key: "tag",
      get: function get() {
        return "simple-pages";
      }
    }]);
    return SimplePages;
  }(_index.LitElement);

  _exports.SimplePages = SimplePages;
  customElements.define(SimplePages.tag, SimplePages);
});