define(["exports", "../../../lit/index.js", "../../simple-modal/lib/simple-modal-template.js", "./hax-ui-styles.js", "../../i18n-manager/lib/I18NMixin.js"], function (_exports, _index, _simpleModalTemplate, _haxUiStyles, _I18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxCancelDialog = void 0;

  var _templateObject_d737b5908e0011ed99ce491205e67b1d, _templateObject2_d737b5908e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-cancel-dialog`
   * @element hax-cancel-dialog
   * `Export dialog with all export options and settings provided.`
   */
  var HaxCancelDialog = /*#__PURE__*/function (_I18NMixin) {
    babelHelpers.inherits(HaxCancelDialog, _I18NMixin);

    var _super = _createSuper(HaxCancelDialog);

    function HaxCancelDialog() {
      var _this;

      babelHelpers.classCallCheck(this, HaxCancelDialog);
      _this = _super.call(this);
      _this.t = {
        cancelTitle: "Confirm Cancel",
        cancelWithoutSaving: "Any changes since your last save will be lost. Cancel anyway?",
        cancelYes: "Yes",
        cancelNo: "No"
      };

      _this.registerLocalization({
        context: babelHelpers.assertThisInitialized(_this),
        namespace: "hax"
      });

      return _this;
    }

    babelHelpers.createClass(HaxCancelDialog, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d737b5908e0011ed99ce491205e67b1d || (_templateObject_d737b5908e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <simple-modal-template\n        modal-id=\"hax-cancel\"\n        mode=\"hax-ui\"\n        id=\"dialog\"\n        .title=\"", "\"\n      >\n        <div slot=\"content\">", "</div>\n        <hax-toolbar id=\"hax-cancel-buttons\" always-expanded slot=\"buttons\">\n          <hax-tray-button\n            id=\"hax-cancel-no\"\n            label=\"", "\"\n            dialog-dismiss\n            show-text-label\n          >\n          </hax-tray-button>\n          <hax-tray-button\n            id=\"hax-cancel-yes\"\n            dialog-confirm\n            @click=\"", "\"\n            label=\"", "\"\n            show-text-label\n          >\n          </hax-tray-button>\n        </hax-toolbar>\n      </simple-modal-template>\n    "])), this.t.cancelTitle, this.t.cancelWithoutSaving, this.t.cancelNo, function (e) {
          return console.log(e);
        }, this.t.cancelYes);
      }
    }, {
      key: "firstUpdated",
      value:
      /**
       * Attached to the DOM, now fire that we exist.
       */
      function firstUpdated() {
        // fire an event that this is a core piece of the system
        this.dispatchEvent(new CustomEvent("hax-register-core-piece", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            piece: "haxCancel",
            object: this
          }
        }));
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(_haxUiStyles.HaxComponentStyles), [(0, _index.css)(_templateObject2_d737b5908e0011ed99ce491205e67b1d || (_templateObject2_d737b5908e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: none;\n          --simple-modal-resize: none;\n          --simple-modal-width: 200px;\n          --simple-modal-height: auto;\n          margin: 0;\n          padding: 0;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-cancel-dialog";
      }
    }]);
    return HaxCancelDialog;
  }((0, _I18NMixin2.I18NMixin)(_index.LitElement));

  _exports.HaxCancelDialog = HaxCancelDialog;
  customElements.define(HaxCancelDialog.tag, HaxCancelDialog);
});