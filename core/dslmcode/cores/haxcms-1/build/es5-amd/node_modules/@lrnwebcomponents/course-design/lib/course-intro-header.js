define(["../../../lit/index.js", "../../haxcms-elements/lib/core/haxcms-site-store.js", "../../simple-icon/simple-icon.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-button.js", "../../../mobx/dist/mobx.esm.js"], function (_index, _haxcmsSiteStore, _simpleIcon, _simpleIcons, _simpleIconButton, _mobxEsm) {
  "use strict";

  var _templateObject_d4ab17408e0011ed99ce491205e67b1d, _templateObject2_d4ab17408e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var CourseIntroHeader = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(CourseIntroHeader, _LitElement);

    var _super = _createSuper(CourseIntroHeader);

    function CourseIntroHeader() {
      var _this;

      babelHelpers.classCallCheck(this, CourseIntroHeader);
      _this = _super.call(this);
      _this.title = "";
      _this.description = "";
      _this.icon = "";
      return _this;
    }

    babelHelpers.createClass(CourseIntroHeader, [{
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(CourseIntroHeader.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(CourseIntroHeader.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        this._disposer = (0, _mobxEsm.autorun)(function () {
          if (_haxcmsSiteStore.store.manifest && _haxcmsSiteStore.store.manifest.metadata && _haxcmsSiteStore.store.manifest.metadata.theme && _haxcmsSiteStore.store.manifest.metadata.theme.variables) {
            _this2.title = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.manifest.title);
            _this2.description = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.manifest.description);
            _this2.icon = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.manifest.metadata.theme.variables.icon);
            _this2.shadowRoot.querySelector("#sub-heading").style.color = "".concat((0, _mobxEsm.toJS)(_haxcmsSiteStore.store.manifest.metadata.theme.variables.hexCode));
            _this2.shadowRoot.querySelector("#header").style.backgroundImage = "url(".concat((0, _mobxEsm.toJS)(_haxcmsSiteStore.store.manifest.metadata.theme.variables.image), ")");
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d4ab17408e0011ed99ce491205e67b1d || (_templateObject_d4ab17408e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"header-container\">\n        <div id=\"header\">\n          <div id=\"header-branding\">\n            <slot name=\"header-left\"></slot>\n          </div>\n        </div>\n        <div id=\"header-icon\">\n          <simple-icon id=\"course-icon\" icon=\"", "\"></simple-icon>\n        </div>\n        <div id=\"info\">\n          <h1 id=\"title\">", "</h1>\n          <h2 id=\"sub-heading\">", "</h2>\n          <h3 id=\"outline-title\">\n            <slot name=\"outline-title\"></slot>\n          </h3>\n        </div>\n      </div>\n    "])), this.icon, this.title, this.description);
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          title: {
            type: String
          },
          description: {
            type: String
          },
          icon: {
            type: String
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject2_d4ab17408e0011ed99ce491205e67b1d || (_templateObject2_d4ab17408e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        h1,\n        h2,\n        h3 {\n          font-family: var(--course-intro-header-font-family, \"Roboto\");\n          margin: 0;\n          color: #fff;\n        }\n\n        @media screen and (min-width: 320px) {\n          h1 {\n            font-size: 2.5em;\n            font-weight: 300;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          h1 {\n            font-size: 3em;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          h1 {\n            font-size: 5em;\n          }\n        }\n\n        @media screen and (min-width: 320px) {\n          h2 {\n            font-size: 1.5em;\n            font-weight: 300;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          h2 {\n            font-size: 2em;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          h2 {\n            font-size: 2.5em;\n          }\n        }\n\n        @media screen and (min-width: 320px) {\n          h3 {\n            font-size: 1.2em;\n            font-weight: 300;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          h3 {\n            font-size: 1.5em;\n          }\n        }\n\n        #header-container {\n          display: flex;\n          flex-direction: column;\n          background-color: var(\n            --course-intro-header--header--background-color,\n            #1e1e1e\n          );\n        }\n\n        #header {\n          display: flex;\n          justify-content: center;\n          width: 100%;\n          background-image: var(\n            --course-intro-header--header--background-image\n          );\n          background-size: var(\n            --course-intro-header--header--background-size,\n            cover\n          );\n          background-repeat: var(\n            --course-intro-header--header--background-repeat,\n            no-repeat\n          );\n          background-position: var(\n            --course-intro-header--header--background-position,\n            top center\n          );\n          min-height: var(--course-intro-header-min-height, 28vw);\n        }\n\n        @media screen and (min-width: 320px) {\n          #header-icon {\n            background-color: #fff;\n            width: 100px;\n            height: 100px;\n            border-radius: 50%;\n            border: 6px solid\n              var(--course-intro-header--header--background-color, #1e1e1e);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            position: relative;\n            bottom: 64px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n        }\n\n        @media screen and (min-width: 320px) {\n          simple-icon#course-icon {\n            --simple-icon-width: 90px;\n            --simple-icon-height: 90px;\n            --simple-icon-color: var(\n              --course-intro-header--icon--color,\n              #1e1e1e\n            );\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          #header-icon {\n            width: 140px;\n            height: 140px;\n            bottom: 86px;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          simple-icon#course-icon {\n            --simple-icon-width: 110px;\n            --simple-icon-height: 110px;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          #header-icon {\n            width: 210px;\n            height: 210px;\n            border: 8px solid\n              var(--course-intro-header--icon--border-color, #1e1e1e);\n            bottom: 128px;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          simple-icon#course-icon {\n            --simple-icon-width: 190px;\n            --simple-icon-height: 190px;\n          }\n        }\n\n        @media screen and (min-width: 1220px) {\n          #header-icon {\n            width: 250px;\n            height: 250px;\n            bottom: 150px;\n          }\n        }\n\n        @media screen and (min-width: 1220px) {\n          simple-icon#course-icon {\n            --simple-icon-width: 200px;\n            --simple-icon-height: 200px;\n          }\n        }\n\n        @media screen and (min-width: 320px) {\n          #info {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 40px 0;\n            text-transform: uppercase;\n            font-family: Open Sans;\n            margin-top: -110px;\n            text-align: center;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          #info {\n            margin-top: -130px;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          #info {\n            margin-top: -160px;\n          }\n        }\n\n        @media screen and (min-width: 1220px) {\n          #info {\n            margin-top: -190px;\n          }\n        }\n\n        @media screen and (min-width: 320px) {\n          #sub-heading {\n            margin-top: -20px;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          #sub-heading {\n            margin-top: -30px;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          #sub-heading {\n            margin-top: -40px;\n          }\n        }\n\n        #outline-title {\n          padding: 10px 0 0;\n          margin-bottom: -15px;\n        }\n\n        #header-branding {\n          width: 100%;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "course-intro-header";
      }
    }]);
    return CourseIntroHeader;
  }(_index.LitElement);

  customElements.define(CourseIntroHeader.tag, CourseIntroHeader);
});