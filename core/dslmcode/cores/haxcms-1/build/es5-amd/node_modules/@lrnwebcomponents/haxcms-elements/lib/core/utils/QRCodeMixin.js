define(["exports", "require", "../../../../../lit/index.js", "../haxcms-site-store.js", "../../../../hax-iconset/lib/simple-hax-iconset.js", "./HAXCMSI18NMixin.js"], function (_exports, _require, _index, _haxcmsSiteStore, _simpleHaxIconset, _HAXCMSI18NMixin2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.QRCodeMixin = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_c322ed20809211edaa2833647dc78c6c, _templateObject2_c322ed20809211edaa2833647dc78c6c, _templateObject3_c322ed20809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var QRCodeMixin = function QRCodeMixin(SuperClass) {
    return /*#__PURE__*/function (_HAXCMSI18NMixin) {
      babelHelpers.inherits(_class, _HAXCMSI18NMixin);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.showQRCode = false;
        _this.t = _this.t || {};
        _this.t = _objectSpread(_objectSpread({}, _this.t), {}, {
          currentPage: "Current page"
        });
        return _this;
      }
      /**
       * life cycle, element is afixed to the DOM
       */


      babelHelpers.createClass(_class, [{
        key: "firstUpdated",
        value: function firstUpdated(changedProperties) {
          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this).call(this, changedProperties);
          } // hook up the pop over menu with trap to ensure theme is rendering a QR code


          if (this.shadowRoot.querySelector("#qrcodepopover")) {
            this.qrcodebtn = this.shadowRoot.querySelector("#qrcodebtn");
            this.shadowRoot.querySelector("#qrcodepopover").target = this.qrcodebtn;
          }
        }
      }, {
        key: "QRCodeButton",
        value: function QRCodeButton() {
          var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "left";
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/lib/simple-icon-button-lite.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-popover/simple-popover.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-tooltip/simple-tooltip.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../q-r/q-r.js"], res, rej);
          });
          return (0, _index.html)(_templateObject_c322ed20809211edaa2833647dc78c6c || (_templateObject_c322ed20809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        <div\n          id=\"qrcodebtnwrapper\"\n          part=\"", "\"\n        >\n          <simple-icon-button-lite\n            part=\"qr-code-btn\"\n            class=\"qr-code-btn btn\"\n            icon=\"hax:qr-code\"\n            @click=\"", "\"\n            id=\"qrcodebtn\"\n          ></simple-icon-button-lite>\n          <simple-tooltip for=\"qrcodebtn\" position=\"", "\">\n            ", "\n          </simple-tooltip>\n          <simple-popover\n            ?hidden=\"", "\"\n            id=\"qrcodepopover\"\n            position=\"", "\"\n            fit-to-visible-bounds\n            auto\n          >\n            ", "\n          </simple-popover>\n        </div>\n      "])), this.editMode ? "edit-mode-active" : "", this.QRCodeButtonToggle, direction, this.t.currentPage, !this.showQRCode, direction, this.showQRCode ? (0, _index.html)(_templateObject2_c322ed20809211edaa2833647dc78c6c || (_templateObject2_c322ed20809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <div style=\"width:190px;height:190px;\">\n                    <q-r\n                      modulesize=\"4\"\n                      margin=\"0\"\n                      title=\"", "\"\n                      data=\"", "\"\n                    ></q-r>\n                  </div>\n                "])), _haxcmsSiteStore.store.activeTitle, window.location.href) : "");
        }
      }, {
        key: "QRCodeButtonToggle",
        value: function QRCodeButtonToggle(e) {
          this.showQRCode = !this.showQRCode;
        }
      }], [{
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this);
          }

          return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject3_c322ed20809211edaa2833647dc78c6c || (_templateObject3_c322ed20809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          simple-popover:not(:defined) {\n            display: none;\n          }\n          simple-popover {\n            padding: 2px;\n          }\n          .qr-code-btn {\n            color: inherit;\n            --simple-icon-height: 24px;\n            --simple-icon-width: 24px;\n          }\n          #qrcodebtnwrapper {\n            display: inline-flex;\n          }\n        "])))]);
        }
      }, {
        key: "properties",
        get: function get() {
          var props = {};

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)) {
            props = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this);
          }

          return _objectSpread(_objectSpread({}, props), {}, {
            showQRCode: {
              type: Boolean
            }
          });
        }
      }]);
      return _class;
    }((0, _HAXCMSI18NMixin2.HAXCMSI18NMixin)(SuperClass));
  };

  _exports.QRCodeMixin = QRCodeMixin;
});