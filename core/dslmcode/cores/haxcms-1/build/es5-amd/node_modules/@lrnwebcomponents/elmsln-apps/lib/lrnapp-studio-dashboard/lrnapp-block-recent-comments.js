define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-item/paper-item.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "../../../elmsln-loading/elmsln-loading.js", "./lrnapp-block-recent-comments-comment.js"], function (_exports, _polymerElement, _ironAjax, _paperItem, _domRepeat, _elmslnLoading, _lrnappBlockRecentCommentsComment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappBlockRecentComments = void 0;

  var _templateObject_b3d2ca70809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappBlockRecentComments = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappBlockRecentComments, _PolymerElement);

    var _super = _createSuper(LrnappBlockRecentComments);

    function LrnappBlockRecentComments() {
      babelHelpers.classCallCheck(this, LrnappBlockRecentComments);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappBlockRecentComments, [{
      key: "handleResponse",
      value: function handleResponse(e) {
        this.$.loading.hidden = true;
      }
    }, {
      key: "_getViewLink",
      value: function _getViewLink(nid) {
        return this.basePath + "lrnapp-studio-submission/submissions/" + nid;
      }
    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_b3d2ca70809211edaa2833647dc78c6c || (_templateObject_b3d2ca70809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"paper-item-styles\">\n        :host {\n          display: block;\n        }\n        lrnapp-block-recent-comments-comment .comment-text {\n          height: 50px;\n          overflow: hidden;\n          font-size: 12px;\n          font-weight: normal;\n        }\n      </style>\n      <div id=\"loading\">\n        <h3>Loading..</h3>\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n      </div>\n      <iron-ajax\n        auto=\"\"\n        url=\"{{sourcePath}}\"\n        handle-as=\"json\"\n        last-response=\"{{response}}\"\n        on-response=\"handleResponse\"\n      ></iron-ajax>\n      <template\n        is=\"dom-repeat\"\n        items=\"[[_toArray(response.data)]]\"\n        as=\"comment\"\n      >\n        <lrnapp-block-recent-comments-comment\n          comment-user=\"{{comment.relationships.author.data}}\"\n          comment-title=\"{{comment.attributes.subject}}\"\n          action-view=\"{{_getViewLink(comment.relationships.node.data.id)}}\"\n          date-updated=\"{{comment.attributes.changed}}\"\n          class=\"ferpa-protect\"\n        >\n          <div class=\"comment-text\">[[comment.attributes.body]]</div>\n        </lrnapp-block-recent-comments-comment>\n      </template>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-block-recent-comments";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String
          },
          csrfToken: {
            type: String
          },
          endPoint: {
            type: String
          },
          sourcePath: {
            type: String,
            notify: true
          },
          response: {
            type: Array,
            notify: true
          }
        };
      }
    }]);
    return LrnappBlockRecentComments;
  }(_polymerElement.PolymerElement);

  _exports.LrnappBlockRecentComments = LrnappBlockRecentComments;
  customElements.define(LrnappBlockRecentComments.tag, LrnappBlockRecentComments);
});