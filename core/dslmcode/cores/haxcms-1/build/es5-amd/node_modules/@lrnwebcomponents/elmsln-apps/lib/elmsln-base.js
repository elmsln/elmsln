function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import * as _require from 'require';

var ELMSLNBase = /*#__PURE__*/function (_HTMLElement) {
  "use strict";

  babelHelpers.inherits(ELMSLNBase, _HTMLElement);

  var _super = _createSuper(ELMSLNBase);

  function ELMSLNBase() {
    var _this;

    babelHelpers.classCallCheck(this, ELMSLNBase);
    _this = _super.call(this);
    setTimeout(function () {
      new Promise(function (res, rej) {
        return _require.default(["./elmsln-base-deps.js"], res, rej);
      });
    }, 0);
    return _this;
  }

  return babelHelpers.createClass(ELMSLNBase);
}( /*#__PURE__*/babelHelpers.wrapNativeSuper(HTMLElement));

customElements.define("elmsln-base", ELMSLNBase);