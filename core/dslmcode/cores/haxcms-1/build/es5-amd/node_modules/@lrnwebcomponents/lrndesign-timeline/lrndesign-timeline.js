define(["exports", "../../lit/index.js", "../simple-colors/simple-colors.js", "../responsive-utility/responsive-utility.js", "../utils/utils.js"], function (_exports, _index, _simpleColors, _responsiveUtility, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignTimeline = void 0;

  var _templateObject_6d52b1f0809211edaa2833647dc78c6c, _templateObject2_6d52b1f0809211edaa2833647dc78c6c, _templateObject3_6d52b1f0809211edaa2833647dc78c6c, _templateObject4_6d52b1f0809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `lrndesign-timeline`
   * `an element that displays events on a timeline`
   *
   * @element lrndesign-timeline
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var LrndesignTimeline = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(LrndesignTimeline, _SimpleColors);

    var _super = _createSuper(LrndesignTimeline);

    // life cycle
    function LrndesignTimeline() {
      var _this;

      babelHelpers.classCallCheck(this, LrndesignTimeline);
      _this = _super.call(this);
      _this.events = [];
      _this.timelineSize = "xs";
      return _this;
    }

    babelHelpers.createClass(LrndesignTimeline, [{
      key: "render",
      value: // render function
      function render() {
        var _this2 = this;

        return (0, _index.html)(_templateObject_6d52b1f0809211edaa2833647dc78c6c || (_templateObject_6d52b1f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <article>\n      <h1 id=\"title\">", "</h1>\n      <slot></slot>\n      <div id=\"timeline\">\n        <div id=\"events\" @scroll=\"", "\">\n          ", "\n        </div>\n      </div>\n    </article>"])), this.timelineTitle, this._checkScroll, this.eventsList.map(function (event, index) {
          return (0, _index.html)(_templateObject2_6d52b1f0809211edaa2833647dc78c6c || (_templateObject2_6d52b1f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <section\n                class=\"event\"\n                ?has-media=\"", "\"\n                tabindex=\"0\"\n                @focus=\"", "\"\n              >\n                <div class=\"event-overview\">\n                  <div class=\"heading\"><h2>", "</h2></div>\n                  <div class=\"media-outer\">\n                    ", "\n                  </div>\n                </div>\n                <div class=\"details\">", "</div>\n              </section>\n            "])), event.imagesrc && event.imagesrc !== "", _this2._setScroll, event.heading, !event.imagesrc || event.imagesrc === "" ? "" : (0, _index.html)(_templateObject3_6d52b1f0809211edaa2833647dc78c6c || (_templateObject3_6d52b1f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                          <div>\n                            <div>\n                              <img\n                                alt=\"", "\"\n                                src=\"", "\"\n                              />\n                            </div>\n                          </div>\n                        "])), event.imagealt, event.imagesrc), event.details);
        }));
      } // haxProperty definition

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline.prototype), "connectedCallback", this).call(this);
        window.ResponsiveUtility.requestAvailability();
        window.dispatchEvent(new CustomEvent("responsive-element", {
          detail: {
            element: this,
            attribute: "timeline-size",
            relativeToParent: true,
            sm: 600,
            md: 900,
            lg: 1200,
            xl: 1600
          }
        }));
        this.updateTimeline();
        this.observer.observe(this, {
          childList: true,
          subtree: false
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        if (this.observer && this.observer.disconnect) this.observer.disconnect();
        if (babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline.prototype), "disconnectedCallback", this)) babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * handle updates
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "timelineTitle" && _this3.title && !_this3.timelineTitle) _this3.timelineTitle = _this3.title;
        });
        this.updateTimeline();
      }
      /**
       * events container element
       *
       * @readonly
       * @memberof LrndesignTimeline
       */

    }, {
      key: "eventsElement",
      get: function get() {
        return this.shadowRoot && this.shadowRoot.querySelector("#events") ? this.shadowRoot.querySelector("#events") : false;
      }
      /**
       * ensures that events list is an Array
       *
       * @readonly
       * @memberof LrndesignTimeline
       */

    }, {
      key: "eventsList",
      get: function get() {
        var events = typeof this.events === "string" ? JSON.parse(this.events) : this.events;
        return events || [];
      }
      /**
       * mutation observer for tabs
       * @readonly
       * @returns {object}
       */

    }, {
      key: "observer",
      get: function get() {
        var _this4 = this;

        var callback = function callback() {
          return _this4.updateTimeline();
        };

        return new MutationObserver(callback);
      }
    }, {
      key: "_setScroll",
      value: function _setScroll(e) {
        var el = (0, _utils.normalizeEventPath)(e)[0];
        var parent = el.parentNode;
        parent.scroll({
          top: el.offsetTop,
          left: 0,
          behavior: "smooth"
        });
      }
      /**
       * checks the scroll of each event
       */

    }, {
      key: "_checkScroll",
      value: function _checkScroll(e) {
        if (this.shadowRoot) {
          var events = this.shadowRoot.querySelectorAll(".event") || [];
          events.forEach(function (event) {
            var top = event.offsetTop,
                target = events[0].offsetTop + 50 + event.parentNode.scrollTop,
                bottom = event.offsetTop + event.offsetHeight;

            if (target > top && target < bottom) {
              event.setAttribute("selected", true);
            } else {
              event.removeAttribute("selected");
            }
          });
        }
      }
    }, {
      key: "updateTimeline",
      value: function updateTimeline() {
        var _this5 = this;

        var sections = document.querySelectorAll("section") || [];

        if (this.eventsList.length < 1 && sections.length > 0 && this.eventsElement) {
          this.eventsElement.innerHTML = "";
          sections.forEach(function (section) {
            var clone = section.cloneNode(true),
                div = document.createElement("div"),
                overview = div.cloneNode(),
                details = div.cloneNode(),
                heading = div.cloneNode(),
                media = clone.querySelector(".media") ? clone.querySelector(".media") : undefined,
                cloneHeading = clone.querySelector("h1,h2,h3,h4,h5,h6") ? clone.querySelector("h1,h2,h3,h4,h5,h6") : undefined; //get heading

            overview.classList.add("event-overview");

            if (cloneHeading) {
              var inner = document.createElement("h2");
              heading.appendChild(inner);
              heading.classList.add("heading");
              inner.innerHTML = cloneHeading.innerHTML;
              cloneHeading.remove();
            }

            overview.appendChild(heading); //get media

            if (media) {
              var outer = div.cloneNode(),
                  _inner = div.cloneNode();

              outer.appendChild(_inner);
              div.appendChild(outer);

              _inner.appendChild(media.cloneNode(true));

              media.remove();
              clone.setAttribute("has-media", true);
            }

            div.classList.add("media-outer");
            overview.appendChild(div); //get details

            Object.keys(clone.children || []).forEach(function (child) {
              return details.append(clone.children[child]);
            });
            details.classList.add("details"); //add to events

            clone.classList.add("event");
            clone.appendChild(overview);
            clone.appendChild(details);

            _this5.eventsElement.appendChild(clone);
          });
        }

        this._checkScroll();
      }
    }], [{
      key: "styles",
      get: //styles function
      function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline), "styles", this)), [(0, _index.css)(_templateObject4_6d52b1f0809211edaa2833647dc78c6c || (_templateObject4_6d52b1f0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          font-size: 14px;\n          font-weight: 100;\n          line-height: 160%;\n          display: block;\n          --lrndesign-timeline-color: var(\n            --simple-colors-default-theme-grey-8,\n            #444\n          );\n          --lrndesign-timeline-color-print: #000;\n          --lrndesign-timeline-background: #f4f4f4;\n          --lrndesign-timeline-background-print: #fff;\n          --lrndesign-timeline-border: var(\n            --simple-colors-default-theme-grey-5,\n            #bbb\n          );\n          --lrndesign-timeline-border-print: var(\n            --simple-colors-fixed-theme-grey-5,\n            #bbb\n          );\n          --lrndesign-timeline-accent: #000;\n          --lrndesign-timeline-accent-background: #fff;\n          --lrndesign-timeline-accent-border: var(\n            --simple-colors-default-theme-accent-8,\n            #444\n          );\n          --lrndesign-timeline-header: var(\n            --simple-colors-default-theme-accent-1,\n            #fff\n          );\n          --lrndesign-timeline-header-accent: var(\n            --simple-colors-default-theme-accent-8,\n            #444\n          );\n          --lrndesign-timeline-accent-print: var(\n            --simple-colors-fixed-theme-accent-8,\n            #444\n          );\n        }\n\n        :host([dark]) {\n          --lrndesign-timeline-background: #1b1b1b;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        ::slotted(section) {\n          display: none;\n        }\n\n        #timeline {\n          display: block;\n          border-radius: 3px;\n          border: 1px solid var(--lrndesign-timeline-border-print);\n          border-left: 3px solid var(--lrndesign-timeline-accent-print);\n          background-color: var(--lrndesign-timeline-background-print);\n          color: var(--lrndesign-timeline-color-print);\n        }\n\n        #events {\n          padding: 0;\n          width: 100%;\n          min-height: 300px;\n        }\n\n        .heading {\n          margin: 0;\n          color: var(--lrndesign-timeline-accent-print);\n        }\n\n        .heading h2 {\n          font-size: 24px;\n          font-weight: 300;\n        }\n\n        .heading h2,\n        .details,\n        .media-outer > div {\n          padding: 0 40px;\n        }\n\n        .details {\n          margin: 15px 0;\n        }\n\n        .media-outer > div {\n          opacity: 1;\n          transition: opacity 0.5s;\n        }\n\n        .media-outer > div,\n        .media-outer > div * {\n          margin: 0 auto;\n          max-width: 100%;\n          max-height: 260px;\n        }\n        @media screen {\n          #timeline {\n            color: var(--lrndesign-timeline-color);\n            background-color: var(--lrndesign-accent-background);\n            border: 1px solid var(--lrndesign-timeline-border);\n            border-left: 3px solid var(--lrndesign-timeline-accent-border);\n          }\n\n          :host([dark]) #timeline {\n            background-color: var(--lrndesign-timeline-background);\n          }\n\n          h2 {\n            color: var(--lrndesign-timeline-header-accent);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) #timeline {\n            background-color: var(--lrndesign-timeline-background);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) h2 {\n            color: var(--lrndesign-timeline-header-accent);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) #events {\n            height: 300px;\n            position: relative;\n            overflow-y: scroll;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event {\n            position: static;\n            top: 0;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event-overview {\n            padding: 0;\n            position: sticky;\n            top: 0;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .heading {\n            position: absolute;\n            top: 0;\n            padding: 10px 0;\n            overflow: hidden;\n            background-color: transparent;\n            width: calc(55% + 30px);\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event[has-media][selected]\n            .heading {\n            z-index: 2;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event[has-media] .heading:after {\n            content: \" \";\n            z-index: 200;\n            position: absolute;\n            top: 42px;\n            right: 30px;\n            width: 0;\n            padding: 0;\n            border-top: 0px solid transparent;\n            border-bottom: 0px solid transparent;\n            border-left: 0px solid transparent;\n            transition: all 0.3s;\n            transition-delay: 0.2s;\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event[has-media][selected]\n            .heading:after {\n            top: 7px;\n            right: 0px;\n            border-top: 35px solid transparent;\n            border-bottom: 35px solid transparent;\n            border-left: 35px solid var(--lrndesign-timeline-header-accent);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .heading h2 {\n            margin: 7px 48px 0 20px;\n            padding: 0 20px;\n            line-height: 50px;\n            height: 50px;\n            background-color: var(--lrndesign-timeline-background);\n            color: var(--lrndesign-timeline-header-accent);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event[selected] .heading h2 {\n            background-color: var(--lrndesign-timeline-header-accent);\n            color: var(--lrndesign-timeline-header);\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event[has-media]\n            .heading\n            h2:after {\n            content: \"\";\n            position: absolute;\n            left: calc(100% - 48px);\n            top: 17px;\n            height: 50px;\n            opacity: 0;\n            width: 0px;\n            transition: opacity 0.3s;\n            background-color: var(--lrndesign-timeline-background);\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event[has-media][selected]\n            .heading\n            h2:after {\n            width: 13px;\n            opacity: 1;\n            background-color: var(--lrndesign-timeline-header-accent);\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .media-outer {\n            display: flex;\n            align-items: center;\n            position: absolute;\n            right: 0;\n            width: 45%;\n            height: 300px;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .media-outer > div {\n            display: flex;\n            padding: 20px 20px 20px 50px;\n            opacity: 0;\n            transition: opacity 0.3s delay 0.3s;\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event[selected]\n            .media-outer\n            > div {\n            opacity: 1;\n            transition-delay: 0s;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .details {\n            padding: 67px 20px 20px;\n            margin: 0 20px;\n            width: calc(55% - 80px);\n            color: var(--lrndesign-timeline-color);\n            background-color: var(--lrndesign-timeline-background);\n            border: 1px solid var(--lrndesign-timeline-background);\n            border-radius: 3px;\n            transition: all 0.5s;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event:last-of-type .details {\n            min-height: 180px;\n          }\n\n          :host(:not([timeline-size=\"xs\"])) .event[selected] .details {\n            color: var(--lrndesign-timeline-accent);\n            background-color: var(--lrndesign-timeline-accent-background);\n            border: 1px solid var(--lrndesign-timeline-border);\n            box-shadow: 0 2px 2px var(--lrndesign-timeline-border);\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event:first-of-type[selected]\n            .details {\n            border-top: 1px solid var(--lrndesign-timeline-background);\n          }\n\n          :host(:not([timeline-size=\"xs\"]))\n            .event:last-of-type[selected]\n            .details {\n            border-bottom: 1px solid var(--lrndesign-timeline-background);\n          }\n        }\n      "])))]);
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: false,
          canPosition: false,
          canEditSource: true,
          gizmo: {
            title: "Timeline",
            description: "A timeline of events with images and text",
            icon: "hax:timeline",
            color: "indigo",
            groups: ["Content", "Instructional", "Media", "Image"],
            handles: [{
              type: "image",
              source: "image"
            }],
            meta: {
              author: "HAXTheWeb core team"
            }
          },
          settings: {
            configure: [{
              property: "timelineTitle",
              title: "Timeline Title",
              description: "A title for the timeline.",
              inputMethod: "textfield"
            }, {
              property: "accentColor",
              title: "Accent Color",
              description: "An optional accent color.",
              inputMethod: "colorpicker"
            }, {
              property: "dark",
              title: "Dark Theme",
              description: "Enable Dark Theme",
              inputMethod: "boolean"
            }, {
              slot: "",
              title: "Timeline Description",
              description: "Optional text describing the timeline.",
              inputMethod: "textfield"
            }, {
              property: "events",
              title: "Timeline Events",
              description: "The events in the timeline",
              inputMethod: "array",
              itemLabel: "heading",
              properties: [{
                property: "heading",
                title: "Event Heading",
                description: "The heading for the event.",
                inputMethod: "textfield"
              }, {
                property: "details",
                title: "Event Details",
                description: "The body text with details for the event.",
                inputMethod: "textfield"
              }, {
                property: "imagesrc",
                title: "Event Image",
                description: "The path of the image.",
                inputMethod: "haxupload"
              }, {
                property: "imagealt",
                title: "Event Image Alt Text",
                description: "The alt text of the image (for accessibility).",
                inputMethod: "alt"
              }]
            }],
            advanced: []
          },
          saveOptions: {
            unsetAttributes: ["colors"]
          }
        };
      } // properties available to the custom element for data binding

    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignTimeline), "properties", this)), {}, {
          /**
          * the events of the timeline, in the desired order, as in:```
          [
          {
          "heading": "1855 - Penn State Charter",   //required, the main heading for the media, usually a date, time, or era
          "details": "",                            //optional, text describing the event
          "image": {                                //optional image for the event
           "src": "path/to/media.jpg",             //the alt text of the image
           "alt": "path/to/media.mp3",             //the url of the image
          },
          {...},
          {...},
          }
          ]```
          */
          events: {
            type: Array
          },

          /**
           * the timline size, calculated by responsive utility
           */
          timelineSize: {
            type: String,
            reflect: true,
            attribute: "timeline-size",
            value: "xs",

            /**
             * title of timeline
             */
            timelineTitle: {
              type: String,
              reflect: true,
              attribute: "timeline-title"
            },

            /**
             * @depeacated: title of timeline
             */
            title: {
              type: String,
              attribute: "title"
            }
          }
        });
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-timeline";
      }
    }]);
    return LrndesignTimeline;
  }(_simpleColors.SimpleColors);

  _exports.LrndesignTimeline = LrndesignTimeline;
  customElements.define(LrndesignTimeline.tag, LrndesignTimeline);
});