define(["exports", "meta", "../../lit/index.js", "../simple-colors/simple-colors.js"], function (_exports, meta, _index, _simpleColors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.PersonTestimonial = void 0;
  meta = _interopRequireWildcard(meta);

  var _templateObject_ac111be08e0011ed99ce491205e67b1d, _templateObject2_ac111be08e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `person-testimonial`
   * @element person-testimonial
   * `Leaving a testimonial from a person to say your company rocks!`
   * @demo demo/index.html
   */
  var PersonTestimonial = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(PersonTestimonial, _SimpleColors);

    var _super = _createSuper(PersonTestimonial);

    function PersonTestimonial() {
      babelHelpers.classCallCheck(this, PersonTestimonial);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(PersonTestimonial, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_ac111be08e0011ed99ce491205e67b1d || (_templateObject_ac111be08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"card\">\n        <div class=\"image\">\n          <img\n            src=\"", "\"\n            loading=\"lazy\"\n            aria-describedby=\"", "\"\n          />\n        </div>\n        <div class=\"arrow_right\"></div>\n        <div class=\"wrap\">\n          <div class=\"testimonial\">\n            <svg id=\"quotestart\">\n              <path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"></path>\n            </svg>\n            <slot></slot>\n            <svg id=\"quoteend\">\n              <path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"></path>\n            </svg>\n          </div>\n          <div class=\"name\">", "</div>\n          <div class=\"position\">", "</div>\n        </div>\n      </div>\n    "])), this.image, this.describedBy, this.name, this.position);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(PersonTestimonial), "styles", this)), [(0, _index.css)(_templateObject2_ac111be08e0011ed99ce491205e67b1d || (_templateObject2_ac111be08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          --person-testimonial-font-family: sans-serif;\n          --person-testimonial-bg: var(--simple-colors-default-theme-grey-1);\n          --person-testimonial-color: var(\n            --simple-colors-default-theme-accent-7\n          );\n          --person-testimonial-text: var(--simple-colors-default-theme-grey-12);\n        }\n\n        div.card {\n          display: inline-flex;\n          background-color: var(--person-testimonial-bg);\n          color: var(--person-testimonial-text);\n          font-family: var(--person-testimonial-font-family);\n          box-shadow: 0 2px 2px rgba(59, 43, 91, 0.7);\n        }\n\n        .image img {\n          display: block;\n          width: 150px;\n          height: 100%;\n        }\n        .image img {\n          max-width: 200px;\n        }\n        .image {\n          padding-right: 5px;\n          background-color: var(--person-testimonial-color);\n        }\n\n        svg {\n          fill: var(--person-testimonial-color);\n          height: 24px;\n          width: 24px;\n        }\n\n        .wrap {\n          margin: 15px;\n        }\n\n        .testimonial {\n          line-height: 24px;\n          font-size: 16px;\n          font-style: italic;\n        }\n\n        .name {\n          font-size: 21px;\n          text-transform: uppercase;\n          font-weight: bold;\n          margin-top: 20px;\n        }\n\n        .position {\n          font-size: 14px;\n          margin-top: 5px;\n        }\n\n        .arrow_right {\n          width: 0;\n          height: 0;\n          border-top: 15px solid var(--person-testimonial-bg);\n          border-bottom: 15px solid var(--person-testimonial-bg);\n          border-left: solid 15px transparent;\n          background-color: var(--person-testimonial-color);\n          position: relative;\n          top: 55px;\n        }\n\n        #quotestart {\n          display: inline-flex;\n          transform: rotateY(180deg);\n        }\n\n        #quoteend {\n          display: inline-flex;\n        }\n        @media screen and (max-width: 850px) {\n          div.card {\n            display: flex;\n            flex-wrap: wrap;\n          }\n          .image img {\n            display: block;\n            border-radius: 50%;\n            width: 200px;\n            height: 200px;\n          }\n          .image {\n            margin-top: 25px;\n            border-radius: 50%;\n            padding: 5px;\n            margin-left: auto;\n            margin-right: auto;\n          }\n          .arrow_right {\n            display: none;\n          }\n          .name,\n          .position {\n            text-align: center;\n          }\n        }\n        @media screen and (max-width: 600px) {\n          .image img {\n            width: 150px;\n            height: 150px;\n          }\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "person-testimonial";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(PersonTestimonial), "properties", this)), {}, {
          /**
           * Aria-describedby data passed down to appropriate tag
           */
          describedBy: {
            type: String,
            attribute: "described-by"
          },

          /**
           * The profile image to display to the left of the quote.
           */
          image: {
            type: String
          },

          /**
           * Name of the person making the quote.
           */
          name: {
            type: String
          },

          /**
           * The title / position of the person in question.
           */
          position: {
            type: String
          }
        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./lib/person-testimonial.haxProperties.json", meta.url).href;
      }
    }]);
    return PersonTestimonial;
  }(_simpleColors.SimpleColors);

  _exports.PersonTestimonial = PersonTestimonial;
  customElements.define(PersonTestimonial.tag, PersonTestimonial);
});