define(["exports", "../../../lit/index.js", "../../simple-icon/lib/simple-icon-lite.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-button-lite.js", "../../hax-iconset/lib/simple-hax-iconset.js"], function (_exports, _index, _simpleIconLite, _simpleIcons, _simpleIconButtonLite, _simpleHaxIconset) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnAssignmentButton = void 0;

  var _templateObject_a1073ca0809211edaa2833647dc78c6c, _templateObject2_a1073ca0809211edaa2833647dc78c6c, _templateObject3_a1073ca0809211edaa2833647dc78c6c, _templateObject4_a1073ca0809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnAssignmentButton = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(LrnAssignmentButton, _LitElement);

    var _super = _createSuper(LrnAssignmentButton);

    function LrnAssignmentButton() {
      var _this;

      babelHelpers.classCallCheck(this, LrnAssignmentButton);
      _this = _super.call(this);
      _this.open = false;
      _this.complete = false;
      return _this;
    }

    babelHelpers.createClass(LrnAssignmentButton, [{
      key: "render",
      value:
      /**
       * LitElement render
       */
      function render() {
        return (0, _index.html)(_templateObject_a1073ca0809211edaa2833647dc78c6c || (_templateObject_a1073ca0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <a href=\"", "\">\n        ", "\n        ", "\n      </a>\n    "])), this.url, this.open ? (0, _index.html)(_templateObject2_a1073ca0809211edaa2833647dc78c6c || (_templateObject2_a1073ca0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <button raised open>\n                ", "\n                <simple-icon-lite icon=\"lrn-icons:input\"></simple-icon-lite>\n              </button>\n            "])), this.title) : "", this.complete ? (0, _index.html)(_templateObject3_a1073ca0809211edaa2833647dc78c6c || (_templateObject3_a1073ca0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n              <button raised complete>\n                ", "\n                <simple-icon-lite icon=\"lrn-icons:done\"></simple-icon-lite>\n              </button>\n            "])), this.title) : "");
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject4_a1073ca0809211edaa2833647dc78c6c || (_templateObject4_a1073ca0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        a {\n          color: inherit;\n          text-decoration: inherit;\n        }\n        button {\n          background: #b0e6f9;\n        }\n        button[complete] {\n          background: #e7ffe7;\n        }\n        simple-icon-lite {\n          margin-left: 8px;\n          opacity: 0.8;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrn-assignment-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          title: {
            type: String
          },
          url: {
            type: String
          },
          open: {
            type: Boolean
          },
          complete: {
            type: Boolean
          }
        };
      }
    }]);
    return LrnAssignmentButton;
  }(_index.LitElement);

  _exports.LrnAssignmentButton = LrnAssignmentButton;
  customElements.define(LrnAssignmentButton.tag, LrnAssignmentButton);
});