define(["exports", "../../../../../lit/index.js", "../haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js"], function (_exports, _index, _haxcmsSiteStore, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSThemeParts = void 0;

  var _templateObject_c2ed8540809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HAXCMSThemeParts = function HAXCMSThemeParts(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.__disposer = _this.__disposer ? _this.__disposer : [];
        (0, _mobxEsm.autorun)(function (reaction) {
          _this.editMode = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.editMode);

          _this.__disposer.push(reaction);
        });
        (0, _mobxEsm.autorun)(function (reaction) {
          _this.darkMode = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.darkMode);

          _this.__disposer.push(reaction);
        });
        return _this;
      }

      babelHelpers.createClass(_class, null, [{
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this);
          }

          return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject_c2ed8540809211edaa2833647dc78c6c || (_templateObject_c2ed8540809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n          [part=\"edit-mode-active\"],\n          [part*=\"edit-mode-active\"] {\n            pointer-events: var(\n              --haxcms-theme-parts-edit-mode-active-pointer-events,\n              none\n            );\n            opacity: var(--haxcms-theme-parts-edit-mode-active-opacity, 0.5);\n            filter: var(\n              --haxcms-theme-parts-edit-mode-active-filter,\n              blur(1px)\n            );\n          }\n        "])))]);
        }
      }, {
        key: "properties",
        get: function get() {
          var props = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this) || {};
          return _objectSpread(_objectSpread({}, props), {}, {
            editMode: {
              type: Boolean,
              attribute: "edit-mode",
              reflect: true
            },
            darkMode: {
              type: Boolean,
              attribute: "dark-mode",
              reflect: true
            }
          });
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.HAXCMSThemeParts = HAXCMSThemeParts;
});