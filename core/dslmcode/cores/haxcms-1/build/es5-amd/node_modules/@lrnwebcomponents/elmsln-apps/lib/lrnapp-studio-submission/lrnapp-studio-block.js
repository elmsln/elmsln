define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../simple-icon/simple-icon.js", "../../../simple-icon/lib/simple-icons.js", "../../../simple-icon/lib/simple-icon-button.js", "../../../hax-iconset/lib/simple-hax-iconset.js", "../elmsln-base-deps.js"], function (_exports, _polymerElement, _simpleIcon, _simpleIcons, _simpleIconButton, _simpleHaxIconset, _elmslnBaseDeps) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioBlock = void 0;

  var _templateObject_eb2443c08e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioBlock = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioBlock, _PolymerElement);

    var _super = _createSuper(LrnappStudioBlock);

    function LrnappStudioBlock() {
      babelHelpers.classCallCheck(this, LrnappStudioBlock);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioBlock, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_eb2443c08e0011ed99ce491205e67b1d || (_templateObject_eb2443c08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          font-size: 12px;\n        }\n        .studio-block__header {\n          padding: 16px;\n          display: flex;\n          align-items: center;\n          justify-content: flex-start;\n          border: 1px solid lightgray;\n          border-bottom: none;\n        }\n        .studio-block__content {\n          padding: 0 16px;\n          border: 1px solid lightgray;\n        }\n        .studio-block__icon-wrapper {\n          width: 32px;\n        }\n        .studio-block__header h3 {\n          margin: 0;\n          font-style: none;\n          font-size: inherit;\n        }\n      </style>\n      <div class=\"studio-block__header\">\n        <div class=\"studio-block__icon-wrapper\">\n          <simple-icon icon=\"[[icon]]\" hidden$=\"[[!icon]]\"></simple-icon>\n        </div>\n        <h3 hidden$=\"[[!title]]\">[[title]]</h3>\n      </div>\n      <div class=\"studio-block__content\"><slot></slot></div>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-block";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          title: {
            type: String,
            value: null
          },
          icons: {
            type: String,
            value: null
          }
        };
      }
    }]);
    return LrnappStudioBlock;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioBlock = LrnappStudioBlock;
  customElements.define(LrnappStudioBlock.tag, LrnappStudioBlock);
});