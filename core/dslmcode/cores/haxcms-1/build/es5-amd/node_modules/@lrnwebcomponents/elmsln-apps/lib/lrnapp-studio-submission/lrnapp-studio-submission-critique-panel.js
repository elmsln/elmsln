define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/marked-element/marked-element.js", "../../../lrnsys-button/lrnsys-button.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "./lrnapp-studio-block.js", "./lrnapp-studio-submission-edit-textarea.js"], function (_exports, _polymerElement, _markedElement, _lrnsysButton, _domIf, _lrnappStudioBlock, _lrnappStudioSubmissionEditTextarea) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionCritiquePanel = void 0;

  var _templateObject_eb2e07c08e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioSubmissionCritiquePanel = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionCritiquePanel, _PolymerElement);

    var _super = _createSuper(LrnappStudioSubmissionCritiquePanel);

    function LrnappStudioSubmissionCritiquePanel() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionCritiquePanel);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioSubmissionCritiquePanel, [{
      key: "_publishClicked",
      value: function _publishClicked(e) {
        this.set("submission.attributes.state", "submission_ready");
        this.notifyPath("submission.attributes.state");
        this.dispatchEvent(new CustomEvent("submissionPublishClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }, {
      key: "_saveDraftClicked",
      value: function _saveDraftClicked(e) {
        this.set("submission.attributes.state", "submission_in_progress");
        this.notifyPath("submission.attributes.state");
        this.dispatchEvent(new CustomEvent("submissionSaveDraftClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }, {
      key: "_deleteClicked",
      value: function _deleteClicked(e) {
        this.dispatchEvent(new CustomEvent("submissionDeleteClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_eb2e07c08e0011ed99ce491205e67b1d || (_templateObject_eb2e07c08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        .field {\n          padding-top: 32px;\n          padding-bottom: 32px;\n        }\n\n        .actions {\n          display: flex;\n          border-top: 2px solid gainsboro;\n          margin-top: 16px;\n          font-size: 14px;\n        }\n\n        .actions .spacer {\n          flex: 1 1 auto;\n        }\n\n        .submission-critique-outline + .submission-critique-outline {\n          margin-top: 16px;\n        }\n\n        :host([edit])\n          .submission-critique-outline--feedback\n          lrnapp-studio-block {\n          padding: 0;\n        }\n      </style>\n      <!-- Body -->\n      <div class=\"field\">\n        <div class=\"submission-critique-outline\">\n          <lrnapp-studio-block title=\"Directions\" icon=\"info-outline\">\n            <marked-element\n              markdown=\"[[submission.relationships.assignment.attributes.critiqueOutline]]\"\n            ></marked-element>\n          </lrnapp-studio-block>\n        </div>\n        <div\n          class=\"submission-critique-outline submission-critique-outline--feedback\"\n        >\n          <lrnapp-studio-block title=\"Feedback\" icon=\"communication:comment\">\n            <template is=\"dom-if\" if=\"[[edit]]\">\n              <lrnapp-studio-submission-edit-textarea\n                content=\"{{submission.attributes.body}}\"\n              ></lrnapp-studio-submission-edit-textarea>\n            </template>\n            <template is=\"dom-if\" if=\"[[!edit]]\">\n              <marked-element\n                markdown=\"{{submission.attributes.body}}\"\n              ></marked-element>\n            </template>\n          </lrnapp-studio-block>\n        </div>\n      </div>\n      <template is=\"dom-if\" if=\"[[edit]]\">\n        <div class=\"actions\">\n          <lrnsys-button\n            id=\"publish\"\n            icon=\"check\"\n            label=\"Publish Feedback\"\n            on-click=\"_publishClicked\"\n            hover-class=\"amber lighten-5 green-text text-darken-4\"\n            icon-class=\"green-text\"\n          ></lrnsys-button>\n          <lrnsys-button\n            id=\"save-draft\"\n            icon=\"drafts\"\n            label=\"Save Draft\"\n            on-click=\"_saveDraftClicked\"\n            hover-class=\"amber lighten-5 amber-text text-darken-4\"\n            icon-class=\"amber-text text-darken-4\"\n          ></lrnsys-button>\n          <span class=\"spacer\"></span>\n          <lrnsys-button\n            id=\"delete\"\n            label=\"Delete Feedback\"\n            icon=\"delete\"\n            on-click=\"_deleteClicked\"\n            hover-class=\"amber lighten-5 red-text\"\n            icon-class=\"red-text text-darken-4\"\n          >\n          </lrnsys-button>\n        </div>\n      </template>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-critique-panel";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          submission: {
            type: Object,
            notify: true
          },
          edit: {
            type: Boolean,
            value: false,
            reflectToAttribute: true
          }
        };
      }
    }]);
    return LrnappStudioSubmissionCritiquePanel;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionCritiquePanel = LrnappStudioSubmissionCritiquePanel;
  customElements.define(LrnappStudioSubmissionCritiquePanel.tag, LrnappStudioSubmissionCritiquePanel);
});