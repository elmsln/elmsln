define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/iron-a11y-keys/iron-a11y-keys.js", "../../simple-icon/simple-icon.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-button.js", "./mtz-marked-control-line-behavior.js", "./mtz-marked-control-behavior.js"], function (_exports, _polymerElement, _ironA11yKeys, _simpleIcon, _simpleIcons, _simpleIconButton, _mtzMarkedControlLineBehavior, _mtzMarkedControlBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MtzMarkedControlGenericLine = void 0;

  var _templateObject_a2835550809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var MtzMarkedControlGenericLine = /*#__PURE__*/function (_mtzMarkedControlBeha) {
    babelHelpers.inherits(MtzMarkedControlGenericLine, _mtzMarkedControlBeha);

    var _super = _createSuper(MtzMarkedControlGenericLine);

    function MtzMarkedControlGenericLine() {
      babelHelpers.classCallCheck(this, MtzMarkedControlGenericLine);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(MtzMarkedControlGenericLine, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_a2835550809211edaa2833647dc78c6c || (_templateObject_a2835550809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: inline-block;\n        }\n      </style>\n\n      <simple-icon-button\n        icon=\"[[icon]]\"\n        noink=\"[[noink]]\"\n        on-click=\"_handleCommand\"\n        alt=\"[[title]]\"\n      ></simple-icon-button>\n\n      <iron-a11y-keys\n        keys=\"[[keys]]\"\n        on-keys-pressed=\"_handleCommand\"\n        target=\"[[__editor]]\"\n      ></iron-a11y-keys>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "mtz-marked-control-generic-line";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(MtzMarkedControlGenericLine), "properties", this)), {}, {
          title: String,
          icon: String,
          keys: String,
          noink: Boolean // Pass-through

        });
      }
    }]);
    return MtzMarkedControlGenericLine;
  }((0, _mtzMarkedControlBehavior.mtzMarkedControlBehavior)((0, _mtzMarkedControlLineBehavior.mtzMarkedControlLineBehaviorImpl)(_polymerElement.PolymerElement)));

  _exports.MtzMarkedControlGenericLine = MtzMarkedControlGenericLine;
  customElements.define(MtzMarkedControlGenericLine.tag, MtzMarkedControlGenericLine);
});