define(["../../../lit/index.js", "../../haxcms-elements/lib/core/haxcms-site-store.js", "../../../mobx/dist/mobx.esm.js", "./course-intro-lesson-plan.js"], function (_index, _haxcmsSiteStore, _mobxEsm, _courseIntroLessonPlan) {
  "use strict";

  var _templateObject_9d143080809211edaa2833647dc78c6c, _templateObject2_9d143080809211edaa2833647dc78c6c, _templateObject3_9d143080809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var CourseIntroLessonPlans = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(CourseIntroLessonPlans, _LitElement);

    var _super = _createSuper(CourseIntroLessonPlans);

    function CourseIntroLessonPlans() {
      var _this;

      babelHelpers.classCallCheck(this, CourseIntroLessonPlans);
      _this = _super.call(this);
      _this.items = [];
      _this._disposer = (0, _mobxEsm.autorun)(function () {
        if (_haxcmsSiteStore.store.routerManifest && _haxcmsSiteStore.store.routerManifest.items) {
          _this._itemsChanged((0, _mobxEsm.toJS)(_haxcmsSiteStore.store.routerManifest.items));
        }
      });
      return _this;
    }

    babelHelpers.createClass(CourseIntroLessonPlans, [{
      key: "_itemsChanged",
      value: function _itemsChanged(items) {
        this.items = [];
        this.items = items.filter(function (i) {
          return i.slug !== "introduction" && i.parent === null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_9d143080809211edaa2833647dc78c6c || (_templateObject_9d143080809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"plans-container\">\n        ", "\n      </div>\n    "])), this.items.map(function (plan) {
          return (0, _index.html)(_templateObject2_9d143080809211edaa2833647dc78c6c || (_templateObject2_9d143080809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<course-intro-lesson-plan\n              title=\"", "\"\n              link=", "\n            ></course-intro-lesson-plan>"])), plan.title, plan.slug);
        }));
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          items: {
            type: Array
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject3_9d143080809211edaa2833647dc78c6c || (_templateObject3_9d143080809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          background-color: var(\n            --course-intro-header--header--background-color,\n            #1e1e1e\n          );\n          padding-bottom: 40px;\n          min-height: 60vh;\n        }\n\n        @media screen and (min-width: 320px) {\n          #plans-container {\n            background: white;\n            margin: 0 auto;\n            max-width: 400px;\n          }\n        }\n\n        @media screen and (min-width: 620px) {\n          #plans-container {\n            max-width: 500px;\n          }\n        }\n\n        @media screen and (min-width: 920px) {\n          #plans-container {\n            max-width: 700px;\n          }\n        }\n\n        @media screen and (min-width: 1220px) {\n          #plans-container {\n            max-width: 900px;\n          }\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "course-intro-lesson-plans";
      }
    }]);
    return CourseIntroLessonPlans;
  }(_index.LitElement);

  customElements.define(CourseIntroLessonPlans.tag, CourseIntroLessonPlans);
});