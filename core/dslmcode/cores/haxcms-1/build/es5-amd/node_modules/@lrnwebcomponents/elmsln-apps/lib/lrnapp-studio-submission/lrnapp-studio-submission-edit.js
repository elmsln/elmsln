define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/paper-input/paper-input.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../lrnsys-button/lrnsys-button.js", "./lrnapp-studio-submission-media-editoverlay.js", "./lrnapp-studio-submission-edit-images.js", "./lrnapp-studio-submission-edit-files.js", "./lrnapp-studio-submission-edit-video.js", "./lrnapp-studio-submission-edit-links.js", "./lrnapp-studio-submission-edit-textarea.js"], function (_exports, _polymerElement, _paperInput, _domIf, _lrnsysButton, _lrnappStudioSubmissionMediaEditoverlay, _lrnappStudioSubmissionEditImages, _lrnappStudioSubmissionEditFiles, _lrnappStudioSubmissionEditVideo, _lrnappStudioSubmissionEditLinks, _lrnappStudioSubmissionEditTextarea) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEdit = void 0;

  var _templateObject_b416b140809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnappStudioSubmissionEdit = /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionEdit, _PolymerElement);

    var _super = _createSuper(LrnappStudioSubmissionEdit);

    function LrnappStudioSubmissionEdit() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionEdit);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnappStudioSubmissionEdit, [{
      key: "_publishClicked",
      value: function _publishClicked(e) {
        this.set("submission.attributes.state", "submission_ready");
        this.notifyPath("submission.attributes.state");
        this.dispatchEvent(new CustomEvent("submissionPublishClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }, {
      key: "_saveDraftClicked",
      value: function _saveDraftClicked(e) {
        this.set("submission.attributes.state", "submission_in_progress");
        this.notifyPath("submission.attributes.state");
        this.dispatchEvent(new CustomEvent("submissionSaveDraftClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }, {
      key: "_deleteClicked",
      value: function _deleteClicked(e) {
        this.dispatchEvent(new CustomEvent("submissionDeleteClicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_b416b140809211edaa2833647dc78c6c || (_templateObject_b416b140809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          padding: 16px;\n        }\n        .field {\n          padding-bottom: 16px;\n        }\n        .actions {\n          display: flex;\n          border-top: 2px solid gainsboro;\n          margin-top: 16px;\n        }\n        .actions .spacer {\n          flex: 1 1 auto;\n        }\n        simple-icon {\n          margin-right: 6px;\n          --simple-icon-height: 32px;\n          --simple-icon-width: 32px;\n        }\n        .imagesfiled__image_delete {\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n        label {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"{{submission}}\">\n        <div class=\"field\">\n          <paper-input\n            label=\"Title\"\n            value=\"{{submission.attributes.title}}\"\n          ></paper-input>\n        </div>\n        <!-- Body -->\n        <div class=\"field\">\n          <label>Submission Text</label>\n          <lrnapp-studio-submission-edit-textarea\n            content=\"{{submission.attributes.body}}\"\n          ></lrnapp-studio-submission-edit-textarea>\n        </div>\n\n        <!-- Images -->\n        <div class=\"imagesfield field\">\n          <label for=\"image-upload\">Images</label>\n          <lrnapp-studio-submission-edit-images\n            images=\"{{submission.attributes.images}}\"\n            file-types=\"[[submission.meta.imagefieldTypes]]\"\n          ></lrnapp-studio-submission-edit-images>\n        </div>\n\n        <!-- Files -->\n        <div class=\"filesfield field\">\n          <label for=\"file-upload\">Files</label>\n          <lrnapp-studio-submission-edit-files\n            files=\"{{submission.attributes.files}}\"\n            file-types=\"[[submission.meta.filefieldTypes]]\"\n          >\n          </lrnapp-studio-submission-edit-files>\n        </div>\n\n        <!-- Links -->\n        <div id=\"linksfield\" class=\"linksfield field\">\n          <label for=\"links-input\">Links</label>\n          <lrnapp-studio-submission-edit-links\n            links=\"{{submission.attributes.links}}\"\n          ></lrnapp-studio-submission-edit-links>\n        </div>\n\n        <!-- Videos -->\n        <div id=\"videosfield\" class=\"videosfield field\">\n          <label for=\"videos-input\">Videos</label>\n          <lrnapp-studio-submission-edit-video\n            videos=\"{{submission.attributes.video}}\"\n            end-point=\"[[endPoint]]\"\n            csrf-token=\"[[csrfToken]]\"\n          ></lrnapp-studio-submission-edit-video>\n        </div>\n\n        <div class=\"actions\">\n          <lrnsys-button\n            id=\"publish\"\n            icon=\"check\"\n            label=\"Publish to Studio\"\n            on-click=\"_publishClicked\"\n            hover-class=\"amber lighten-5 green-text text-darken-4\"\n            icon-class=\"green-text\"\n          ></lrnsys-button>\n          <lrnsys-button\n            id=\"save-draft\"\n            icon=\"drafts\"\n            label=\"Save Draft\"\n            on-click=\"_saveDraftClicked\"\n            hover-class=\"amber lighten-5 amber-text text-darken-4\"\n            icon-class=\"amber-text text-darken-4\"\n          ></lrnsys-button>\n          <span class=\"spacer\"></span>\n          <lrnsys-button\n            id=\"delete\"\n            label=\"Delete\"\n            icon=\"delete\"\n            on-click=\"_deleteClicked\"\n            hover-class=\"amber lighten-5 red-text\"\n            icon-class=\"red-text text-darken-4\"\n          >\n          </lrnsys-button>\n        </div>\n      </template>\n    "])));
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-edit";
      }
    }, {
      key: "properties",
      get: function get() {
        return babelHelpers.defineProperty({
          submission: {
            type: Object,
            notify: true
          },
          uploadFilesUrl: {
            type: String
          },
          newlink: {
            type: String
          },
          newvideo: {
            type: String
          },
          videoGenerateSourceUrl: {
            type: String
          }
        }, "submission", {
          type: Object,
          notify: true
        });
      }
    }, {
      key: "observers",
      get: function get() {
        return ["_bodyChanged(title)"];
      }
    }]);
    return LrnappStudioSubmissionEdit;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionEdit = LrnappStudioSubmissionEdit;
  customElements.define(LrnappStudioSubmissionEdit.tag, LrnappStudioSubmissionEdit);
});