define(["exports", "require", "../../../lit/index.js", "../../simple-colors/simple-colors.js", "../../haxcms-elements/lib/core/haxcms-site-store.js", "../../../mobx/dist/mobx.esm.js", "../../../@polymer/polymer/lib/elements/custom-style.js"], function (_exports, _require, _index, _simpleColors, _haxcmsSiteStore, _mobxEsm, _customStyle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleBlogPost = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_a5b5f7a0809211edaa2833647dc78c6c, _templateObject2_a5b5f7a0809211edaa2833647dc78c6c, _templateObject3_a5b5f7a0809211edaa2833647dc78c6c;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `simple-blog-post`
   * @element simple-blog-post
   * `A simple blog and associated elements`
   */
  var SimpleBlogPost = /*#__PURE__*/function (_SimpleColors) {
    babelHelpers.inherits(SimpleBlogPost, _SimpleColors);

    var _super = _createSuper(SimpleBlogPost);

    /**
     * Ready life cycle
     */
    function SimpleBlogPost() {
      var _this;

      babelHelpers.classCallCheck(this, SimpleBlogPost);
      _this = _super.call(this);
      _this.editMode = false; // prettier-ignore

      new Promise(function (res, rej) {
        return _require.default(["../../haxcms-elements/lib/ui-components/active-item/site-active-title.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(SimpleBlogPost, [{
      key: "render",
      value: // render function
      function render() {
        return (0, _index.html)(_templateObject_a5b5f7a0809211edaa2833647dc78c6c || (_templateObject_a5b5f7a0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style>\n          site-active-title {\n            font-weight: 700;\n            font-style: normal;\n            letter-spacing: -0.04em;\n            font-size: 50px;\n            line-height: 1.1;\n            color: black;\n          }\n          :host([has-image]) site-active-title {\n            font-weight: 700;\n            font-style: normal;\n            letter-spacing: -0.04em;\n            font-size: 50px;\n            line-height: 1.1;\n            margin-bottom: 16px;\n            text-shadow: 0 1px 16px rgba(0, 0, 0, 0.5),\n              0 0 1px rgba(0, 0, 0, 0.5);\n            color: white;\n          }\n        </style>\n      </custom-style>\n      <main>\n        <article>\n          <div class=\"article-image\">\n            ", "\n            <div class=\"post-meta\">\n              <site-active-title></site-active-title>\n            </div>\n          </div>\n          <section id=\"contentcontainer\">\n            <div id=\"slot\"><slot></slot></div>\n          </section>\n        </article>\n      </main>\n    "])), this.hasImage ? (0, _index.html)(_templateObject2_a5b5f7a0809211edaa2833647dc78c6c || (_templateObject2_a5b5f7a0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <div\n                    id=\"image\"\n                    class=\"post-image-image\"\n                    style='background-image: url(\"", "\");'\n                  ></div>\n                "])), this.image) : "");
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "hasImage") {
            _this2._hasImageChanged(_this2[propName], oldValue);
          }
        });
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this3 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(SimpleBlogPost.prototype), "connectedCallback", this).call(this);
        this.__disposer = [];
        setTimeout(function () {
          window.addEventListener("scroll", _this3._scrollListener.bind(_this3));
          (0, _mobxEsm.autorun)(function (reaction) {
            var fields = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.activeItemFields);
            _this3.hasImage = _this3._computeHasImage(fields);

            if (_this3.hasImage) {
              _this3.image = fields.images[0].src;
            }

            _this3.__disposer.push(reaction);
          });
        }, 0);
      }
      /**
       * Detatched life cycle
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.removeEventListener("scroll", this._scrollListener.bind(this));

        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SimpleBlogPost.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * Scroll event listener to do image effects.
       */

    }, {
      key: "_scrollListener",
      value: function _scrollListener(e) {
        if (this.hasImage) {
          var top = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0);

          if (top < 0 || top > 1500) {
            return;
          }

          this.shadowRoot.querySelector("#image").style.transform = "translate3d(0px, " + top / 3 + "px, 0px)";
          this.shadowRoot.querySelector("#image").style.opacity = 1 - Math.max(top / 700, 0);
        }
      }
      /**
       * image has changed, ensure we set padding appropriately.
       */

    }, {
      key: "_hasImageChanged",
      value: function _hasImageChanged(newValue, oldValue) {
        var _this4 = this;

        if (newValue) {
          setTimeout(function () {
            var rect = _this4.shadowRoot.querySelector("#image").getBoundingClientRect();

            _this4.shadowRoot.querySelector("#contentcontainer").style.paddingTop = rect.height + "px";
          }, 0);
        } else {
          this.shadowRoot.querySelector("#contentcontainer").style.paddingTop = null;
        }
      }
      /**
       * see if there's an image in the metadata blob.
       */

    }, {
      key: "_computeHasImage",
      value: function _computeHasImage(fields) {
        if (fields && babelHelpers.typeof(fields.images) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && babelHelpers.typeof(fields.images[0]) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && babelHelpers.typeof(fields.images[0].src) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          return true;
        }

        return false;
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SimpleBlogPost), "styles", this)), [(0, _index.css)(_templateObject3_a5b5f7a0809211edaa2833647dc78c6c || (_templateObject3_a5b5f7a0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          min-height: 80vh;\n        }\n        main {\n          transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;\n          width: 100%;\n          max-width: 900px;\n          margin: 0 auto;\n          -webkit-box-sizing: border-box;\n          -moz-box-sizing: border-box;\n          box-sizing: border-box;\n          opacity: 1;\n          visibility: visible;\n        }\n        @media only screen and (max-width: 900px) {\n          main {\n            padding: 0 32px;\n          }\n        }\n        section {\n          width: 100%;\n          font-family: Linux Libertine;\n          color: #333;\n        }\n        section ::slotted(*) {\n          font-weight: 400;\n          font-style: normal;\n          font-size: 22px;\n          line-height: 30px;\n          margin: 0;\n          padding-bottom: 30px;\n          color: #333;\n          -webkit-hyphens: auto;\n          -moz-hyphens: auto;\n          hyphens: auto;\n        }\n        :host([has-image]) .article-image {\n          position: absolute;\n          background-color: var(--haxcms-color, black);\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          overflow: hidden;\n        }\n        .post-image-image {\n          background-size: cover;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          text-indent: -9999px;\n          padding-top: 33%;\n          z-index: 1;\n        }\n        .post-meta {\n          font-family: Open Sans, MundoSans, \"Helvetica Neue\", Arial, Helvetica,\n            sans-serif;\n        }\n        :host([has-image]) .post-meta {\n          position: absolute;\n          bottom: 80px;\n          left: 30%;\n          right: 30%;\n          padding-top: 60px;\n          z-index: 9;\n          font-family: Open Sans, MundoSans, \"Helvetica Neue\", Arial, Helvetica,\n            sans-serif;\n          -webkit-box-sizing: border-box;\n          -moz-box-sizing: border-box;\n          box-sizing: border-box;\n        }\n        /**\n         * Hide the slotted content during edit mode\n         */\n        :host([edit-mode]) #slot {\n          display: none;\n        }\n      "])))]);
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "simple-blog-post";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SimpleBlogPost), "properties", this)), {}, {
          /**
           * calculate if we have a header image.
           */
          hasImage: {
            type: Boolean,
            reflect: true,
            attribute: "has-image"
          },

          /**
           * editting state for the page
           */
          editMode: {
            type: Boolean,
            reflect: true,
            attribute: "edit-mode"
          },
          image: {
            type: String
          }
        });
      }
    }]);
    return SimpleBlogPost;
  }(_simpleColors.SimpleColors);

  _exports.SimpleBlogPost = SimpleBlogPost;
  customElements.define(SimpleBlogPost.tag, SimpleBlogPost);
});