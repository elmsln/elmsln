define(["exports", "meta", "../../../lit/index.js"], function (_exports, meta, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ActivityBox = void 0;
  meta = _interopRequireWildcard(meta);

  var _templateObject_d4a2b2d08e0011ed99ce491205e67b1d, _templateObject2_d4a2b2d08e0011ed99ce491205e67b1d, _templateObject3_d4a2b2d08e0011ed99ce491205e67b1d, _templateObject4_d4a2b2d08e0011ed99ce491205e67b1d;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var ActivityBox = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(ActivityBox, _LitElement);

    var _super = _createSuper(ActivityBox);

    function ActivityBox() {
      var _this;

      babelHelpers.classCallCheck(this, ActivityBox);
      _this = _super.call(this);
      _this.icon = "";
      _this.tag = "";
      return _this;
    }

    babelHelpers.createClass(ActivityBox, [{
      key: "haxHooks",
      value:
      /**
       * Implements haxHooks to tie into life-cycle if hax exists.
       */
      function haxHooks() {
        return {
          activeElementChanged: "haxactiveElementChanged"
        };
      }
      /**
       * double-check that we are set to inactivate click handlers
       * this is for when activated in a duplicate / adding new content state
       */

    }, {
      key: "haxactiveElementChanged",
      value: function haxactiveElementChanged(el, val) {
        // flag for HAX to not trigger active on changes
        var container = this.shadowRoot.querySelector(".tag-content");

        if (val) {
          container.setAttribute("contenteditable", true);
        } else {
          container.removeAttribute("contenteditable");
          this.tag = container.innerText;
        }

        return false;
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d4a2b2d08e0011ed99ce491205e67b1d || (_templateObject_d4a2b2d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"container\">\n        ", "\n        <div class=\"tag\" ?hidden=", ">\n          <span class=\"tag-content\"\n            ><simple-icon icon=\"check-circle\"></simple-icon>", "</span\n          >\n        </div>\n        <div class=\"pullout\"><slot></slot></div>\n      </div>\n    "])), this.icon ? (0, _index.html)(_templateObject2_d4a2b2d08e0011ed99ce491205e67b1d || (_templateObject2_d4a2b2d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n              <simple-icon\n                icon=\"", "\"\n                ?no-colorize=", "\n              ></simple-icon>\n            "])), this.icon, this.nocolourize) : (0, _index.html)(_templateObject3_d4a2b2d08e0011ed99ce491205e67b1d || (_templateObject3_d4a2b2d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral([""]))), !this.tag, this.tag);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject4_d4a2b2d08e0011ed99ce491205e67b1d || (_templateObject4_d4a2b2d08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .container {\n          background: #54539c;\n          background: -moz-linear-gradient(-45deg, #54539c 0%, #379ad2 99%);\n          background: -webkit-linear-gradient(-45deg, #54539c 0%, #379ad2 99%);\n          background: linear-gradient(135deg, #54539c 0%, #379ad2 99%);\n          filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#54539c', endColorstr='#379ad2',GradientType=1 );\n          padding: var(--activity-box-container-padding, 7px);\n          padding-top: var(--activity-box-container-padding-top, 14px);\n          margin-bottom: var(--activity-box-container-margin-bottom, 20px);\n          position: relative;\n          min-height: 60px;\n        }\n        simple-icon {\n          --simple-icon-height: 80px;\n          --simple-icon-width: 80px;\n          --simple-icon-color: white;\n          float: left;\n          position: absolute;\n          top: 0px;\n          left: var(--activity-box-icon-left, 0px);\n        }\n        .tag {\n          padding: var(--activity-box-content-padding, 0px 0px 0px 85px);\n        }\n        .tag > span {\n          background-color: #fff;\n          color: var(--elmsln-system-color-dark);\n          padding: 3px 10px;\n          line-height: 10px;\n          font-weight: var(--activity-box-tag-font-weight, bold);\n          font-size: var(--activity-box-tag-font-size, 16px);\n        }\n        .tag > span > simple-icon {\n          display: inline;\n          left: 0px !important;\n          --simple-icon-height: 23px;\n          --simple-icon-width: 23px;\n          --simple-icon-color: var(--elmsln-system-color-dark);\n          display: inline;\n          position: inherit;\n          float: none;\n          line-height: 17px;\n        }\n        .pullout {\n          padding-left: 48px;\n          color: white;\n          margin-top: 0;\n          font-family: var(--activity-box-content-font-family, inherit);\n          font-weight: 400;\n          margin-bottom: 10px;\n          font-size: 126%;\n          line-height: 28px;\n          padding: var(--activity-box-content-padding, 0px 0px 0px 85px);\n          margin-bottom: 13px !important;\n          max-width: 100%;\n        }\n        :host([icon=\"null\"]) .pullout,\n        :host([icon=\"null\"]) .tag,\n        :host([icon=\"\"]) .pullout,\n        :host([icon=\"\"]) .tag {\n          padding-left: 10px;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "activity-box";
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return new URL("./activity-box.haxProperties.json", meta.url).href;
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /* The icon to use for the activity box */
          icon: {
            type: String,
            reflect: true
          },

          /* Tag to be shown above the slotted content */
          tag: {
            type: String,
            reflect: true
          },

          /* Whether or not the icon should have color applied */
          nocolourize: {
            type: Boolean,
            reflect: false
          }
        };
      }
    }]);
    return ActivityBox;
  }(_index.LitElement);

  _exports.ActivityBox = ActivityBox;
  customElements.define(ActivityBox.tag, ActivityBox);
});