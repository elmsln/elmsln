define(["exports", "../../../lit/index.js", "../../mtz-marked-editor/mtz-marked-editor.js", "../../mtz-marked-editor/lib/mtz-marked-control-generic-wrap.js", "../../mtz-marked-editor/lib/mtz-marked-control-generic-line.js", "../../mtz-marked-editor/lib/mtz-marked-control-link.js", "../../simple-icon/simple-icon.js", "../../simple-icon/lib/simple-icons.js", "../../../@polymer/paper-input/paper-textarea.js", "../../../@polymer/paper-input/paper-input.js"], function (_exports, _index, _mtzMarkedEditor, _mtzMarkedControlGenericWrap, _mtzMarkedControlGenericLine, _mtzMarkedControlLink, _simpleIcon, _simpleIcons, _paperTextarea, _paperInput) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnMarkdownEditorEditor = void 0;

  var _templateObject_a1093870809211edaa2833647dc78c6c, _templateObject2_a1093870809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var LrnMarkdownEditorEditor = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(LrnMarkdownEditorEditor, _LitElement);

    var _super = _createSuper(LrnMarkdownEditorEditor);

    function LrnMarkdownEditorEditor() {
      babelHelpers.classCallCheck(this, LrnMarkdownEditorEditor);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrnMarkdownEditorEditor, [{
      key: "render",
      value:
      /**
       * LitElement render
       */
      function render() {
        return (0, _index.html)(_templateObject_a1093870809211edaa2833647dc78c6c || (_templateObject_a1093870809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <mtz-marked-editor id=\"markededitor\">\n        <div slot=\"controls\" class=\"mtz-controls\">\n          <mtz-marked-control-generic-wrap\n            icon=\"editor:format-bold\"\n            title=\"Bold\"\n            syntax-prefix=\"**\"\n            syntax-suffix=\"**\"\n            keys=\"ctrl+b\"\n          ></mtz-marked-control-generic-wrap>\n          <mtz-marked-control-generic-wrap\n            icon=\"editor:format-italic\"\n            title=\"Italic\"\n            syntax-prefix=\"_\"\n            syntax-suffix=\"_\"\n            keys=\"ctrl+i\"\n          ></mtz-marked-control-generic-wrap>\n          <mtz-marked-control-generic-line\n            icon=\"editor:format-size\"\n            title=\"Heading\"\n            syntax-prefix=\"# \"\n          ></mtz-marked-control-generic-line>\n          <mtz-marked-control-generic-line\n            icon=\"editor:format-list-numbered\"\n            title=\"Ordered List\"\n            syntax-prefix=\"1. \"\n          ></mtz-marked-control-generic-line>\n          <mtz-marked-control-generic-line\n            icon=\"editor:format-list-bulleted\"\n            title=\"Unordered List\"\n            syntax-prefix=\"- \"\n          ></mtz-marked-control-generic-line>\n          <mtz-marked-control-link\n            icon=\"editor:insert-link\"\n            title=\"Link\"\n          ></mtz-marked-control-link>\n        </div>\n        <paper-textarea\n          slot=\"textarea\"\n          label=\"Start typing...\"\n          value=\"", "\"\n          @value-changed=\"", "\"\n        ></paper-textarea>\n      </mtz-marked-editor>\n    "])), this.content, this._contentChanged);
      }
    }, {
      key: "_contentChanged",
      value: function _contentChanged(e) {
        this.content = e.detail.value;
      }
    }, {
      key: "updated",
      value:
      /**
       * LitElement properties changed
       */
      function updated(changedProperties) {
        var _this = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "content") {
            // notify
            _this.dispatchEvent(new CustomEvent("content-changed", {
              detail: {
                value: _this[propName]
              }
            }));
          }
        });
      }
    }, {
      key: "_changed",
      value: function _changed(e) {
        var content = this.shadowRoot.querySelector("#markededitor").getContent();
        this.content = content;
        this.dispatchEvent(new CustomEvent("content-updated", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            content: this.content
          }
        }));
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject2_a1093870809211edaa2833647dc78c6c || (_templateObject2_a1093870809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        .mtz-controls {\n          display: flex;\n          width: 100%;\n        }\n\n        .mtz-toolbar {\n          flex-grow: 5;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrn-markdown-editor-editor";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          content: {
            type: String
          }
        };
      }
    }]);
    return LrnMarkdownEditorEditor;
  }(_index.LitElement);

  _exports.LrnMarkdownEditorEditor = LrnMarkdownEditorEditor;
  customElements.define(LrnMarkdownEditorEditor.tag, LrnMarkdownEditorEditor);
});