define(["exports", "../../../lit/index.js", "./editable-table-behaviors.js", "../../rich-text-editor/rich-text-editor.js", "../../rich-text-editor/lib/toolbars/rich-text-editor-toolbar-mini.js", "../../simple-toolbar/simple-toolbar.js", "../../simple-tooltip/simple-tooltip.js", "../../simple-icon/lib/simple-icon-lite.js", "../../simple-icon/lib/simple-icons.js", "../../hax-iconset/lib/simple-hax-iconset.js", "./editable-table-editor-rowcol.js", "../../simple-toolbar/lib/simple-toolbar-button.js", "../../simple-toolbar/lib/simple-toolbar-button-group.js", "../../utils/utils.js"], function (_exports, _index, _editableTableBehaviors, _richTextEditor, _richTextEditorToolbarMini, _simpleToolbar, _simpleTooltip, _simpleIconLite, _simpleIcons, _simpleHaxIconset, _editableTableEditorRowcol, _simpleToolbarButton, _simpleToolbarButtonGroup, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EditableTableEdit = void 0;

  var _templateObject_9d6fe510809211edaa2833647dc78c6c, _templateObject2_9d6fe510809211edaa2833647dc78c6c, _templateObject3_9d6fe510809211edaa2833647dc78c6c, _templateObject4_9d6fe510809211edaa2833647dc78c6c, _templateObject5_9d6fe510809211edaa2833647dc78c6c, _templateObject6_9d6fe510809211edaa2833647dc78c6c, _templateObject7_9d6fe510809211edaa2833647dc78c6c, _templateObject8_9d6fe510809211edaa2833647dc78c6c, _templateObject9_9d6fe510809211edaa2833647dc78c6c, _templateObject10_9d6fe510809211edaa2833647dc78c6c, _templateObject11_9d6fe510809211edaa2833647dc78c6c, _templateObject12_9d6fe510809211edaa2833647dc78c6c, _templateObject13_9d6fe510809211edaa2833647dc78c6c, _templateObject14_9d6fe510809211edaa2833647dc78c6c, _templateObject15_9d6fe510809211edaa2833647dc78c6c, _templateObject16_9d6fe510809211edaa2833647dc78c6c, _templateObject17_9d6fe510809211edaa2833647dc78c6c, _templateObject18_9d6fe510809211edaa2833647dc78c6c, _templateObject19_9d6fe510809211edaa2833647dc78c6c, _templateObject20_9d6fe510809211edaa2833647dc78c6c, _templateObject21_9d6fe510809211edaa2833647dc78c6c, _templateObject22_9d6fe510809211edaa2833647dc78c6c, _templateObject23_9d6fe510809211edaa2833647dc78c6c, _templateObject24_9d6fe510809211edaa2833647dc78c6c, _templateObject25_9d6fe510809211edaa2833647dc78c6c, _templateObject26_9d6fe510809211edaa2833647dc78c6c, _templateObject27_9d6fe510809211edaa2833647dc78c6c, _templateObject28_9d6fe510809211edaa2833647dc78c6c, _templateObject29_9d6fe510809211edaa2833647dc78c6c, _templateObject30_9d6fe510809211edaa2833647dc78c6c, _templateObject31_9d6fe510809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  if (!Element.prototype.replaceWith) {
    Element.prototype.replaceWith = _utils.ReplaceWithPolyfill;
  }

  if (!CharacterData.prototype.replaceWith) {
    CharacterData.prototype.replaceWith = _utils.ReplaceWithPolyfill;
  }

  if (!DocumentType.prototype.replaceWith) {
    DocumentType.prototype.replaceWith = _utils.ReplaceWithPolyfill;
  }
  /**
   * `editable-table-edit`
   * An editor interface for tables that toggles between view mode.
   *
   * @customElement
   * @element editable-table-edit
   * @extends editBehaviors
   * @extends ResponsiveUtilityBehaviors
   * @extends editableTableStyles
   */


  var EditableTableEdit = /*#__PURE__*/function (_editBehaviors) {
    babelHelpers.inherits(EditableTableEdit, _editBehaviors);

    var _super = _createSuper(EditableTableEdit);

    function EditableTableEdit() {
      babelHelpers.classCallCheck(this, EditableTableEdit);
      return _super.call(this);
    }

    babelHelpers.createClass(EditableTableEdit, [{
      key: "textEditorToolbar",
      get: function get() {
        return (0, _index.html)(_templateObject_9d6fe510809211edaa2833647dc78c6c || (_templateObject_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <rich-text-editor-toolbar-mini\n        id=\"editable-table-toolbar\"\n        .config=\"", "\"\n        show=\"selection\"\n        part=\"text-editor-toolbar\"\n      ></rich-text-editor-toolbar-mini>\n    "])), this.config);
      }
    }, {
      key: "columnHeaderButton",
      get: function get() {
        return (0, _index.html)(_templateObject2_9d6fe510809211edaa2833647dc78c6c || (_templateObject2_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"columnHeader\"\n        icon=\"editable-table:column-headers\"\n        label=\"First row has column headers.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this._onTableSettingChange, this.columnHeader);
      }
    }, {
      key: "rowHeaderButton",
      get: function get() {
        return (0, _index.html)(_templateObject3_9d6fe510809211edaa2833647dc78c6c || (_templateObject3_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"rowHeader\"\n        icon=\"editable-table:row-headers\"\n        label=\"First column has row headers.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this._onTableSettingChange, this.rowHeader);
      }
    }, {
      key: "footerButton",
      get: function get() {
        return (0, _index.html)(_templateObject4_9d6fe510809211edaa2833647dc78c6c || (_templateObject4_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"footer\"\n        icon=\"editable-table:footer\"\n        label=\"Last row is a footer.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this._onTableSettingChange, this.footer);
      }
    }, {
      key: "headersFootersGroup",
      get: function get() {
        return (0, _index.html)(_templateObject5_9d6fe510809211edaa2833647dc78c6c || (_templateObject5_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"group\" part=\"simple-toolbar-section\">\n        <div class=\"label\" part=\"simple-toolbar-section-label\">\n          Headers and footers\n        </div>\n        ", " ", " ", "\n      </div>\n    "])), this.columnHeaderButton, this.rowHeaderButton, this.footerButton);
      }
    }, {
      key: "borderButton",
      get: function get() {
        return (0, _index.html)(_templateObject6_9d6fe510809211edaa2833647dc78c6c || (_templateObject6_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"bordered\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"image:grid-on\"\n        label=\"Borders.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideBordered, this.hideBordered, this._onTableSettingChange, this.bordered);
      }
    }, {
      key: "stripeButton",
      get: function get() {
        return (0, _index.html)(_templateObject7_9d6fe510809211edaa2833647dc78c6c || (_templateObject7_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"striped\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"editable-table:row-striped\"\n        label=\"Alternating rows.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n        radio\n      >\n      </simple-toolbar-button>\n    "])), this.hideStriped, this.hideStriped, this._onTableSettingChange, this.striped);
      }
    }, {
      key: "columnStripeButton",
      get: function get() {
        return (0, _index.html)(_templateObject8_9d6fe510809211edaa2833647dc78c6c || (_templateObject8_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"columnStriped\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"editable-table:col-striped\"\n        label=\"Alternating columns.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n        radio\n      >\n      </simple-toolbar-button>\n    "])), this.hideStriped, this.hideStriped, this._onTableSettingChange, this.columnStriped);
      }
    }, {
      key: "condenseButton",
      get: function get() {
        return (0, _index.html)(_templateObject9_9d6fe510809211edaa2833647dc78c6c || (_templateObject9_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"condensed\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"editable-table:row-condensed\"\n        label=\"Condensed rows.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideCondensed, this.hideCondensed, this._onTableSettingChange, this.condensed);
      }
    }, {
      key: "numericStylesButton",
      get: function get() {
        return (0, _index.html)(_templateObject10_9d6fe510809211edaa2833647dc78c6c || (_templateObject10_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"numericStyles\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"editable-table:numbers\"\n        label=\"Style numeric cells.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideNumericStyles, this.hideNumericStyles, this._onTableSettingChange, this.numericStyles);
      }
    }, {
      key: "responsiveButton",
      get: function get() {
        return (0, _index.html)(_templateObject11_9d6fe510809211edaa2833647dc78c6c || (_templateObject11_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"responsive\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"device:devices\"\n        label=\"Adjust width to screen size.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideResponsive, this.hideResponsive, this._onTableSettingChange, this.responsive);
      }
    }, {
      key: "displayGroup",
      get: function get() {
        return (0, _index.html)(_templateObject12_9d6fe510809211edaa2833647dc78c6c || (_templateObject12_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <div\n        class=\"group\"\n        ?hidden=\"", "\"\n        part=\"simple-toolbar-section\"\n      >\n        <div class=\"label\" part=\"simple-toolbar-section-label\">Display</div>\n        ", " ", "\n        <simple-toolbar-button-group>\n          ", " ", "\n        </simple-toolbar-button-group>\n        ", " ", "\n      </div>\n    "])), this.hideDisplay, this.borderButton, this.condenseButton, this.stripeButton, this.columnStripeButton, this.numericStylesButton, this.responsiveButton);
      }
    }, {
      key: "sortButton",
      get: function get() {
        return (0, _index.html)(_templateObject13_9d6fe510809211edaa2833647dc78c6c || (_templateObject13_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"sort\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        label=\"Column sorting (for tables with column headers).\"\n        icon=\"editable-table:sortable\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this._isSortDisabled(this.hideSort, this.columnHeader), this._isSortDisabled(this.hideSort, this.columnHeader), this._onTableSettingChange, this.sort);
      }
    }, {
      key: "filterButton",
      get: function get() {
        return (0, _index.html)(_templateObject14_9d6fe510809211edaa2833647dc78c6c || (_templateObject14_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"filter\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"editable-table:filter\"\n        label=\"Column filtering.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideFilter, this.hideFilter, this._onTableSettingChange, this.filter);
      }
    }, {
      key: "downloadButton",
      get: function get() {
        return (0, _index.html)(_templateObject15_9d6fe510809211edaa2833647dc78c6c || (_templateObject15_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"downloadable\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"file-download\"\n        label=\"Allow downloading as CSV.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hideDownloadable, this.hideDownloadable, this._onTableSettingChange, this.downloadable);
      }
    }, {
      key: "printButton",
      get: function get() {
        return (0, _index.html)(_templateObject16_9d6fe510809211edaa2833647dc78c6c || (_templateObject16_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar-button\n        id=\"printable\"\n        ?disabled=\"", "\"\n        ?hidden=\"", "\"\n        icon=\"print\"\n        label=\"Allow printing.\"\n        @button-toggled=\"", "\"\n        part=\"simple-toolbar-button\"\n        ?toggled=\"", "\"\n        toggles\n      >\n      </simple-toolbar-button>\n    "])), this.hidePrintable, this.hidePrintable, this._onTableSettingChange, this.printable);
      }
    }, {
      key: "dataGroup",
      get: function get() {
        return (0, _index.html)(_templateObject17_9d6fe510809211edaa2833647dc78c6c || (_templateObject17_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <div\n        class=\"group\"\n        ?hidden=\"", "\"\n        part=\"simple-toolbar-section\"\n      >\n        <div class=\"label\" part=\"simple-toolbar-section-label\">Data</div>\n        ", " ", " ", "\n        ", "\n      </div>\n    "])), this.hideSortFilter, this.sortButton, this.filterButton, this.downloadButton, this.printButton);
      }
    }, {
      key: "settingsToolbar",
      get: function get() {
        return (0, _index.html)(_templateObject18_9d6fe510809211edaa2833647dc78c6c || (_templateObject18_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <simple-toolbar part=\"simple-toolbar\">\n        ", " ", " ", "\n      </simple-toolbar>\n    "])), this.headersFootersGroup, this.displayGroup, this.dataGroup);
      }
    }, {
      key: "editableCaption",
      get: function get() {
        return (0, _index.html)(_templateObject19_9d6fe510809211edaa2833647dc78c6c || (_templateObject19_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <caption>\n        <p class=\"offscreen\">Edit Mode for</p>\n        <div class=\"caption-flex\">\n          <rich-text-editor\n            autofocus\n            @blur=\"", "\"\n            id=\"caption\"\n            label=\"Caption\"\n            placeholder=\"Name your table by adding a caption here.\"\n            rawhtml=\"", "\"\n            toolbar=\"editable-table-toolbar\"\n            type=\"rich-text-editor-toolbar-mini\"\n          >\n          </rich-text-editor>\n          <div class=\"icons\">\n            ", "\n            ", "\n          </div>\n        </div>\n      </caption>\n    "])), this._captionChanged, this.caption, !this.downloadable ? "" : (0, _index.html)(_templateObject20_9d6fe510809211edaa2833647dc78c6c || (_templateObject20_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <simple-icon-lite\n                    class=\"downloadable-icon\"\n                    icon=\"file-download\"\n                    aria-hidden=\"true\"\n                  >\n                  </simple-icon-lite>\n                "]))), !this.printable ? "" : (0, _index.html)(_templateObject21_9d6fe510809211edaa2833647dc78c6c || (_templateObject21_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n                  <simple-icon-lite\n                    calss=\"printable-icon\"\n                    icon=\"print\"\n                    aria-hidden=\"true\"\n                  >\n                  </simple-icon-lite>\n                "]))));
      }
    }, {
      key: "columnMenuButton",
      value: function columnMenuButton(colIndex) {
        return (0, _index.html)(_templateObject22_9d6fe510809211edaa2833647dc78c6c || (_templateObject22_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <editable-table-editor-rowcol\n        ?condensed=\"", "\"\n        index=\"", "\"\n        @rowcol-action=\"", "\"\n        @rowcol-menu-toggle=\"", "\"\n        part=\"rowcol-menu-button\"\n      >\n      </editable-table-editor-rowcol>\n    "])), this.condensed, colIndex, this._handleRowColumnMenu, this._handleMenuToggle);
      }
    }, {
      key: "editableColumn",
      value: function editableColumn(colIndex) {
        return (0, _index.html)(_templateObject23_9d6fe510809211edaa2833647dc78c6c || (_templateObject23_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <th\n        class=\"col-", "\"\n        scope=\"col\"\n        ?numeric=\"", "\"\n      >\n        ", "\n      </th>\n    "])), colIndex, this._isNumericColumn(colIndex), this.columnMenuButton(colIndex));
      }
    }, {
      key: "rowMenuButton",
      value: function rowMenuButton(rowIndex) {
        return (0, _index.html)(_templateObject24_9d6fe510809211edaa2833647dc78c6c || (_templateObject24_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <editable-table-editor-rowcol\n        class=\"cell\"\n        ?condensed=\"", "\"\n        index=\"", "\"\n        row\n        @rowcol-action=\"", "\"\n        part=\"rowcol-menu-button\"\n      >\n      </editable-table-editor-rowcol>\n    "])), this.condensed, rowIndex, this._handleRowColumnMenu);
      }
    }, {
      key: "editableRow",
      value: function editableRow(rowIndex, rowData) {
        var _this = this;

        return (0, _index.html)(_templateObject25_9d6fe510809211edaa2833647dc78c6c || (_templateObject25_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <tr\n        class=\"tr ", "\"\n      >\n        <th scope=\"row\">", "</th>\n        ", "\n      </tr>\n    "])), rowIndex == 0 && this.columnHeader ? "thead-tr" : rowIndex == this.data.length - 1 && this.footer ? "tfoot-tr" : "tbody-tr", this.rowMenuButton(rowIndex), (rowData || []).map(function (cellData, colIndex) {
          return _this.editableCell(rowIndex, colIndex, cellData);
        }));
      }
    }, {
      key: "cellEditor",
      value: function cellEditor(rowIndex, colIndex, contents) {
        var _this2 = this;

        return (0, _index.html)(_templateObject26_9d6fe510809211edaa2833647dc78c6c || (_templateObject26_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <rich-text-editor\n        autofocus\n        @blur=\"", "\"\n        class=\"cell\"\n        disable-mouseover\n        toolbar=\"editable-table-toolbar\"\n        id=\"cell-", "-", "\"\n        label=\"", "\"\n        rawhtml=\"", "\"\n        type=\"rich-text-editor-toolbar-mini\"\n        contenteditable=\"true\"\n        role=\"textbox\"\n      >\n      </rich-text-editor>\n    "])), function (e) {
          return _this2._onCellValueChange(e, rowIndex, colIndex);
        }, rowIndex, colIndex, "Cell ".concat(this._getLabel(colIndex, false)).concat(rowIndex), contents);
      }
    }, {
      key: "editableCell",
      value: function editableCell(rowIndex, colIndex, contents) {
        return (0, _index.html)(_templateObject27_9d6fe510809211edaa2833647dc78c6c || (_templateObject27_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <td\n        class=\"", " th-or-td\"\n        ?negative=\"", "\"\n        ?numeric=\"", "\"\n        @click=\"", "\"\n      >\n        ", "\n        <div id=\"icons\">\n          <simple-icon-lite\n            class=\"sortable-icon\"\n            icon=\"editable-table:sortable\"\n            aria-hidden=\"true\"\n          ></simple-icon-lite>\n          <simple-icon-lite\n            class=\"filter-icon\"\n            icon=\"editable-table:filter-off\"\n            aria-hidden=\"true\"\n          ></simple-icon-lite>\n        </div>\n      </td>\n    "])), colIndex === 0 && this.rowHeader || rowIndex == 0 && this.columnHeader ? "th" : "td", this._isNegative(contents), this._isNumericColumn(colIndex), this._onCellClick, this.cellEditor(rowIndex, colIndex, contents));
      }
    }, {
      key: "editableColumns",
      get: function get() {
        var _this3 = this;

        return (0, _index.html)(_templateObject28_9d6fe510809211edaa2833647dc78c6c || (_templateObject28_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <thead>\n        <tr class=\"tr\">\n          <th scope=\"row\">\n            <span class=\"offscreen\">Insert/Delete Controls</span>\n          </th>\n          ", "\n        </tr>\n      </thead>\n    "])), (this.data[0] || []).map(function (cellData, th) {
          return _this3.editableColumn(th);
        }));
      }
    }, {
      key: "editableRows",
      get: function get() {
        var _this4 = this;

        return (0, _index.html)(_templateObject29_9d6fe510809211edaa2833647dc78c6c || (_templateObject29_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <tbody id=\"tbody\" class=\"tbody\">\n        ", "\n      </tbody>\n    "])), this.data.map(function (row, tr) {
          return _this4.editableRow(tr, row);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject30_9d6fe510809211edaa2833647dc78c6c || (_templateObject30_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      ", "\n      <p class=\"offscreen\">Table Editor</p>\n      <table\n        id=\"table-editmode\"\n        ?bordered=\"", "\"\n        ?column-header=\"", "\"\n        ?column-striped=\"", "\"\n        ?condensed=\"", "\"\n        ?downloadable=\"", "\"\n        ?filter=\"", "\"\n        ?footer=\"", "\"\n        ?numeric-styles=\"", "\"\n        ?printable=\"", "\"\n        ?responsive=\"", "\"\n        ?row-header=\"", "\"\n        ?sort=\"", "\"\n        ?striped=\"", "\"\n        part=\"table\"\n      >\n        ", " ", " ", "\n      </table>\n      ", "\n    "])), this.textEditorToolbar, this.bordered, this.columnHeader, this.columnStriped, this.condensed, this.downloadable, this.filter, this.footer, this.numericStyles, this.printable, this.responsive, this.rowHeader, this.sort, this.striped, this.editableCaption, this.editableColumns, this.editableRows, this.settingsToolbar);
      }
    }, {
      key: "hideSortFilter",
      get:
      /**
       * hides data sorting and filtering feature set
       *
       * @readonly
       * @memberof EditableTableEdit
       */
      function get() {
        return this.hideSort && this.hideFilter;
      }
      /**
       * hides display feature set
       *
       * @readonly
       * @memberof EditableTableEdit
       */

    }, {
      key: "hideDisplay",
      get: function get() {
        return this.hideBordered && this.hideCondensed && this.hideStriped && this.hideNumericStyles && this.hideResponsive;
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this5 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEdit.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEdit.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "disabled" || propName === "hidden") _this5.disableEditing();
        });
      }
    }, {
      key: "disableEditing",
      value: function disableEditing() {
        this.shadowRoot.querySelectorAll("rich-text-editor-toolbar-mini").forEach(function (editor) {
          editor.disableEditing();
        });
        /**
         * Fires this editor is disabled
         * @event editing-disabled
         */

        this.dispatchEvent(new CustomEvent("editing-disabled", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this
          }
        }));
      }
      /**
       * Tests for whether or not to disable sort feature.
       * @param {boolean} hideSort if sort feature be hidden
       * @param {boolean} columnHeader if table has column headers
       */

    }, {
      key: "_isSortDisabled",
      value: function _isSortDisabled(hideSort, columnHeader) {
        return hideSort || !columnHeader;
      }
      /**
       * Get row or column label
       * @param {number} index of row or column
       * @param  {boolean} whenther it's a row
       * @returns {string} a row number or a column letter
       */

    }, {
      key: "_getLabel",
      value: function _getLabel(index) {
        var numerals = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),
            results = this._getLetter(index).split("-").reverse(),
            label = "";

        for (var i = 0; i < results.length; i++) {
          if (results[i] !== "") label += numerals[results[i]];
        }

        return label;
      }
      /**
       * Converts index to a letter.
       * @param {number} index of row or column
       * @returns {string} a column letter
       */

    }, {
      key: "_getLetter",
      value: function _getLetter(index) {
        var place = Math.floor(index / 26),
            multiplier = 26 * place,
            remainder = index - multiplier,
            letters = "";
        letters += remainder + "-";

        if (place > 0 && place < 26) {
          letters += place - 1 + "-";
        } else if (place >= 26) {
          letters += this._getLetter(place - 1);
        }

        return letters;
      }
      /**
       * Delete a column at given index
       * @param {number} index index of column
       */

    }, {
      key: "deleteColumn",
      value: function deleteColumn(index) {
        var temp = babelHelpers.toConsumableArray(this.data);

        for (var i = 0; i < temp.length; i++) {
          temp[i].splice(index, 1);
        }

        this.data = temp;

        this._handleChange("data");
        /**
         * Fires when column is deleted
         * @event column-deleted
         */


        this.dispatchEvent(new CustomEvent("column-deleted", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            data: this.data,
            colNum: index
          }
        }));
      }
      /**
       * Delete a row at given index
       * @param {number} index index of row
       */

    }, {
      key: "deleteRow",
      value: function deleteRow(index) {
        var temp = babelHelpers.toConsumableArray(this.data);
        temp.splice(index, 1);
        this.data = temp;

        this._handleChange("data");
        /**
         * Fires when row is deleted
         * @event row-deleted
         */


        this.dispatchEvent(new CustomEvent("row-deleted", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            data: this.data,
            rowNum: index
          }
        }));
      }
      /**
       * Insert a column at given index
       * @param {number} index index of column
       */

    }, {
      key: "insertColumn",
      value: function insertColumn(index) {
        var temp = babelHelpers.toConsumableArray(this.data);

        for (var i = 0; i < temp.length; i++) {
          temp[i].splice(index, 0, " ");
        }

        this.data = temp;

        this._handleChange("data");
        /**
         * Fires when column is inserted
         * @event column-inserted
         */


        this.dispatchEvent(new CustomEvent("column-inserted", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            data: this.data,
            colNum: index
          }
        }));
      }
      /**
       * Insert a row at given index
       * @param {number} index index of row
       */

    }, {
      key: "insertRow",
      value: function insertRow(index) {
        var temp = babelHelpers.toConsumableArray(this.data),
            temp2 = new Array();

        for (var i = 0; i < temp[0].length; i++) {
          temp2.push(" ");
        }

        temp.splice(index + 1, 0, temp2);
        this.data = temp;

        this._handleChange("data");
        /**
         * Fires cwhen row is inserted
         * @event row-inserted
         */


        this.dispatchEvent(new CustomEvent("row-inserted", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            data: this.data,
            rowNum: index
          }
        }));
      }
    }, {
      key: "changeCell",
      value: function changeCell(row, col, val) {
        var temp = this.data.slice();
        temp[row][col] = val;
        this.data = [];
        this.data = temp;

        this._handleChange("data");
        /**
         * Fires when cell value is changed
         * @event cell-changed
         */


        this.dispatchEvent(new CustomEvent("cell-changed", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            data: this.data,
            rowNum: row,
            colNum: col
          }
        }));
      }
      /**
       * Sets focus on cell's textarea if cell is clicked
       * @param {event} e event
       */

    }, {
      key: "_onCellClick",
      value: function _onCellClick(e) {
        if (e.model && e.model.root && e.model.root.nodeList[0]) {
          e.model.root.nodeList[0].focus();
        }
      }
      /**
       * Updates data when cell value changes
       * @param {event} e event
       */

    }, {
      key: "_onCellValueChange",
      value: function _onCellValueChange(e, row, col) {
        var val = !this.shadowRoot || !this.shadowRoot.querySelector("#cell-".concat(row, "-").concat(col)) ? undefined : this.shadowRoot.querySelector("#cell-".concat(row, "-").concat(col)).innerHTML;
        this.changeCell(row, col, val);
      }
      /**
       * Handles when caption paper-input changed
       */

    }, {
      key: "_captionChanged",
      value: function _captionChanged() {
        var val = !this.shadowRoot || !this.shadowRoot.querySelector("#caption") ? undefined : this.shadowRoot.querySelector("#caption").innerHTML;
        this.caption = val;

        this._handleChange("caption");
        /**
         * Fires caption is changed
         * @event caption-changed
         */


        this.dispatchEvent(new CustomEvent("caption-changed", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            editor: this,
            caption: this.caption
          }
        }));
      }
      /**
       * Updates table properties when setting changes
       * @param {event} e event
       */

    }, {
      key: "_onTableSettingChange",
      value: function _onTableSettingChange(e) {
        this[e.detail.id] = e.detail.toggled;

        this._handleChange(e.detail.id);
      }
      /**
       * Makes sure there is always on cell to work from
       */

    }, {
      key: "_dataChanged",
      value: function _dataChanged(data, oldData) {
        if (data && data.length < 1 || data[0].length < 1) {
          this.data = [["", "", ""], ["", "", ""], ["", "", ""]];
        }

        this._handleChange("data");
      }
    }, {
      key: "_handleChange",
      value: function _handleChange(prop) {
        /**
         * Fires this editor is disabled
         * @event change
         */
        this.dispatchEvent(new CustomEvent("change", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: prop
        }));
      }
      /**
       * Handles row/column menu actions
       * @param {event} e event
       */

    }, {
      key: "_handleRowColumnMenu",
      value: function _handleRowColumnMenu(e) {
        if (e.detail.insert && e.detail.row) {
          this.insertRow(e.detail.index);
        } else if (e.detail.insert && !e.detail.row) {
          this.insertColumn(e.detail.index);
        } else if (!e.detail.insert && e.detail.row) {
          this.deleteRow(e.detail.index);
        } else {
          this.deleteColumn(e.detail.index);
        }
      }
    }, {
      key: "_handleMenuToggle",
      value: function _handleMenuToggle(e) {
        if (!e.detail) return;
        e.detail.closest("thead,tbody").setAttribute("data-expanded", e.detail.expanded);
        e.detail.closest("tr").setAttribute("data-expanded", e.detail.expanded);
        e.detail.closest("th").setAttribute("data-expanded", e.detail.expanded);
      }
      /**
       * Gets row data for a given row index
       * @param {number} index index of row
       * @param {array} data table data
       * @returns {array} row data
       */

    }, {
      key: "_getCurrentRow",
      value: function _getCurrentRow(index, data) {
        var row = null;

        if (data !== undefined && data !== null && data[index] !== undefined && data[index] !== null) {
          row = data[index];
        }

        return row;
      }
      /**
       * Tests for first row of data. Workaround to restamp column headers.
       * @param {number} index index of row
       */

    }, {
      key: "_isFirstRow",
      value: function _isFirstRow(index) {
        return index === 0;
      }
    }], [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEdit), "styles", this) || []), babelHelpers.toConsumableArray(_editableTableBehaviors.editableTableStyles), [(0, _index.css)(_templateObject31_9d6fe510809211edaa2833647dc78c6c || (_templateObject31_9d6fe510809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          --paper-listbox-background-color: var(\n            --editable-table-rowcol-bg-color\n          );\n        }\n        :host([disabled]) {\n          display: none;\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n        .filter-icon,\n        .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) tbody .tr:first-child .sortable-icon,\n        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        table {\n          min-width: calc(100% - 2.3px);\n          width: unset;\n          height: 1px;\n        }\n        caption {\n          width: 100%;\n          padding: 0;\n          margin: 0;\n          color: var(\n            --editable-table-caption-color,\n            var(--editable-table-color, #222)\n          );\n        }\n        table *[data-expanded=\"true\"] {\n          z-index: 2;\n        }\n        rich-text-editor:not([contenteditable]) {\n          z-index: 1 !important;\n        }\n        caption,\n        .th-or-td {\n          border: 1px solid #ddd;\n        }\n        label,\n        .label {\n          color: var(--editable-table-secondary-text-color, #444);\n          font-size: var(--editable-table-secondary-font-size, 12px);\n          font-family: var(\n            --editable-table-secondary-font-family,\n            \"Roboto\",\n            \"Noto\",\n            sans-serif\n          );\n          margin-right: 0.5em;\n        }\n        simple-toolbar {\n          width: 100%;\n          --simple-toolbar-button-bg: var(--editable-table-bg-color, #fff);\n          --simple-toolbar-button-toggled-bg: var(\n            --editable-table-stripe-bg-color,\n            #f0f0f0\n          );\n          --simple-toolbar-button-hover-bg: var(\n            --editable-table-bg-color,\n            #fff\n          );\n          --simple-toolbar-button-border-color: var(\n            --editable-table-border-color,\n            #999\n          );\n          --simple-toolbar-button-toggled-border-color: var(\n            --editable-table-color,\n            #222\n          );\n          --simple-toolbar-button-hover-border-color: unset;\n        }\n        simple-toolbar::part(buttons) {\n          align-items: stretch;\n          justify-content: space-between;\n        }\n        .group {\n          padding: 0;\n          margin: 0;\n          transition: all 2s;\n          color: var(\n            --editable-table-caption-color,\n            var(--editable-table-color, #222)\n          );\n        }\n        .group:not([hidden]) {\n          display: flex;\n          flex: 0 0 auto;\n          justify-content: space-around;\n          align-items: center;\n          margin: 0 2.5px;\n        }\n        caption {\n          position: relative;\n        }\n        caption > * {\n          margin: 0 2.5px;\n        }\n        #caption {\n          flex: 1 1 auto;\n        }\n        .caption-flex {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        }\n        .icons {\n          flex: 0 0 auto;\n          opacity: 0.25;\n        }\n        th {\n          padding: 0;\n          border-width: var(--editable-table-border-width, 1px);\n          border-style: var(--editable-table-border-style, solid);\n          border-color: var(--editable-table-border-color, #999);\n        }\n        td {\n          margin: 0;\n          padding: 0;\n          position: relative;\n        }\n        rich-text-editor-toolbar-mini {\n          position: absolute;\n          min-width: 200px;\n          height: 0;\n        }\n        rich-text-editor {\n          margin-bottom: 1px;\n          padding: var(--editable-table-cell-vertical-padding, 10px)\n            var(--editable-table-cell-horizontal-padding, 6px);\n          border: none !important;\n          margin-right: 24px;\n          --rich-text-editor-min-height: 12px;\n        }\n        rich-text-editor[contenteditable=\"true\"].heightmax {\n          overflow-y: auto;\n        }\n        rich-text-editor:hover,\n        rich-text-editor:focus,\n        rich-text-editor:focus-within {\n          border: none !important;\n          outline: none !important;\n        }\n        td #icons {\n          position: absolute;\n          right: 0;\n          top: calc(50% - 12px);\n          width: 24px;\n        }\n        td simple-icon-lite {\n          width: 24px;\n        }\n        td:focus-within {\n          outline: 1px dotted currentColor;\n        }\n        .th:first-child {\n          width: 96px;\n        }\n        :host([responsive]) thead th:nth-of-type(3),\n        :host([responsive]) .tr td:nth-of-type(2) {\n          border-right-width: calc(var(--editable-table-border-width) + 5px);\n          border-right-style: double;\n        }\n        :host(:hover),\n        *:hover {\n          z-index: 3;\n        }\n        :host(:focus-within),\n        *:focus-within {\n          z-index: 4;\n        }\n        editable-table-editor-rowcol:hover,\n        editable-table-editor-rowcol:focus-within {\n          z-index: 10000000;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "editable-table-edit";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEdit), "properties", this));
      }
    }]);
    return EditableTableEdit;
  }((0, _editableTableBehaviors.editBehaviors)(_index.LitElement));

  _exports.EditableTableEdit = EditableTableEdit;
  customElements.define(EditableTableEdit.tag, EditableTableEdit);
});