define(["exports", "../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.TheyLive = void 0;

  var _templateObject_61b38950809211edaa2833647dc78c6c, _templateObject2_61b38950809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `they-live`
   * @element they-live
   * `To demonstrate the hidden reality behind the component`
   *
   * @microcopy - language worth noting:
   *  -
   *
  
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var TheyLive = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(TheyLive, _LitElement);

    var _super = _createSuper(TheyLive);

    // life cycle
    function TheyLive() {
      babelHelpers.classCallCheck(this, TheyLive);
      return _super.call(this); // put default values here
    }
    /**
     * life cycle, element is afixed to the DOM
     */


    babelHelpers.createClass(TheyLive, [{
      key: "render",
      value: // render function
      function render() {
        return (0, _index.html)(_templateObject_61b38950809211edaa2833647dc78c6c || (_templateObject_61b38950809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral([" <div class=\"content\">\n      <div class=\"truth\">", "</div>\n      <slot></slot>\n    </div>"])), this.truth);
      } // properties available to the custom element for data binding

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(TheyLive.prototype), "connectedCallback", this).call(this);
      }
      /**
       * life cycle, element removed from DOM
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(TheyLive.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * runs on first go
       */

    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        this.setAttribute("tabindex", "0");
        changedProperties.forEach(function (oldValue, propName) {});
      }
      /**
       * updated / notice property changes
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        changedProperties.forEach(function (oldValue, propName) {});
      }
    }], [{
      key: "styles",
      get:
      /**
       * Register CSS styles
       */
      function get() {
        return [(0, _index.css)(_templateObject2_61b38950809211edaa2833647dc78c6c || (_templateObject2_61b38950809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n        }\n        .truth {\n          font-size: 5.5vw;\n          word-break: break-all;\n          line-height: 5.5vw;\n          position: absolute;\n          margin: 0 auto;\n          text-align: center;\n          display: flex;\n          visibility: hidden;\n          opacity: 0;\n          transition: 0.3s all linear;\n          z-index: 2;\n          text-align: center;\n        }\n        :host(:focus),\n        :host(:hover) {\n          background-color: grey;\n        }\n        :host(:focus) .content ::slotted(*),\n        :host(:hover) .content ::slotted(*) {\n          visibility: hidden;\n        }\n        :host(:focus) .truth,\n        :host(:hover) .truth {\n          visibility: visible;\n          opacity: 1;\n        }\n      "])))];
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(TheyLive), "properties", this)), {}, {
          truth: {
            type: String
          }
        });
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "they-live";
      }
    }]);
    return TheyLive;
  }(_index.LitElement);

  _exports.TheyLive = TheyLive;
  customElements.define("they-live", TheyLive);
});