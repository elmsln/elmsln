define(["exports", "../../../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RandomWord = void 0;

  var _templateObject_a7d3ce90809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var RandomWord = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(RandomWord, _LitElement);

    var _super = _createSuper(RandomWord);

    function RandomWord() {
      var _this;

      babelHelpers.classCallCheck(this, RandomWord);
      _this = _super.call(this);
      _this.key = null;
      _this.phrases = {};
      _this.word = null;
      return _this;
    }

    babelHelpers.createClass(RandomWord, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (["key", "phrases"].includes(propName)) {
            _this2.getNewWord();
          } // wipe slot and rebuild


          if (propName === "word" && _this2[propName]) {
            _this2.innerHTML = "";
            _this2.innerHTML = _this2.word; // inform others if they want to tap into events

            _this2.dispatchEvent(new CustomEvent("word-changed", {
              detail: _this2.word
            }));
          }
        });
      }
    }, {
      key: "getNewWord",
      value: function getNewWord() {
        if (this.phrases && this.key && this.phrases[this.key]) {
          this.word = this.phrases[this.key][Math.floor(Math.random() * this.phrases[this.key].length)];
        }
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_a7d3ce90809211edaa2833647dc78c6c || (_templateObject_a7d3ce90809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<slot></slot>"])));
      }
    }], [{
      key: "tag",
      get: function get() {
        return "random-word";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          key: {
            type: String
          },
          phrases: {
            type: Object
          },
          word: {
            type: String
          }
        };
      }
    }]);
    return RandomWord;
  }(_index.LitElement);

  _exports.RandomWord = RandomWord;
  customElements.define(RandomWord.tag, RandomWord);
});