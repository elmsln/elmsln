define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.PortalLauncher = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `portal-launcher`
   * @element portal-launcher
   * `silly thing to play with portal tag and progressive enhancement`
   *
   * @microcopy - language worth noting:
   *  -
   *
  
   * @demo demo/index.html
   */
  var PortalLauncher = /*#__PURE__*/function (_HTMLElement) {
    babelHelpers.inherits(PortalLauncher, _HTMLElement);

    var _super = _createSuper(PortalLauncher);

    /**
     * life cycle
     */
    function PortalLauncher() {
      var _this;

      var delayRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      babelHelpers.classCallCheck(this, PortalLauncher);
      _this = _super.call(this); // set tag for later use

      _this.tag = PortalLauncher.tag; // ensure there's at least 1 link in here somewhere...

      if (_this.querySelectorAll("a")) {
        _this.querySelectorAll("a").forEach(function (a) {
          a.addEventListener("click", _this.click.bind(babelHelpers.assertThisInitialized(_this)));
        });
      }

      return _this;
    }

    babelHelpers.createClass(PortalLauncher, [{
      key: "normalizeEventPath",
      value: function normalizeEventPath(e) {
        if (e.composed && e.composedPath) {
          return e.composedPath();
        } else if (e.path) {
          return e.path;
        } else if (e.originalTarget) {
          return [e.originalTarget];
        } else {
          return [e.target];
        }
      }
      /**
       * Basic feature detecting event handler
       */

    }, {
      key: "click",
      value: function click(e) {
        var target = e.target;
        var eventPath = this.normalizeEventPath(e); // support walking the path in order to find the link clicked

        if (target.tagName !== "A") {
          eventPath.forEach(function (item) {
            if (item.tagName === "A") {
              target = item;
            }
          });
        }

        if (target && target.getAttribute("href") != null) {
          // progressive enhancement, if this class exists, can the link click
          if ("HTMLPortalElement" in window) {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation(); // Adding some styles with transitions

            var style = document.createElement("style");
            var initialScale = 0.2;
            style.innerHTML = "\n          portal {\n            position:fixed;\n            width: 100%;\n            height: 100%;\n            opacity: 0;\n            box-shadow: 0 0 20px 10px #999;\n            transform: scale(".concat(initialScale, ");\n            bottom: calc(20px + 50% * ").concat(initialScale, " - 50%);\n            right: calc(20px + 50% * ").concat(initialScale, " - 50%);\n            z-index: 10000;\n          }\n          .portal-transition {\n            transition:\n              transform 0.4s,\n              bottom 0.7s,\n              left 0.7s,\n              opacity 1.0s;\n          }\n          @media (prefers-reduced-motion: reduce) {\n            .portal-transition {\n              transition: all 0.001s;\n            }\n          }\n          .portal-reveal {\n            transform: scale(1.0);\n            bottom: 0px;\n            left: 0px;\n          }\n          .fade-in {\n            opacity: 1.0;\n          }\n        ");
            var portal = document.createElement("portal"); // Let's navigate into the WICG Portals spec page

            portal.src = target.getAttribute("href"); // Add a class that defines the transition. Consider using
            // `prefers-reduced-motion` media query to control the animation.
            // https://developers.google.com/web/updates/2019/03/prefers-reduced-motion

            portal.classList.add("portal-transition");
            portal.addEventListener("transitionend", function (evt) {
              if (evt.propertyName == "bottom") {
                // Activate the portal once the transition has completed
                portal.activate();
              }
            });
            document.body.appendChild(style, portal); // Waiting for the page to load.
            // using setTimeout is a suboptimal way and it's best to fade-in
            // when receiving a load complete message from the portal via postMessage

            setTimeout(function (_) {
              return portal.classList.add("fade-in");
            }, 250);
            setTimeout(function (_) {
              return portal.classList.add("portal-reveal");
            }, 500);
          }
        }
      }
    }], [{
      key: "tag",
      get:
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      function get() {
        return "portal-launcher";
      }
    }]);
    return PortalLauncher;
  }( /*#__PURE__*/babelHelpers.wrapNativeSuper(HTMLElement));

  _exports.PortalLauncher = PortalLauncher;
  customElements.define(PortalLauncher.tag, PortalLauncher);
});