define(["exports", "../../lit/index.js"], function (_exports, _index) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.BR = void 0;

  var _templateObject_634c51c0809211edaa2833647dc78c6c, _templateObject2_634c51c0809211edaa2833647dc78c6c;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `b-r`
   * `Creates break statements to show conditional rendering`
   * @demo demo/index.html
   * @element b-r
   */
  var BR = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(BR, _LitElement);

    var _super = _createSuper(BR);

    /**
     * HTMLElement
     */
    function BR() {
      var _this;

      babelHelpers.classCallCheck(this, BR);
      _this = _super.call(this);
      _this.amount = 0;
      return _this;
    }
    /**
     * LitElement render callback
     */


    babelHelpers.createClass(BR, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_634c51c0809211edaa2833647dc78c6c || (_templateObject_634c51c0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["", "</div>"])), this.renderBR(this.amount));
      }
    }, {
      key: "renderBR",
      value: function renderBR(amount) {
        var count = 0;
        var content = [];

        if (amount === 0) {
          amount = window.innerHeight / 21;
        }

        while (count < amount) {
          content.push((0, _index.html)(_templateObject2_634c51c0809211edaa2833647dc78c6c || (_templateObject2_634c51c0809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["<br />"]))));
          count++;
        }

        return content;
      }
      /**
       * Convention we use
       */

    }], [{
      key: "properties",
      get: function get() {
        return {
          amount: {
            type: Number
          }
        };
      }
    }, {
      key: "tag",
      get: function get() {
        return "b-r";
      }
    }]);
    return BR;
  }(_index.LitElement);

  _exports.BR = BR;
  customElements.define(BR.tag, BR);
});