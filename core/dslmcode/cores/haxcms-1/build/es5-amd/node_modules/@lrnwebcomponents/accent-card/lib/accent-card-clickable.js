define(["exports", "../../../lit/index.js", "../../simple-colors/simple-colors.js", "../accent-card.js"], function (_exports, _index, _simpleColors, _accentCard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AccentCardClickable = void 0;

  var _templateObject_77598750809211edaa2833647dc78c6c, _templateObject2_77598750809211edaa2833647dc78c6c;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `accent-card-clickable`
   * @element accent-card-clickable
   * a card with optional accent stylings.
   * 
  ### Styling
  See `<accent-card-clickable>`
   *
   * @demo ./demo/index.html demo
   */
  var AccentCardClickable = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(AccentCardClickable, _LitElement);

    var _super = _createSuper(AccentCardClickable);

    function AccentCardClickable() {
      var _this;

      babelHelpers.classCallCheck(this, AccentCardClickable);
      _this = _super.call(this);
      _this.accentBackground = false;
      _this.accentHeading = false;
      _this.flat = false;
      _this.horizontal = false;
      _this.noBorder = false;
      return _this;
    } // properties available to custom element for data binding


    babelHelpers.createClass(AccentCardClickable, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_77598750809211edaa2833647dc78c6c || (_templateObject_77598750809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n      <accent-card\n        accent-color=\"", "\"\n        ?accent-background=\"", "\"\n        ?accent-heading=\"", "\"\n        ?flat=\"", "\"\n        ?horizontal=\"", "\"\n        ?no-border=\"", "\"\n        image-align=\"", "\"\n        image-src=\"", "\"\n        image-valign=\"", "\"\n      >\n        <slot name=\"heading\" slot=\"heading\"></slot>\n        <slot name=\"corner\" slot=\"corner\"></slot>\n        <slot name=\"subheading\" slot=\"subheading\"></slot>\n        <slot name=\"content\" slot=\"content\"></slot>\n        <slot name=\"footer\" slot=\"footer\"></slot>\n      </accent-card>\n    "])), this.accentColor, this.accentBackground, this.accentHeading, this.flat, this.horizontal, this.noBorder, this.imageAlign, this.imageSrc, this.imageValign);
      } // haxProperty definition

    }], [{
      key: "tag",
      get:
      /**
       * Store tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      function get() {
        return "accent-card-clickable";
      } // render function

    }, {
      key: "styles",
      get: function get() {
        return [(0, _index.css)(_templateObject2_77598750809211edaa2833647dc78c6c || (_templateObject2_77598750809211edaa2833647dc78c6c = babelHelpers.taggedTemplateLiteral(["\n        :host,\n        accent-card {\n          display: flex;\n          align-items: stretch;\n          justify-content: stretch;\n          flex-direction: column;\n        }\n        accent-card {\n          position: relative;\n          flex: 1 1 auto;\n        }\n        accent-card:focus-within,\n        accent-card:hover {\n          outline: 1px solid\n            var(\n              --accent-card-border-color,\n              --simple-colors-default-theme-accent-6,\n              #ddd\n            );\n        }\n        ::slotted(*:not([data-clickable]:first-of-type)) {\n          z-index: 2;\n          position: relative;\n        }\n        ::slotted([data-clickable]:first-of-type) {\n          z-index: 1;\n        }\n        ::slotted([data-clickable]:first-of-type):after {\n          content: \" \";\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n        }\n      "])))];
      }
    }, {
      key: "haxProperties",
      get: function get() {
        var haxProperties = _accentCard.AccentCard.haxProperties;
        haxProperties;
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, _simpleColors.SimpleColors.properties), _accentCard.AccentCard.properties);
      }
    }]);
    return AccentCardClickable;
  }(_index.LitElement);

  _exports.AccentCardClickable = AccentCardClickable;
  customElements.define(AccentCardClickable.tag, AccentCardClickable);
});