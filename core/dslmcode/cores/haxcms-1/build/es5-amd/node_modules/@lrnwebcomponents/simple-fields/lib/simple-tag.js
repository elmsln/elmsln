define(["exports", "../../../lit/index.js", "../../simple-colors/simple-colors.js", "./simple-tag-lite.js", "./simple-fields-ui.js"], function (_exports, _index, _simpleColors, _simpleTagLite, _simpleFieldsUi) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleTag = void 0;

  var _templateObject_dddb14a08e0011ed99ce491205e67b1d;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var SimpleTag = /*#__PURE__*/function (_SimpleTagLiteSuper) {
    babelHelpers.inherits(SimpleTag, _SimpleTagLiteSuper);

    var _super = _createSuper(SimpleTag);

    function SimpleTag() {
      babelHelpers.classCallCheck(this, SimpleTag);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(SimpleTag, null, [{
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SimpleTag), "styles", this)), [_simpleFieldsUi.SimpleFieldsButtonStyles, _simpleFieldsUi.SimpleFieldsTooltipStyles, (0, _index.css)(_templateObject_dddb14a08e0011ed99ce491205e67b1d || (_templateObject_dddb14a08e0011ed99ce491205e67b1d = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          --simple-fields-button-color: var(\n            --simple-colors-default-theme-accent-12,\n            #222222\n          );\n          --simple-fields-fieldset-border-color: var(\n            --simple-colors-default-theme-accent-3,\n            #eeeeee\n          );\n          --simple-fields-button-background-color: var(\n            --simple-colors-default-theme-accent-3,\n            #eeeeee\n          );\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "simple-tag";
      }
    }]);
    return SimpleTag;
  }((0, _simpleTagLite.SimpleTagLiteSuper)(_simpleColors.SimpleColors));

  _exports.SimpleTag = SimpleTag;
  customElements.define(SimpleTag.tag, SimpleTag);
});