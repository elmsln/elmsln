import{deprecate as t}from"../utils/deprecate.js";import i from"../utils/is-array.js";import{createLocal as e}from"../create/local.js";import{createInvalid as r}from"../create/valid.js";export var prototypeMin=t("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=e.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:r()}));export var prototypeMax=t("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=e.apply(null,arguments);return this.isValid()&&t.isValid()?t>this?this:t:r()}));function pickBy(t,r){var n,s;if(1===r.length&&i(r[0])&&(r=r[0]),!r.length)return e();for(n=r[0],s=1;s<r.length;++s)r[s].isValid()&&!r[s][t](n)||(n=r[s]);return n}export function min(){return pickBy("isBefore",[].slice.call(arguments,0))}export function max(){return pickBy("isAfter",[].slice.call(arguments,0))}