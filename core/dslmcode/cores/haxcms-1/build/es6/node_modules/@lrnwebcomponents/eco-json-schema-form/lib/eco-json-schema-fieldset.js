import{html as e,PolymerElement as o}from"../../../@polymer/polymer/polymer-element.js";import{AppLocalizeBehavior as t}from"../../../@polymer/app-localize-behavior/app-localize-behavior.js";import{mixinBehaviors as s}from"../../../@polymer/polymer/lib/legacy/class.js";import"../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js";class EcoJsonSchemaFieldset extends(s([t],o)){static get tag(){return"eco-json-schema-fieldset"}constructor(){super()}static get template(){return e`
      <style include="iron-flex iron-flex-alignment">
        :host {
          color: var(--eco-json-form-color);
          background-color: var(--eco-json-form-bg);
          font-family: var(--eco-json-form-font-family);
          margin-bottom: 15px;
        }
        :host([hidden]) {
          display: none;
        }
        :host fieldset {
          border-radius: var(--eco-json-form-border-radius);
          border-style: solid;
          border-width: 1px;
          border-color: var(--eco-json-form-faded-color);
          transition: all 0.5s;
        }
        :host legend {
          transition: all 0.5s;
          color: var(--eco-json-form-faded-color);
        }
        :host fieldset:focus #legend,
        :host fieldset:focus-within #legend {
          color: var(--eco-json-form-active-color);
        }
        :host eco-json-schema-object {
          flex: 1 0 auto;
        }
      </style>
      <fieldset>
        <legend id="legend" class="flex" hidden$="[[!schema.title]]">
          [[schema.title]]
        </legend>
        <div hidden$="[[!schema.description]]">[[item.description]]</div>
        <div class="item-fields"></div>
      </fieldset>
    `}static get properties(){return{propertyName:{type:String,value:null},schema:{type:Object,value:{}}}}ready(){super.ready(),this._schemaChanged()}_schemaChanged(){this.shadowRoot.querySelectorAll(".item-fields").forEach(((e,o)=>{let t=`${this.propertyName}`;this.dispatchEvent(new CustomEvent("build-fieldset",{bubbles:!1,cancelable:!0,composed:!0,detail:{container:e,path:t,prefix:t,properties:this.schema.properties,type:EcoJsonSchemaFieldset.tag,value:this.schema.properties[o].value||{}}}))}))}}customElements.define(EcoJsonSchemaFieldset.tag,EcoJsonSchemaFieldset);export{EcoJsonSchemaFieldset};