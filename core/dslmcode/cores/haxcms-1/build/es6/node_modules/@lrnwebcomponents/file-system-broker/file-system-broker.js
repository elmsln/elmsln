/**
 * Copyright 2021 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
class FileSystemBroker extends HTMLElement{constructor(){super(),this.dirHandler=null,this.fileHandler=null,this.files=[]}static get tag(){return"file-system-broker"}async loadFile(e,t=!1,i=!0){let a,r=this.typeToAccept(e),s=`${e} file`;return[a]=await window.showOpenFilePicker({types:[{description:s,accept:r}],excludeAcceptAllOption:i,multiple:t}),this.fileHandler=await a.getFile(),this.fileHandler}async getFileContents(e,t=!1,i=!0){return await this.loadFile(e,t,i),await this.fileHandler.text()}typeToAccept(e){let t={};switch(e){case"xls":case"xlsx":case"ods":t={"text/csv":[".csv"],"application/*":[".xls",".xlsx",".ods"]};break;case"zip":t={"application/zip":[".zip",".gz",".tar",".tar.gz"]};break;case"csv":t={"text/*":[".csv",".txt"]};break;case"image":t={"image/*":[".jpg",".jpeg",".gif",".png"]};break;case"video":t={"video/*":[".mp4"]};break;case"markdown":t={"text/*":[".txt",".md"]}}return t}async saveFile(e,t){const i={types:[{description:`Save ${e} file`,accept:this.typeToAccept(e)}]};this.fileHandler=await window.showSaveFilePicker(i);const a=await this.fileHandler.createWritable();await a.write(t),await a.close()}async openDir(e=!0){try{this.dirHandler=await window.showDirectoryPicker()}catch(e){console.log(e)}return this.files=[],this.files=await this.__readDir(this.dirHandler,e,this.dirHandler.name||"",this.dirHandler),this.files}async readFileInDir(e){try{this.dirHandler=await window.showDirectoryPicker();for await(const t of this.dirHandler.values())if(e&&"function"==typeof t.getFile&&t.name===e){const e=await t.getFile();return await e.text()}}catch(e){console.log(e)}return""}async writeFileInDir(e,t=""){try{this.dirHandler=await window.showDirectoryPicker();for await(const a of this.dirHandler.values())if(e&&"function"==typeof a.getFile&&a.name===e){var i=await this.dirHandler.getFileHandle(a.name);const e=await i.createWritable();return await e.write(t),await e.close(),!0}}catch(e){console.log(e)}return!1}async __readDir(e,t,i,a){const r=[];for await(let[s,n]of e){const{kind:e}=n;"directory"===n.kind?(r.push({name:s,kind:e,handle:n,folder:i,parentHandler:a}),".git"!==s&&t&&r.push(...await this.__readDir(n,t,i+"/"+s,n))):r.push({name:s,kind:e,handle:n,folder:i,parentHandler:a})}return r}}window.FileSystemBroker=window.FileSystemBroker||{},window.FileSystemBroker.requestAvailability=()=>(window.FileSystemBroker.instance||(window.FileSystemBroker.instance=document.createElement("file-system-broker"),document.body.appendChild(window.FileSystemBroker.instance)),window.FileSystemBroker.instance);const e=window.FileSystemBroker.requestAvailability();customElements.define(FileSystemBroker.tag,FileSystemBroker);export{FileSystemBroker,e as FileSystemBrokerSingleton};