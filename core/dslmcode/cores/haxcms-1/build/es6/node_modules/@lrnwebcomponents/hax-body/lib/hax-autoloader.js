import{LitElement as e,html as t,css as o}from"../../../lit/index.js";import{HAXElement as s,HAXWiring as r}from"../../hax-body-behaviors/hax-body-behaviors.js";import{varGet as i}from"../../utils/utils.js";import{HAXStore as a}from"./hax-store.js";class HaxAutoloader extends(s(e)){static get styles(){return[o`
        :host {
          display: none;
        }
      `]}render(){return t`<slot></slot>`}static get tag(){return"hax-autoloader"}static get properties(){return{...super.properties,processedList:{type:Object}}}constructor(){super(),this.processedList={}}firstUpdated(e){this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxAutoloader",object:this}}))}connectedCallback(){super.connectedCallback(),this.observer=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{this.processNewElements(e)}))}))})),this.observer.observe(this,{childList:!0})}disconnectedCallback(){this.observer.disconnect(),super.disconnectedCallback()}processNewElements(e){let t=this.childNodes;for(var o=0;o<t.length;o++){if(void 0!==t[o].tagName&&void 0===this.processedList[t[o].tagName])try{let n=t[o].tagName.toLowerCase();if("function"==typeof t[o].getHaxProperties){const e=new CustomEvent("hax-register-properties",{bubbles:!0,composed:!0,cancelable:!0,detail:{tag:n,properties:t[o].getHaxProperties(),polymer:!0}});context.dispatchEvent(e)}else if("function"==typeof t[o].HAXWiring){const e=new CustomEvent("hax-register-properties",{bubbles:!0,cancelable:!0,composed:!0,detail:{tag:n,properties:t[o].HAXWiring.getHaxProperties(),polymer:!1}});context.dispatchEvent(e)}else if(window.customElements.get(n)){let t=window.customElements.get(n);if(t)if("function"==typeof t.getHaxProperties)this.setHaxProperties(t.getHaxProperties(),n);else if("function"==typeof t.HAXWiring)this.setHaxProperties(t.HAXWiring.getHaxProperties(),n);else if(t.haxProperties)this.setHaxProperties(t.haxProperties,n);else{console.warn(`${n} didn't have hax wiring so HAX guessed as best it can. See https://haxtheweb.org/documentation-1/hax-development/hax-schema for documentation on adding custom wiring for better UX.`);try{let e,t=new r,i=t.prototypeHaxProperties();if(i.gizmo.title=n,i.gizmo.handles=[],i.settings.configure=[],i.settings.advanced=[],i=t.standardAdvancedProps(i),i.saveOptions={},i.demoSchema=[],customElements.get(n)&&(e=customElements.get(n).properties),e){for(var s in e)if(e[s].type&&e[s].type.name)switch(e[s].type.name){case"String":i.settings.configure.push({property:s,title:s,description:"",inputMethod:"textfield"});break;case"Number":i.settings.configure.push({property:s,title:s,description:"",inputMethod:"number"});break;case"Boolean":i.settings.configure.push({property:s,title:s,description:"",inputMethod:"boolean"})}}else{let e=document.createElement(n).getAttributeNames();for(o=0;o<e.length;o++)i.settings.configure.push({attribute:e[o],title:e[o],description:"",inputMethod:"textfield"})}t.readyToFireHAXSchema(n,i,this)}catch(e){console.warn("HAX failed to create wiring that worked")}}else console.error(`${n} was not a valid custom element yet a load was attempted`)}else{let e=i(a,`__appStoreData.autoloader.${n}.import`,i(a,`__appStoreData.autoloader.${n}`,`@lrnwebcomponents/${n}/${n}.js`));import(`${new URL("./../../../",import.meta.url).href}${e}`).then((e=>{let t=window.customElements.get(n);t?"function"==typeof t.getHaxProperties?this.setHaxProperties(t.getHaxProperties(),n):"function"==typeof t.HAXWiring?this.setHaxProperties(t.HAXWiring.getHaxProperties(),n):t.haxProperties?this.setHaxProperties(t.haxProperties,n):i(a,`__appStoreData.autoloader.${n}.haxProperties`,!1)?this.setHaxProperties(i(a,`__appStoreData.autoloader.${n}.haxProperties`,!1),n):console.warn(`${n} didn't have hax wiring in the end`):console.error(`${n} was not a valid custom element yet a load was attempted`)})).catch((e=>{console.warn(e)}))}this.processedList[n]=n}catch(e){}t[o].remove()}}}customElements.define(HaxAutoloader.tag,HaxAutoloader);export{HaxAutoloader};