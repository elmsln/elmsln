import{html as s,PolymerElement as t}from"../../../../@polymer/polymer/polymer-element.js";import{dom as i}from"../../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../../../@polymer/polymer/lib/elements/dom-if.js";import"../../../../@polymer/polymer/lib/elements/dom-repeat.js";import"../../../lrnsys-button/lrnsys-button.js";import"../../../lrndesign-avatar/lrndesign-avatar.js";import"../../../materializecss-styles/materializecss-styles.js";import"../lrnapp-studio-submission/lrnapp-studio-submission-display.js";class LrnappOpenStudioAssignments extends t{static get template(){return s`
      <style include="materializecss-styles"></style>
      <style>
        :host {
          display: block;
          align-content: center;
        }
        #loading {
          width: 100%;
          z-index: 1000;
          opacity: 0.8;
          text-align: center;
          align-content: center;
          justify-content: center;
          height: 100vh;
          position: absolute;
          background-color: white;
        }
        h1.empty-title,
        h1.assignment-title {
          font-size: 32px;
        }
        .submission-title {
          font-size: 28px;
          font-weight: bold;
          width: 100%;
          margin-bottom: 2rem;
          text-transform: none;
        }
        .submission-list {
          display: flex;
          align-items: center;
        }
        .submission-list-item {
          overflow: hidden;
          text-overflow: ellipsis;
          word-break: break-all;
          word-wrap: break-word;
        }
      </style>
      <template is="dom-if" if="[[!showSubmissions]]">
        <h1 class="empty-title black-text">
          Please select an Assignment in order to view all submissions
        </h1>
      </template>
      <template is="dom-if" if="[[showSubmissions]]">
        <h1 class="assignment-title black-text">
          [[activeAssignment.attributes.title]]
        </h1>
        <div class="submission-list">
          <template is="dom-repeat" items="[[submissions]]" as="submission">
            <lrnsys-button
              on-click="_scrollToTarget"
              raised=""
              class="submission-list-item"
              button-class="submission-list-item"
              hover-class="blue white-text"
              data-submission-id$="[[submission.id]]"
            >
              <span slot="button">
                <lrndesign-avatar
                  src="[[submission.relationships.author.data.avatar]]"
                  label="[[submission.relationships.author.data.name]]"
                  style="display:inline-block;"
                  data-submission-id$="[[submission.id]]"
                ></lrndesign-avatar>
              </span>
              <span slot="label"
                >[[submission.relationships.author.data.display_name]]</span
              >
            </lrnsys-button>
          </template>
        </div>
        <template is="dom-repeat" items="[[submissions]]" as="submission">
          <lrnapp-studio-submission-display
            id$="submission-[[submission.id]]"
            submission="[[submission]]"
            class="ferpa-protect"
          ></lrnapp-studio-submission-display>
          <a tabindex="-1"
            ><button
              class="submission-title ferpa-protect"
              on-click="_loadSubmissionUrl"
              data-submission-id$="[[submission.id]]"
            >
              Tap to comment on [[submission.attributes.title]] by
              [[submission.relationships.author.data.display_name]]
            </button></a
          >
        </template>
      </template>
    `}static get tag(){return"lrnapp-open-studio-assignments"}static get properties(){return{elmslnCourse:{type:String},elmslnSection:{type:String},basePath:{type:String},csrfToken:{type:String},endPoint:{type:String},assignments:{type:Array,notify:!0},submissions:{type:Array,notify:!0},activeAssignmentId:{type:String,reflectToAttribute:!0,value:null,notify:!0},activeAssignment:{type:Object,notify:!0,computed:"_activeAssignmentCompute(activeAssignmentId, assignments)"},activeAuthorId:{type:String,reflectToAttribute:!0,value:null,notify:!0},showSubmissions:{type:Boolean,computed:"_showSubmissions(activeAssignmentId)",value:!1,notify:!0},sourcePath:{type:String,notify:!0},basePath:{type:String,notify:!0}}}_loadSubmissionUrl(s){var t=i(s).localTarget.getAttribute("data-submission-id");window.location.href=this.basePath+"lrnapp-studio-submission/submissions/"+t}_activeAssignmentCompute(s,t){let i=null;return t&&(i=t.find((t=>t.id==s))),i}_showSubmissions(s){return!!s}_scrollToTarget(s){var t=i(s).localTarget.getAttribute("data-submission-id");this.shadowRoot.querySelector("#submission-"+t).scrollIntoView({block:"start",behavior:"smooth"})}_handleResponse(s){this.$.loading.hidden=!0}_toArray(s){return null==s?[]:Object.keys(s).map((function(t){return s[t]}))}}customElements.define(LrnappOpenStudioAssignments.tag,LrnappOpenStudioAssignments);export{LrnappOpenStudioAssignments};