import{LitElement as e,html as t,css as i}from"../../lit/index.js";import{FlattenedNodesObserver as r}from"../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";import"./lib/loading-indicator.js";export class IframeLoader extends e{static get properties(){return{loading:{type:Boolean},__iframeHeight:{type:Number}}}static get styles(){return i`
      :host {
        display: block;
      }
      #container {
        position: relative;
      }
      #loading-screen {
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .loaded #loading-screen {
        display: none;
      }
    `}constructor(){super(),this.loading=!0,this.__iframeLoaded=!1,this.__iframeHeight=100,this.__iframe=null,this.__mutationObserver=new MutationObserver((e=>{e.forEach((e=>{e.target.offsetHeight&&this.loading&&(this.__iframeHeight=e.target.offsetHeight)}))}))}disconnectedCallback(){super.disconnectedCallback(),this.__iframe&&this.__iframe.removeEventListener("load",(e=>{setTimeout((()=>{this.loading=!1,e.path[0].height&&(this.__iframeHeight=e.path[0].height)}),500)}))}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.__observer=new r(this.shadowRoot.querySelector("slot"),(e=>{e.addedNodes.length>0&&e.addedNodes.forEach((e=>{let t=null;if("IFRAME"===e.nodeName)t=e;else if(e.querySelector){const i=e.querySelector("iframe");i&&(t=i)}t&&(this.__iframe=t,this.__iframe.addEventListener("load",(e=>{setTimeout((()=>{this.loading=!1,e.path[0].height&&(this.__iframeHeight=e.path[0].height)}),500)})),this.__mutationObserver.observe(this.__iframe,{attributes:!0}))}))}))}render(){return t`
      <div id="container" class="${this.loading?"loading":"loaded"}">
        <div id="loading-screen" style="height:${this.__iframeHeight}px;">
          <loading-indicator></loading-indicator>
        </div>
        <div id="slot" style="display: ${this.loading?"none":"block"}">
          <slot></slot>
        </div>
      </div>
    `}}customElements.define("iframe-loader",IframeLoader);