/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as e,css as i}from"../../lit/index.js";import{SimpleColors as t}from"../simple-colors/simple-colors.js";import"../../@polymer/polymer/lib/elements/custom-style.js";import"../../@polymer/app-layout/app-drawer/app-drawer.js";import"../simple-icon/simple-icon.js";import"../simple-icon/lib/simple-icons.js";window.SimpleDrawer=window.SimpleDrawer||{},window.SimpleDrawer.requestAvailability=()=>(window.SimpleDrawer.instance||(window.SimpleDrawer.instance=document.createElement("simple-drawer"),document.body.appendChild(window.SimpleDrawer.instance)),window.SimpleDrawer.instance);class SimpleDrawer extends t{static get styles(){return[...super.styles,i`
        :host {
          display: block;
          z-index: 1000;
        }

        :host([hidden]) {
          display: none;
        }

        :host div::slotted(*) {
          font-size: 14px;
        }

        .content {
          text-align: left;
          padding: 8px 24px;
        }

        .top ::slotted(*) {
          font-size: 24px;
          margin: 0;
          padding: 0 15px;
          height: 40px;
          line-height: 48px;
        }

        #close {
          position: absolute;
          right: 8px;
          top: 8px;
          padding: 4px 6px 4px 4px;
          margin: 11px 5px 0px 0px;
          text-transform: none;
          float: right;
          font-size: var(--simple-drawer-close-font-size, 12px);
          color: var(--simple-drawer-header-color, #ffffff);
          background-color: var(--simple-drawer-close-background, transparent);
          border: var(--simple-drawer-close-border);
          cursor: pointer;
          min-width: unset;
        }

        #close simple-icon {
          display: inline-block;
          --simple-icon-width: 16px;
          --simple-icon-height: 16px;
          margin-top: -2px;
          margin-right: 2px;
        }

        .top {
          font-size: 24px;
          margin: 0 0 8px 0;
          padding: 0 16px;
          height: 64px;
          line-height: 64px;
          display: flex;
          text-align: left;
          justify-content: space-between;
          background-color: var(--simple-drawer-header-background, #20427b);
          color: var(--simple-drawer-header-color, #ffffff);
        }

        .top h2 {
          flex: auto;
          color: var(--simple-drawer-header-color, #ffffff);
          font-size: 24px;
          padding: 0;
          line-height: 45px;
          margin: 8px;
        }
      `]}render(){return e` <custom-style>
        <style>
          app-drawer {
            --app-drawer-content-container: {
              padding: 0;
              overflow-y: scroll;
              position: fixed;
              color: var(--simple-drawer-color, #222222);
              background-color: var(--simple-drawer-background-color, #ffffff);
            }
          }
          :host ::slotted(*) {
            @apply --simple-drawer-content;
          }

          .content {
            @apply --simple-drawer-content-container;
          }
          .top {
            @apply --simple-drawer-header;
          }

          .top h2 {
            @apply --simple-drawer-heading;
          }
        </style>
      </custom-style>
      <app-drawer
        tabindex="0"
        id="drawer"
        ?opened="${this.opened}"
        @opened-changed="${this.__openedChanged}"
        .align="${this.align}"
        role="dialog"
      >
        <div class="wrapper">
          <div class="top">
            ${this.title?e`<h2>${this.title}</h2>`:""}
            <slot name="header"></slot>
          </div>
          <div class="content">
            <slot name="content"></slot>
          </div>
          <button id="close" @click="${this.close}">
            <simple-icon
              icon="${this.closeIcon}"
              dark
              contrast="4"
            ></simple-icon>
            ${this.closeLabel}
          </button>
        </div>
      </app-drawer>`}static get properties(){return{...super.properties,title:{name:"title",type:String},align:{name:"align",type:String},opened:{name:"opened",type:Boolean,reflect:!0},closeLabel:{name:"closeLabel",type:String},closeIcon:{name:"closeIcon",type:String},invokedBy:{name:"invokedBy",type:Object}}}static get tag(){return"simple-drawer"}constructor(){super(),this.title="",this.align="left",this.opened=!1,this.closeLabel="Close",this.closeIcon="icons:cancel"}firstUpdated(e){window.addEventListener("simple-drawer-hide",this.close.bind(this)),window.addEventListener("simple-drawer-show",this.showEvent.bind(this))}updated(e){e.forEach(((e,i)=>{"opened"==i&&this._openedChanged(this[i],e)}))}showEvent(e){if(this.opened){for(;null!==this.firstChild;)this.removeChild(this.firstChild);setTimeout((()=>{this.show(e.detail.title,e.detail.elements,e.detail.invokedBy,e.detail.align,e.detail.clone)}),100)}else this.show(e.detail.title,e.detail.elements,e.detail.invokedBy,e.detail.align,e.detail.size,e.detail.clone)}show(e,i,t,o="left",n="256px",s=!1){let l;this.invokedBy=t,this.title=e,this.align=o,this.shadowRoot.querySelector("#drawer").updateStyles({"--app-drawer-width":n});let r=["header","content"];for(var a in r)i[r[a]]&&(l=s?i[r[a]].cloneNode(!0):i[r[a]],l.setAttribute("slot",r[a]),this.appendChild(l));setTimeout((()=>{this.opened=!0,window.dispatchEvent(new Event("resize"))}),100)}animationEnded(e){for(this.title="";null!==this.firstChild;)this.removeChild(this.firstChild);this.invokedBy&&setTimeout((()=>{this.invokedBy.focus()}),500)}close(){this.opened=!1}__openedChanged(e){this.opened=e.detail.value}_openedChanged(e,i){if(void 0===e||e){if(e){const e=new CustomEvent("simple-drawer-opened",{bubbles:!0,cancelable:!0,detail:{opened:!0,invokedBy:this.invokedBy}});this.dispatchEvent(e)}}else{this.animationEnded();const e=new CustomEvent("simple-drawer-closed",{bubbles:!0,cancelable:!0,detail:{opened:!1,invokedBy:this.invokedBy}});this.dispatchEvent(e)}}disconnectedCallback(){window.removeEventListener("simple-drawer-hide",this.close.bind(this)),window.removeEventListener("simple-drawer-show",this.showEvent.bind(this)),super.disconnectedCallback()}}customElements.define(SimpleDrawer.tag,SimpleDrawer);export{SimpleDrawer};