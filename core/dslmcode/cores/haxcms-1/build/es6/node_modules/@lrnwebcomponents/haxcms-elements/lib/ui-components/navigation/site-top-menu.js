/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as t,css as i,LitElement as e}from"../../../../../lit/index.js";import{store as s}from"../../core/haxcms-site-store.js";import{autorun as o,toJS as n}from"../../../../../mobx/dist/mobx.esm.js";import"../query/site-query.js";import"../../../../simple-icon/simple-icon.js";import"../../../../simple-icon/lib/simple-icons.js";import"../../../../simple-icon/lib/simple-icon-button.js";class SiteTopMenu extends e{static get tag(){return"site-top-menu"}constructor(){super(),this.windowControllers=new AbortController,this.__disposer=[],this.manifest={},this.activeId=null,this.sticky=!1,this.indicator="line",this.notitle=!1,this.showindex=!1,this.arrowSize=6,this.sort={order:"ASC"},this.conditions={parent:null},this.mobileTitle="Navigation",this.editMode=!1,this.__items=[]}static get styles(){return[i`
        :host {
          display: block;
          --site-top-menu-bg: var(--haxcms-color, #ffffff);
          --site-top-menu-indicator-arrow: 6px;
          transition: 0.2s opacity linear;
          opacity: 1;
        }
        :host([edit-mode]) {
          opacity: 0.2;
          pointer-events: none;
        }
        :host([sticky]) {
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          z-index: 1000;
        }
        .wrapper {
          display: flex;
          justify-content: space-evenly;
          background-color: var(--site-top-menu-bg);
        }
        :host .wrapper ::slotted(div.spacing) {
          display: inline-flex;
        }
        .spacing {
          display: inline-flex;
        }
        .link {
          color: var(--site-top-menu-link-color, #444444);
        }
        button {
          text-transform: unset;
          min-width: unset;
          background-color: transparent;
          border: none;
        }
        .active {
          color: var(--site-top-menu-link-active-color, #000000);
        }
        #indicator {
          transition: 0.4s ease-in-out all;
          transition-delay: 0.2s;
          position: relative;
          width: 0;
          height: 0;
          visibility: hidden;
        }
        :host([indicator="line"]) #indicator {
          border-bottom: 2px solid var(--site-top-menu-indicator-color, #000000);
        }
        :host([indicator="arrow"]) #indicator {
          border-left: var(--site-top-menu-indicator-arrow) solid transparent;
          border-right: var(--site-top-menu-indicator-arrow) solid transparent;
          border-bottom: var(--site-top-menu-indicator-arrow) solid
            var(--site-top-menu-indicator-color, #000000);
        }
        #indicator.activated {
          visibility: visible;
          position: absolute;
        }
        :host([notitle]) .spacing .link-title {
          display: none;
        }
        .spacing .link-index {
          display: none;
        }
        :host([showindex]) .spacing .link-index {
          display: inline-flex;
        }
        .mobiletitle,
        simple-icon-button {
          display: none;
        }
        @media screen and (max-width: 640px) {
          .wrapper .spacing {
            display: none;
          }
          .wrapper .mobiletitle,
          .wrapper simple-icon-button {
            display: inline-block;
          }
          .wrapper {
            display: block;
          }
        }

        @media screen and (max-width: 640px) {
          #indicator {
            display: none !important;
          }
          .wrapper.responsive {
            position: relative;
          }
          .wrapper.responsive .spacing {
            float: none;
            display: block;
            text-align: left;
          }
        }
      `]}__resultChanged(t){null===t.detail.value?this.__items=[]:this.__items=t.detail.value}render(){return t`
      <site-query
        .result="${this.__items}"
        @result-changed="${this.__resultChanged}"
        .sort="${this.sort}"
        .conditions="${this.conditions}"
      ></site-query>
      <div id="wrapper" class="wrapper">
        <simple-icon-button
          icon="menu"
          id="menu"
          title="Open navigation"
        ></simple-icon-button>
        <span class="mobiletitle">${this.mobileTitle}</span>
        <slot name="prefix"></slot>
        ${this.__items.map(((i,e)=>t`
            <div class="spacing">
              <a
                data-id="${i.id}"
                class="link"
                tabindex="-1"
                title="Go to ${i.title}"
                href="${i.slug}"
                part="a"
              >
                <button id="item-${i.id}" part="button">
                  <span class="link-index">${this.humanIndex(e)}</span>
                  <span class="link-title">${i.title}</span>
                </button>
              </a>
            </div>
          `))}
        <slot name="suffix"></slot>
      </div>
      <div id="indicator"></div>
    `}updated(t){super.updated&&super.updated(t),t.has("activeId")&&this._activeIdChanged(this.activeId)}static get properties(){return{__items:{type:Array},manifest:{type:Object},activeId:{type:String},sticky:{type:Boolean,reflect:!0},indicator:{type:String,reflect:!0},notitle:{type:Boolean,reflect:!0},showindex:{type:Boolean,reflect:!0},arrowSize:{type:Number,attribute:"arrow-size"},sort:{type:Object},conditions:{type:Object},mobileTitle:{type:String,attribute:"mobile-title"},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"}}}humanIndex(t){return t+1}toggleOpen(){var t=this.shadowRoot.querySelector("#wrapper");t.classList.contains("responsive")?t.classList.remove("responsive"):t.classList.add("responsive")}_activeIdChanged(t){if("none"!=this.indicator)if(t){this.shadowRoot.querySelector("#indicator").classList.add("activated");let i=null;if(this.shadowRoot.querySelector('[data-id="'+t+'"]'))i=this.shadowRoot.querySelector('[data-id="'+t+'"]');else{let e=this.manifest.items.find((i=>i.id==t));for(;null===i&&e&&null!=e.parent;)e=this.manifest.items.find((t=>t.id==e.parent)),e&&this.shadowRoot.querySelector('[data-id="'+e.id+'"]')&&(i=this.shadowRoot.querySelector('[data-id="'+e.id+'"]'))}if(this._prevEl&&this._prevEl.classList.remove("active"),i){i.classList.add("active");let t=i.getBoundingClientRect();"arrow"==this.indicator?(this.shadowRoot.querySelector("#indicator").style.left=t.left+i.offsetWidth/2-this.arrowSize+"px",this.shadowRoot.querySelector("#indicator").style.top=t.top-2.5*this.arrowSize+"px"):(this.shadowRoot.querySelector("#indicator").style.left=t.left+"px",this.shadowRoot.querySelector("#indicator").style.top=t.top-2.5*this.arrowSize+"px",this.shadowRoot.querySelector("#indicator").style.width=i.offsetWidth+"px"),this._prevEl=i}}else this.shadowRoot.querySelector("#indicator").classList.remove("activated")}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.shadowRoot.querySelector("#menu").addEventListener("click",this.toggleOpen.bind(this)),o((t=>{this.manifest=n(s.manifest),this.__disposer.push(t)})),o((t=>{this.editMode=n(s.editMode),this.__disposer.push(t)})),setTimeout((()=>{o((t=>{this.activeId=n(s.activeId),this.__disposer.push(t)}))}),50),window.addEventListener("resize",(()=>{this._activeIdChanged(this.activeId)}),{signal:this.windowControllers.signal}),setTimeout((()=>{this._activeIdChanged(this.activeId)}),5e3)}disconnectedCallback(){for(var t in this.__disposer)this.__disposer[t].dispose();this.windowControllers.abort(),super.disconnectedCallback()}}customElements.define(SiteTopMenu.tag,SiteTopMenu);export{SiteTopMenu};