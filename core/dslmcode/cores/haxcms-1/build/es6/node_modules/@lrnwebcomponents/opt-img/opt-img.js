/**
 * Copyright 2022 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
class OptImg extends HTMLElement{constructor(){if(super(),this.t=this.t||{},this.t.imageLoading="Image loading..",this.alt="",this.src="",this.width="300px",this.height="200px",this.querySelector("img")){const t=this.querySelector("img");this.alt=t.alt||"",this.src=t.src||"",this.width=t.width||"300px",this.height=t.height||"200px"}this.innerHTML=null,this._loading=document.createElement("div"),this._loading.style.height=this.height,this._loading.style.width=this.width,this._loading.innerHTML=this.loading,this.appendChild(this._loading),this.loadingvisible=!1,this.template=document.createElement("template"),this._preconnect=document.createElement("link"),this._preconnect.rel="preconnect"}handleIntersectionCallback(t){super.handleIntersectionCallback(t);for(let e of t){Number(e.intersectionRatio).toFixed(2)>=.1&&"preload"!=this._preconnect.rel&&!this.loadingvisible&&(this._preconnect.remove(),this._preconnect=document.createElement("link"),this._preconnect.rel="preload",this._preconnect.href=this.src,this._preconnect.as="image",document.head.appendChild(this._preconnect))}}get html(){return`<img \n    src="${this.src}" \n    height="${this.height}" \n    width="${this.width}" \n    alt="${this.alt}" \n    decoding="async" \n    loading="lazy"\n    fetchpriority="high" />`}get loading(){return`\n    <style>\n    opt-img {\n      display: inline;\n    }\n    opt-img #dots circle{\n      animation: load 1s infinite;\n    }\n    \n    opt-img #dots #dot2{\n      animation-delay: 0.2s;\n    }\n    \n    opt-img #dots #dot3{\n      animation-delay: 0.4s;\n    }\n    \n    @keyframes load{\n      0%{\n        opacity: 0;\n      }\n      50%{\n        opacity: 1;\n      }\n      100%{\n        opacity: 0;\n      }\n    }\n    </style>\n    <svg id="dots-svg" width="132px" height="58px" viewBox="0 0 132 58" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns">\n      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" sketch:type="MSPage">\n          <g id="dots" sketch:type="MSArtboardGroup" fill="#A3A3A3">\n              <circle id="dot1" sketch:type="MSShapeGroup" cx="25" cy="30" r="13"></circle>\n              <circle id="dot2" sketch:type="MSShapeGroup" cx="65" cy="30" r="13"></circle>\n              <circle id="dot3" sketch:type="MSShapeGroup" cx="105" cy="30" r="13"></circle>\n          </g>\n      </g>\n    </svg>\n    <div aria-busy="true" aria-live="polite">${this.t.imageLoading}</div>\n    `}static get observedAttributes(){return["src","alt","loadingvisible"]}attributeChangedCallback(t,e,i){["src","alt"].includes(t)?(this[t]=i,this.render()):["loadingvisible"].includes(t)&&this.render(),"src"===t&&(this._preconnect.href=new URL(this.src).origin,document.head.appendChild(this._preconnect))}set loadingvisible(t){!1===t?this.removeAttribute("loadingvisible"):this.setAttribute("loadingvisible","loadingvisible")}get loadingvisible(){return this.getAttribute("loadingvisible")}static get tag(){return"opt-img"}render(){if(this.loadingvisible){let t=new Image;t.fetchpriority="high",t.onload=()=>{this.style.height=t.height+"px",this.style.width=t.width+"px",this.height=t.height+"px",this.width=t.width+"px",this.template.innerHTML=this.html,this.appendChild(this.template.content),setTimeout((()=>{this.style.height="",this.style.width="",this._loading.remove()}),0)},t.src=this.src,this._preconnect.remove()}}connectedCallback(){super.connectedCallback&&super.connectedCallback(),window.dispatchEvent(new CustomEvent("i18n-manager-register-element",{detail:{context:this,namespace:"opt-img",localesPath:new URL("./locales",import.meta.url).href,updateCallback:"render",locales:["es"]}})),this.loadingvisible||(this.intersectionObserver=new IntersectionObserver(this.handleIntersectionCallback.bind(this),{root:null,rootMargin:"0px",threshold:[0,.25,.5,.75,1],delay:500}),this.intersectionObserver.observe(this))}disconnectedCallback(){this.intersectionObserver&&(this.intersectionObserver.disconnect(),this.loadingvisible=!1),super.disconnectedCallback&&super.disconnectedCallback()}handleIntersectionCallback(t){for(let e of t){Number(e.intersectionRatio).toFixed(2)>=.25?(this.loadingvisible=!0,this.intersectionObserver.disconnect()):this.loadingvisible=!1}}}customElements.define(OptImg.tag,OptImg);export{OptImg};