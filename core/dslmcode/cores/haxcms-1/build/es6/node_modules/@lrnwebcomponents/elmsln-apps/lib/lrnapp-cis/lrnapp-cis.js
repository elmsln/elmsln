import{html as e,PolymerElement as t}from"../../../../@polymer/polymer/polymer-element.js";import{dom as i}from"../../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../../../@polymer/iron-ajax/iron-ajax.js";import"../../../../@polymer/paper-item/paper-item.js";import"../../../../@polymer/polymer/lib/elements/dom-if.js";import"../../../simple-modal/lib/simple-modal-template.js";import"../../../../@polymer/paper-listbox/paper-listbox.js";import"../../../../@polymer/polymer/lib/elements/dom-repeat.js";import"../../../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js";import"../elmsln-base-deps.js";import"../../../../@polymer/app-layout/app-toolbar/app-toolbar.js";import"../../../../@polymer/iron-list/iron-list.js";import"../../../../@polymer/iron-pages/iron-pages.js";import"../../../../@polymer/paper-dialog/paper-dialog.js";import"../../../../@polymer/app-route/app-location.js";import"../../../../@polymer/app-route/app-route.js";import"../../../../@polymer/paper-toast/paper-toast.js";import"../../../elmsln-loading/elmsln-loading.js";import"../../../lrndesign-course-banner/lrndesign-course-banner.js";import"../../../simple-icon/simple-icon.js";import"../../../simple-icon/lib/simple-icons.js";import"../../../simple-icon/lib/simple-icon-button.js";import"../../../hax-iconset/lib/simple-hax-iconset.js";import"../../../lrnsys-button/lrnsys-button.js";import"../../../lrndesign-avatar/lrndesign-avatar.js";import"../../../lrnsys-layout/lib/lrnsys-dialog.js";import"../../../grid-plate/grid-plate.js";import"../../../materializecss-styles/materializecss-styles.js";import"./lrnapp-cis-course-card.js";import{normalizeEventPath as r}from"../../../utils/utils.js";class LrnappCis extends t{static get template(){return e`
      <style include="materializecss-styles">
        :host {
          display: block;
          align-content: center;
        }
        #loading {
          width: 100%;
          z-index: 1000;
          opacity: 0.9;
          padding: 4em 0 0 0;
          text-align: center;
          align-content: center;
          justify-content: center;
          height: 100vh;
          position: absolute;
          background-color: white;
        }
        #dialog {
          width: 80vw;
        }
        iron-selector {
          line-height: 16px;
        }
        iron-selector lrnsys-button {
          display: inline-flex;
        }
        button.coursecard-wrapper {
          margin: 0;
          padding: 0;
        }
        button.coursecard-wrapper:focus {
          outline: blue solid 1px;
        }
        lrnapp-cis-course-card {
          padding: 0;
          margin: 16px;
          height: 300px;
          width: 300px;
        }
        .courses-grid {
          margin: 0 auto;
          width: 95%;
        }
        .iron-selected .display-mode {
          background-color: #ff6f00;
          color: white;
        }
        .iron-list-container {
          display: flex;
          flex-direction: column;
          min-height: 50vh;
        }
        iron-list {
          flex: 1 1 auto;
        }
        .dialog-header {
          height: unset !important;
          padding: 0 !important;
        }
        .course-dialog-heading.lrndesign-course-banner {
          font-size: 1em;
          height: 4em !important;
        }
        #coursedetails {
          margin-top: 1em;
        }
        #confirm {
          max-width: 400px;
          max-height: 300px;
        }
        .buttons {
          text-align: center;
        }
        .buttons button {
          width: 10em;
          height: 4em;
        }
        .dialog-body {
          padding: 1em;
          font-size: 1.8em;
          text-align: center;
          margin: 0 auto;
        }
        .dialog-body lrn-icon.service-confirm-icon {
          width: 5em;
          height: 5em;
        }
        .dialog-body responsive-grid-col {
          height: 4.5em;
        }
        .dialog-body lrndesign-avatar.service-confirm-icon {
          display: inline-block;
        }
      </style>
      <iron-ajax
        reject-with-request
        on-last-error-changed="lastErrorChanged"
        auto=""
        url="[[sourcePath]]"
        params=""
        handle-as="json"
        last-response="{{_cisResponse}}"
        on-response="_handleResponse"
      ></iron-ajax>
      <iron-ajax
        reject-with-request
        on-last-error-changed="lastErrorChanged"
        url="[[courseDataPath]]"
        params="[[_courseDataParams]]"
        handle-as="json"
        id="courserequest"
        last-response="{{_courseResponse}}"
        on-response="_handleCourseResponse"
      ></iron-ajax>
      <iron-ajax
        reject-with-request
        on-last-error-changed="lastErrorChanged"
        url="[[makeServicePath]]"
        params=""
        handle-as="json"
        id="makeservice"
        last-response="{{_makeServiceResponse}}"
        on-response="_handleMakeServiceResponse"
      ></iron-ajax>
      <div id="loading">
        <elmsln-loading color="grey-text" size="large"></elmsln-loading>
        <h3>Loading..</h3>
      </div>
      <app-toolbar class="">
        <span main-title=""></span>
        <span
          top-item=""
          style="text-align:right;font-size:.5em;padding-right:1em;"
          >Displaying [[courses.length]] of [[originalCourses.length]]</span
        >
        <paper-dropdown-menu label="Course" hidden$="[[!courses]]">
          <paper-listbox
            slot="dropdown-content"
            class="dropdown-content"
            selected="{{queryParams.course}}"
            attr-for-selected="item-id"
          >
            <paper-item>-- Any --</paper-item>
            <template
              is="dom-repeat"
              items="[[_toArray(originalCourses)]]"
              as="course"
            >
              <paper-item item-id="[[course.id]]"
                >[[course.attributes.name]]</paper-item
              >
            </template>
          </paper-listbox>
        </paper-dropdown-menu>
        <paper-dropdown-menu label="Program" hidden$="[[!programs]]">
          <paper-listbox
            slot="dropdown-content"
            class="dropdown-content"
            selected="{{queryParams.program}}"
            attr-for-selected="item-id"
          >
            <paper-item>-- Any --</paper-item>
            <template
              is="dom-repeat"
              items="[[_toArray(programs)]]"
              as="program"
            >
              <paper-item item-id="[[program.id]]"
                >[[program.attributes.name]]</paper-item
              >
            </template>
          </paper-listbox>
        </paper-dropdown-menu>
        <paper-dropdown-menu label="Academic home" hidden$="[[!academics]]">
          <paper-listbox
            slot="dropdown-content"
            class="dropdown-content"
            selected="{{queryParams.academic}}"
            attr-for-selected="item-id"
          >
            <paper-item>-- Any --</paper-item>
            <template
              is="dom-repeat"
              items="[[_toArray(academics)]]"
              as="academic"
            >
              <paper-item item-id="[[academic.id]]"
                >[[academic.attributes.name]]</paper-item
              >
            </template>
          </paper-listbox>
        </paper-dropdown-menu>
      </app-toolbar>
      <div class="courses-grid">
        <iron-pages
          selected="{{data.page}}"
          attr-for-selected="name"
          fallback-selection="courses"
          role="main"
        >
          <div class="iron-list-container" name="courses">
            <iron-list id="ironlist" items="[[courses]]" as="course" grid="">
              <template>
                <button
                  data-course-id$="[[course.id]]"
                  class="coursecard-wrapper"
                  on-click="_loadCourseUrl"
                >
                  <lrnapp-cis-course-card
                    elevation="2"
                    data-course-id$="[[course.id]]"
                    name="[[course.attributes.name]]"
                    image="[[course.attributes.image]]"
                    title="[[course.attributes.title]]"
                    color="[[course.attributes.color]]"
                  >
                  </lrnapp-cis-course-card>
                </button>
              </template>
            </iron-list>
          </div>
        </iron-pages>
      </div>
      <app-location
        route="{{route}}"
        query-params="{{queryParams}}"
      ></app-location>
      <app-route
        route="{{route}}"
        pattern="[[endPoint]]/:page"
        data="{{data}}"
        tail="{{tail}}"
        query-params="{{queryParams}}"
      >
      </app-route>
      <paper-dialog id="dialog" with-backdrop>
        <h2>Course details</h2>
        <div style="height:50vh;width:100%;overflow:scroll;">
          <div class="dialog-header">
            <lrndesign-course-banner
              image="[[activeCourse.attributes.image]]"
              name="[[activeCourse.attributes.name]]"
              title="[[activeCourse.attributes.title]]"
              color="[[activeCourse.attributes.color]] darken-4"
            >
            </lrndesign-course-banner>
          </div>
          <div>
            <div id="loadingCourse" class="loading">
              <h3>Loading..</h3>
              <elmsln-loading color="grey-text" size="large"></elmsln-loading>
            </div>
          </div>
          <div id="coursedetails">
            <grid-plate layout="1-1">
              <div class="column" slot="col-1">
                <h4>Details</h4>
                <ul>
                  <li
                    hidden$="[[!activeCourse.relationships.academic.attributes.name]]"
                  >
                    Academic unit:
                    [[activeCourse.relationships.academic.attributes.name]]
                  </li>
                  <li
                    hidden$="[[!activeCourse.relationships.program.attributes.name]]"
                  >
                    Program:
                    [[activeCourse.relationships.program.attributes.name]]
                  </li>
                </ul>
                <h4>Learning Network</h4>
                <template
                  is="dom-repeat"
                  items="[[activeCourse.topology.Network]]"
                  as="service"
                >
                  <template is="dom-if" if="[[!service._exists]]">
                    <lrnsys-button
                      raised=""
                      on-click="_makeService"
                      color="grey lighten-4"
                      icon-class="grey lighten-5"
                      icon="lrn:[[service.icon]]"
                      data-machine-name$="[[service.machine_name]]"
                    >
                      <span data-machine-name$="[[service.machine_name]]"
                        >Make the [[service.title]] service</span
                      >
                    </lrnsys-button>
                  </template>
                  <template is="dom-if" if="[[service._exists]]">
                    <lrnsys-button
                      raised=""
                      href="[[service.url]]"
                      hover-class="[[service.color]] lighten-4"
                      icon="lrn:[[service.icon]]"
                    >
                      <span>[[service.title]]</span>
                    </lrnsys-button>
                  </template>
                </template>
              </div>
              <div class="column" slot="col-2">
                <h4>Operations</h4>
                <template is="dom-if" if="[[activeCourse.meta.canUpdate]]">
                  <lrnsys-button
                    raised=""
                    href="[[activeCourse.uris.edit]]"
                    label="Edit"
                    hover-class="green lighten-4"
                    icon="create"
                  ></lrnsys-button>
                  <lrnsys-button
                    raised=""
                    href="[[activeCourse.uris.addOffering]]"
                    label="Add offering"
                    hover-class="amber lighten-3"
                    icon="icons:add"
                  ></lrnsys-button>
                </template>
                <lrnsys-button
                  raised=""
                  href="[[activeCourse.uris.offerings]]"
                  label="Offerings"
                  hover-class="amber lighten-4"
                  icon="social:people"
                ></lrnsys-button>
                <lrnsys-button
                  raised=""
                  href="[[activeCourse.uris.sync]]"
                  label="Sync Roster"
                  hover-class="amber lighten-4"
                  icon="notification:sync"
                ></lrnsys-button>
                <lrnsys-button
                  raised=""
                  href="[[activeCourse.uris.uri]]"
                  label="Course page (legacy)"
                  hover-class="brown lighten-4"
                  icon="delete"
                ></lrnsys-button>
                <template is="dom-if" if="[[activeCourse.meta.canDelete]]">
                  <div
                    style="padding: 1em;width: 100%;margin: .5em 0;display: block;background-color:#FF2222;color:#ffffff;border: 1px solid #222222;"
                  >
                    <h4>Danger zone</h4>
                    <lrnsys-button
                      raised=""
                      href="[[activeCourse.uris.delete]]"
                      label="Delete"
                      hover-class="red lighten-1"
                      color="red lighten-3"
                      icon="delete"
                    ></lrnsys-button>
                  </div>
                </template>
              </div>
            </grid-plate>
            <p>[[activeCourse.attributes.body]]</p>
          </div>
        </div>
      </paper-dialog>
      <lrnsys-dialog id="confirm">
        <div class="dialog-header" slot="header">
          Add this to the
          <strong>[[activeCourse.attributes.title]]</strong> network?
        </div>
        <div class="dialog-body">
          <grid-plate layout="1-1-1">
            <div slot="col-1">Add</div>
            <div slot="col-2">
              <simple-icon
                icon="lrn:[[_activeService.icon]]"
                class$="[[_activeService.color]]-text elmsln-hover-icon service-confirm-icon"
              ></simple-icon>
            </div>
            <div slot="col-3"><strong>[[_activeService.title]]</strong></div>
          </grid-plate>
          <grid-plate layout="1-1-1">
            <div slot="col-1">To</div>
            <div slot="col-2">
              <lrndesign-avatar
                class="service-confirm-icon"
                label="[[activeCourse.attributes.name]]"
                jdenticon=""
                color="[[activeCourse.attributes.color]] darken-4"
              >
              </lrndesign-avatar>
            </div>
            <div slot="col-3">
              <strong>[[activeCourse.attributes.title]]</strong>
            </div>
          </grid-plate>
          <div style="margin-top:1em;">This will take a few moments.</div>
        </div>
        <div class="buttons">
          <button
            on-click="_confirmBuild"
            class="green"
            data-letsdoit="data-letsdoit"
          >
            Let's do it!
          </button>
          <button dialog-dismiss="" class="red-text">Oops, go back.</button>
        </div>
      </lrnsys-dialog>
      <paper-toast id="toast"></paper-toast>
    `}static get tag(){return"lrnapp-cis"}lastErrorChanged(e){if(e.detail.value){console.error(e);const t=r(e)[0];switch(parseInt(e.detail.value.status)){case 401:case 401:fetch(window.Drupal.settings.basePath,{mode:"no-cors"}).then((e=>{console.log(e),setTimeout((()=>{t.generateRequest()}),250)}))}}}static get properties(){return{elmslnCourse:{type:String},elmslnSection:{type:String},basePath:{type:String},csrfToken:{type:String},endPoint:{type:String},_cisResponse:{type:Object},_courseResponse:{type:Object},_makeServiceResponse:{type:Object},courses:{type:Array,value:[],computed:"_coursesCompute(originalCourses, queryParams)"},originalCourses:{type:Array,value:[],notify:!0},programs:{type:Array,value:[]},academics:{type:Array,value:[]},sourcePath:{type:String},courseDataPath:{type:String},makeServicePath:{type:String},endPoint:{type:String,value:"/"},basePath:{type:String,value:"/"},activeCourse:{type:Array,value:null},queryParams:{type:Object,notify:!0}}}static get observers(){return["_routeChanged(route, endPoint)"]}_routeChanged(e,t){if("string"==typeof e.path){if("string"==typeof t&&(e.path.startsWith(t)||"/"==e.path))return;this.$.loading.hidden=!1,window.location.reload()}}_routeChange(e){var t=e.detail;void 0!==t.queryParams.course&&this.set("queryParams.course",t.queryParams.course),void 0!==t.queryParams.academic&&this.set("queryParams.academic",t.queryParams.academic),void 0!==t.queryParams.program&&this.set("queryParams.program",t.queryParams.program),void 0!==t.data.page&&this.set("data.page",t.data.page)}_toArray(e){return null==e?[]:Object.keys(e).map((function(t){return e[t]}))}_handleMakeServiceResponse(e){var t=this._makeServiceResponse;let i=this.__addServiceLinks(t.data.course);this.set("activeCourse",[]),this.set("activeCourse",i),this.$.toast.show(t.message)}_handleCourseResponse(e){var t=this._courseResponse.data.course;this.__addServiceLinks(t),this.set("activeCourse",[]),this.set("activeCourse",t),this.$.loadingCourse.hidden=!0}__addServiceLinks(e){for(var t in void 0===e.topology.Network&&(e.topology.Network={}),this.services)void 0===e.topology.Network[this.services[t].attributes.machine_name]&&(e.topology.Network[this.services[t].attributes.machine_name]={color:this.services[t].attributes.color,distro:this.services[t].attributes.distro,icon:this.services[t].attributes.icon,machine_name:this.services[t].attributes.machine_name,title:this.services[t].attributes.title,url:this.services[t].attributes.url,weight:this.services[t].attributes.weight,_exists:!1});return e.topology.Network=this._toArray(e.topology.Network),e.topology.Network.sort((function(e,t){return e.weight-t.weight})),e}_handleResponse(e){var t={},i={},r={},s={courses:[],programs:[],academics:[]},a=[],o=[],n=this._toArray(this._cisResponse.data.courses);this.set("services",this._toArray(this._cisResponse.data.services)),this.set("originalCourses",n);for(var l=0;l<n.length;l++)t=n[l],i=n[l].relationships.program,r=n[l].relationships.academic,s.programs[i.id]=i,s.academics[r.id]=r,s.courses[t.id]=t;s.programs.forEach((function(e){a.push(e)})),s.academics.forEach((function(e){o.push(e)})),this.$.loading.hidden=!0,this.set("academics",o),this.set("programs",a)}_makeService(e){let t=i(e).localTarget.getAttribute("data-machine-name");let r=this.activeCourse.topology.Network.filter((e=>e.machine_name===t));r.length>0?(r=r.pop(),this.$.makeservice.params={course:this.activeCourse.attributes.machine_name,service:r.machine_name},this._activeService=r,this.$.confirm.toggleDialog(),setTimeout((()=>{document.querySelector("simple-modal div.buttons button[data-letsdoit]").addEventListener("click",this._confirmBuild.bind(this))}),250)):console.log("that was not a valid service..")}_confirmBuild(e){this.$.makeservice.generateRequest();const t=new CustomEvent("simple-modal-closed",{bubbles:!0,cancelable:!0,detail:{opened:!1,invokedBy:this.querySelector("lrnsys-dialog button[data-letsdoit]")}});this.dispatchEvent(t)}ready(){super.ready(),setTimeout((()=>{window.dispatchEvent(new Event("resize"))}),0)}connectedCallback(){super.connectedCallback(),this.addEventListener("route-change",this._routeChange.bind(this)),setTimeout((()=>{window.dispatchEvent(new Event("resize"))}),1e3)}disconnectedCallback(){this.removeEventListener("route-change",this._routeChange.bind(this)),super.disconnectedCallback()}_loadCourseUrl(e){this.$.loadingCourse.hidden=!1;var t=i(e).localTarget.getAttribute("data-course-id");let r=this.originalCourses.filter((e=>e.id===t));r.length>0&&(r=r.pop()),this.activeCourse=r,this._courseDataParams={id:this.activeCourse.id},this.$.courserequest.generateRequest(),this.$.dialog.toggle()}_coursesCompute(e,t){if(void 0===e)return[];const i=this;let r=[];return r=e.filter((e=>(void 0===i.queryParams.course||e.id===i.queryParams.course)&&((void 0===i.queryParams.program||e.relationships.program.id===i.queryParams.program)&&(void 0===i.queryParams.academic||e.relationships.academic.id===i.queryParams.academic)))),setTimeout((()=>{this.$.ironlist.fire("iron-resize"),window.dispatchEvent(new Event("resize"))}),200),r}_attachDom(e){this.appendChild(e)}}customElements.define(LrnappCis.tag,LrnappCis);export{LrnappCis};