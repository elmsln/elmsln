/**
 * Copyright 2019 PSU
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as o}from"../../lit/index.js";class RCoder extends e{static get styles(){return[o`
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }

        #editor {
          height: var(--r-coder-editor-height, 300px);
          width: var(--r-coder-editor-width, 100%);
        }

        #button {
          margin: var(--r-code-button-margin, 10px 0);
        }
      `]}render(){return t` <code-editor id="editor" language="r"></code-editor>
      <button
        id="button"
        ?disabled="${!this.__connected}"
        @click="${this.process}"
        raised
      >
        Process
      </button>
      <div id="output"></div>`}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!0,gizmo:{title:"R coder",description:"R coder interface for the r-service backend.",icon:"icons:android",color:"green",tags:["Other","developer"],handles:[],meta:{author:"HAXTheWeb core team",owner:"PSU"}},settings:{configure:[{property:"endpoint",description:"",inputMethod:"textfield",required:!1,icon:"icons:android"}],advanced:[]}}}static get properties(){return{...super.properties,endpoint:{type:String},__connected:{type:Boolean}}}static get tag(){return"r-coder"}firstUpdated(){this.ping(),this.shadowRoot.getElementById("editor").editorValue=this.textContent.trim()}constructor(){super(),this.endpoint="/service/r-service",setTimeout((()=>{import("../code-editor/code-editor.js")}),0)}async ping(){const e=await fetch(this.endpoint,{method:"GET"}).then((e=>e.status));this.__connected=200===e}async process(){const e=this.shadowRoot.getElementById("editor").value,t=await fetch(this.endpoint,{method:"POST",body:e}).then((e=>e.text()));this.shadowRoot.getElementById("output").innerText=t}}customElements.define(RCoder.tag,RCoder);export{RCoder};