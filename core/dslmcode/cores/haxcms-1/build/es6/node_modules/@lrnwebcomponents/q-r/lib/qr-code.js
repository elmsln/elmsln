import"../../es-global-bridge/es-global-bridge.js";class QRCodeElement extends HTMLElement{constructor(){super(),this._defineProperty=this._defineProperty.bind(this),this.attachShadow({mode:"open"}),Object.keys(QRCodeElement.defaultAttributes).map(this._defineProperty);const e=new URL("./qr.js",import.meta.url).href;window.addEventListener("es-bridge-qr-loaded",this._qrLoaded.bind(this)),window.ESGlobalBridge.requestAvailability().load("qr",e)}disconnectedCallback(){window.removeEventListener("es-bridge-qr-loaded",this._qrLoaded.bind(this)),super.disconnectedCallback&&super.disconnectedCallback()}static get tag(){return"qr-code"}_qrLoaded(){this.generate()}static get defaultAttributes(){return{data:null,format:"png",modulesize:5,margin:4}}static get observedAttributes(){return Object.keys(QRCodeElement.defaultAttributes)}attributeChangedCallback(e,t,i){let s=this[e+"Changed"];s&&"function"==typeof s&&s.call(this,t,i),!0===window.ESGlobalBridge.requestAvailability().imports.qr&&this.generate()}_defineProperty(e){Object.defineProperty(this,e,{get:()=>{let t=this.getAttribute(e);return null===t?QRCodeElement.defaultAttributes[e]:t},set:t=>{this.setAttribute(e,t)}})}getOptions(){let{modulesize:e,margin:t}=this;return{modulesize:null!==e?parseInt(e):e,margin:null!==t?parseInt(t):t}}generate(){null!==this.data?"png"===this.format?this.generatePNG():"html"===this.format?this.generateHTML():"svg"===this.format?this.generateSVG():this.shadowRoot.innerHTML="<div>qr-code: "+this.format+" not supported!</div>":this.shadowRoot.innerHTML="<div>qr-code: no data!</div>"}generatePNG(){try{let e=document.createElement("img");e.src=window.QRCode.generatePNG(this.data,this.getOptions()),this.clear(),this.shadowRoot.appendChild(e)}catch(e){this.shadowRoot.innerHTML="<div>qr-code: no canvas support!</div>"}}generateHTML(){let e=window.QRCode.generateHTML(this.data,this.getOptions());this.clear(),this.shadowRoot.appendChild(e)}generateSVG(){let e=window.QRCode.generateSVG(this.data,this.getOptions());this.clear(),this.shadowRoot.appendChild(e)}clear(){for(;this.shadowRoot.lastChild;)this.shadowRoot.removeChild(this.shadowRoot.lastChild)}}customElements.define(QRCodeElement.tag,QRCodeElement);export{QRCodeElement};