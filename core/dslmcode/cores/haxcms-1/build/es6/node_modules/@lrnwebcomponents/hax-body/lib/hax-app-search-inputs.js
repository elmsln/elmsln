import{LitElement as e,html as s,css as t}from"../../../lit/index.js";import"../../simple-fields/simple-fields.js";import{HaxSchematizer as a,HaxElementizer as i}from"../../hax-body-behaviors/lib/HAXFields.js";import{HaxTrayDetailHeadings as l}from"./hax-ui-styles.js";class HaxAppSearchInputs extends e{static get styles(){return[...l,t`
        :host {
          display: block;
        }
        .search-label {
          display: flex;
          align-items: center;
          justify-content: space-between;
          width: 100%;
        }
        #cancel {
          flex: 0 0 auto;
        }
      `]}constructor(){super()}render(){return s`
      <h5 class="search-label">
        ${this.label}
        <hax-tray-button
          id="cancel"
          class="${this.searching?"":"visibility-hidden"}"
          icon="close"
          label="Cancel Search"
          event-name="cancel-search"
        >
        </hax-tray-button>
      </h5>
      <simple-fields
        id="form"
        .schema="${this.schema}"
        .schematizer="${a}"
        .elementizer="${i}"
        @value-changed="${this.searchValuesChanged}"
      ></simple-fields>
    `}searchValuesChanged(e){"string"!=typeof e.detail.value&&this.dispatchEvent(new CustomEvent("search-values-changed",{detail:e.detail.value}))}static get tag(){return"hax-app-search-inputs"}static get properties(){return{schema:{type:Object}}}}customElements.define(HaxAppSearchInputs.tag,HaxAppSearchInputs);export{HaxAppSearchInputs};