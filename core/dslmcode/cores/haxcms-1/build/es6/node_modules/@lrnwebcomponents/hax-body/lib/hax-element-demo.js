import{LitElement as e,html as t,css as r}from"../../../lit/index.js";import{HAXStore as i}from"./hax-store.js";import{haxElementToNode as a}from"../../utils/utils.js";import{IntersectionObserverMixin as m}from"../../intersection-element/lib/IntersectionObserverMixin.js";export class HaxElementDemo extends(m(e)){static get tag(){return"hax-element-demo"}constructor(){super(),this.tagName=null,this.activeSchema=-1}static get properties(){return{...super.properties,tagName:{type:String,attribute:"tag-name"},activePickerSchema:{type:Number,attribute:"active-picker-schema"}}}static get styles(){return[r`
        :host {
          display: block;
          overflow: hidden;
          max-width: 200px;
          max-height: 250px;
        }
      `]}render(){return t`<slot></slot>`}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{if("tagName"===t&&this[t]){this.innerHTML="";let e=i.haxSchemaFromTag(this[t]);var r;r=-1!==this.activePickerSchema&&document.querySelector("hax-picker")&&document.querySelector("hax-picker")._elements&&document.querySelector("hax-picker")._elements.length>0?a(document.querySelector("hax-picker")._elements[this.activePickerSchema]):e.gizmo.tag&&e.demoSchema&&e.demoSchema[0]?a(e.demoSchema[0]):document.createElement(this[t]),this.appendChild(r)}}))}}customElements.define(HaxElementDemo.tag,HaxElementDemo);