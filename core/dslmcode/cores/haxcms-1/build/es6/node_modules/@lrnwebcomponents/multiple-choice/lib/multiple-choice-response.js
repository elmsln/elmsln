import{html as e,css as t,LitElement as i}from"../../../lit/index.js";import"../../simple-fields/lib/simple-fields-field.js";class MultipleChoiceResponse extends i{static get styles(){return[t`
        :host {
          display: flex;
          width: 100%;
          justify-content: space-between;
          opacity: 0.6;
        }
        :host(:hover),
        :host(:focus-within) {
          opacity: 1;
          outline: 1px solid;
        }
        #slot {
          flex: 0 0 auto;
        }
        simple-fields-field {
          flex: 0 0 auto;
          margin: 0;
        }
        ::slotted(*) {
          font-size: var(--simple-fields-font-size, 16px);
          text-align: var(--simple-fields-text-align);
          font-family: var(--simple-fields-font-family, sans-serif);
          line-height: var(--simple-fields-line-height, 22px);
        }
      `]}static get tag(){return"multiple-choice-response"}static get haxProperties(){return new URL(`./${this.tag}.haxProperties.json`,import.meta.url).href}constructor(){super(),this.correct=!1,this.type="checkbox",this.__fieldLabel||fetch(MultipleChoiceResponse.haxProperties).then((e=>e.json())).then((e=>{let t=((e.settings||{}).configure||[]).filter((e=>"correct"===e.property))[0]||{};this.__fieldLabel=t.description||t.title}))}_handleClick(e){this.correct=e.detail.value}render(){return e` <slot id="slot" property="oer:answer"></slot>
      <simple-fields-field
        label="${this.__fieldLabel||"Is this response correct?"}"
        aria-describedby="slot"
        type="${this.type}"
        @value-changed="${this._handleClick}"
        .value="${!!this.correct}"
      ></simple-fields-field>`}static get properties(){return{...super.properties,correct:{type:Boolean},disabled:{type:Boolean},text:{type:String},answerId:{type:String,attribute:"answer-id",reflect:!0},__fieldLabel:{type:String}}}}customElements.define(MultipleChoiceResponse.tag,MultipleChoiceResponse);export{MultipleChoiceResponse};