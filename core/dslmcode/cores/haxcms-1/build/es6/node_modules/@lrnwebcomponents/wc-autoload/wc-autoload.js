/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 *
 */
import"../dynamic-import-registry/dynamic-import-registry.js";window.WCAutoload=window.WCAutoload||{},window.WCAutoloadRegistry=window.WCAutoloadRegistry||{},window.WCAutoload.requestAvailability=()=>(window.WCAutoload.instance||(window.WCAutoload.instance=document.createElement("wc-autoload"),document.body.appendChild(window.WCAutoload.instance)),window.WCAutoload.instance);const fetch_retry=async(t,e,o)=>{for(let a=0;a<o;a++)try{return await fetch(t,e)}catch(t){if(a+1===o)throw t}};window.WCAutoload.process=t=>new Promise(((t,e)=>{var o=window.WCAutoload.requestAvailability();o.loaded=!0;var a={};if(window.WCAutoloadRegistryFileProcessed){let e=document;o.target&&(e=o.target,o.processNewElement(e)),e.querySelectorAll("*").forEach((t=>{t.tagName&&!a[t.tagName]&&(o.processNewElement(t),a[t.tagName]=t.tagName)})),t("autoloader already processed")}else setTimeout((async()=>{if(window.WCAutoloadBasePath?o.registry.basePath=window.WCAutoloadBasePath:window.WCGlobalBasePath&&(o.registry.basePath=window.WCGlobalBasePath),window.WCAutoloadRegistryFile&&!window.WCAutoloadRegistryFileProcessed){"string"==typeof window.WCAutoloadRegistryFile&&(window.WCAutoloadRegistryFile=[window.WCAutoloadRegistryFile]);for(var e=0;e<window.WCAutoloadRegistryFile.length;e++)await fetch_retry(window.WCAutoloadRegistryFile[e],{},3).then((function(t){return t.json()})).then((function(t){window.WCAutoloadRegistryFileProcessed=!0,window.WCAutoloadRegistry={...window.WCAutoloadRegistry,...t}}))}if(window.WCAutoloadRegistry)for(var e in window.WCAutoloadRegistry)o.registry.register({tag:e,path:window.WCAutoloadRegistry[e]});let i=document;o.target&&(i=o.target,o.processNewElement(i)),i.querySelectorAll("*").forEach((t=>{t.tagName&&!a[t.tagName]&&(o.processNewElement(t),a[t.tagName]=t.tagName)})),t("autoloader processed on the fly")}),0)})),window.addEventListener("load",window.WCAutoload.process),window.WCAutoload.postLoaded=t=>{setTimeout((()=>{let e=window.WCAutoload.requestAvailability();e.loaded&&document.querySelectorAll(t.detail.tag).length>0&&e.registry.loadDefinition(t.detail.tag)}),0)},window.addEventListener("dynamic-import-registry--new-registration",window.WCAutoload.postLoaded);class WcRegistry extends HTMLElement{static get tag(){return"wc-registry"}constructor(){super(),this.loader=window.WCAutoload.requestAvailability()}connectedCallback(){setTimeout((()=>{if(this.children.length>0&&"TEMPLATE"==this.children[0].tagName)try{let e=JSON.parse(this.children[0].content.textContent);for(var t in e)this.loader.registry.register({tag:t,path:e[t]})}catch(t){console.warn(t)}}),0)}}customElements.define(WcRegistry.tag,WcRegistry);class WcAutoload extends HTMLElement{static get tag(){return"wc-autoload"}constructor(){super(),this.loaded=!1,this.registry=window.DynamicImportRegistry.requestAvailability(),this.options={childList:!0,subtree:!0}}connectedCallback(){this._mutationObserver=new MutationObserver((t=>{t.forEach((t=>{t.addedNodes.forEach((t=>{this.processNewElement(t)}))}))})),window.WCAutoloadOptions&&(this.options=window.WCAutoloadOptions),setTimeout((()=>{window.WCAutoloadTarget?this.target=window.WCAutoloadTarget:this.target=document.body,this._mutationObserver.observe(this.target,this.options)}),0)}disconnectedCallback(){this._mutationObserver.disconnect()}processNewElement(t){t.tagName&&t.tagName.includes("-")&&"DYNAMIC-IMPORT-REGISTRY"!=t.tagName&&"WC-REGISTRY"!=t.tagName&&"WC-AUTOLOAD"!=t.tagName&&this.registry.loadDefinition(t.tagName)}}customElements.define(WcAutoload.tag,WcAutoload);export{WcAutoload};