import{css as e}from"../../../lit/index.js";import{SimpleColors as t}from"../../simple-colors/simple-colors.js";import{SimpleTagLiteSuper as o}from"./simple-tag-lite.js";import{SimpleFieldsButtonStyles as s,SimpleFieldsTooltipStyles as l}from"./simple-fields-ui.js";export class SimpleTag extends(o(t)){constructor(){super(),this.autoAccentColor=!1}updated(e){super.updated(e),this.shadowRoot&&(e.has("autoAccentColor")||e.has("value"))&&this.value&&this.autoAccentColor&&(this.accentColor=this.calculateAccentColor(this.value))}calculateAccentColor(e){let t=54;for(let o=0;o<e.length;o++)o<32&&(t*=e.charCodeAt(o));t+="",t.length>8&&(t=t.substring(5,7));let o=Array.from(Object.keys(this.colors))[t[0]],s=0!==parseInt(t[1])?parseInt(t[1]):1;[5,6,7].includes(s)?s-=3:[8,9].includes(s)&&(s+=2);const l=this.getContrastingColors(o,s,!1);let r=l.grey[0];return s<5&&(r=l.grey.pop()),this.style.setProperty("--simple-fields-button-background-color",`var(--simple-colors-default-theme-accent-${s}, orange)`),this.style.setProperty("--simple-fields-button-color",`var(--simple-colors-fixed-theme-grey-${r}, black)`),o}static get properties(){return{...super.properties,autoAccentColor:{type:Boolean,attribute:"auto-accent-color"}}}static get styles(){return[...super.styles,s,l,e`
        :host {
          --simple-fields-button-color: var(
            --simple-colors-default-theme-accent-12,
            #222222
          );
          --simple-fields-fieldset-border-color: var(
            --simple-colors-default-theme-accent-3,
            #eeeeee
          );
          --simple-fields-button-background-color: var(
            --simple-colors-default-theme-accent-3,
            #eeeeee
          );
        }
      `]}static get tag(){return"simple-tag"}}customElements.define(SimpleTag.tag,SimpleTag);