import{LitElement as t,html as e,css as i}from"../../../lit/index.js";import{HaxToolbarItemBehaviors as o}from"./hax-toolbar-item.js";import"../../simple-icon/lib/simple-icon-lite.js";import{HAXStore as n}from"./hax-store.js";class HaxContextItem extends(o(t)){constructor(){super(),this.haxUIElement=!0,this.action=!1,this.more=!1,this.eventName="button",this.inputMethod=null,this.propertyToBind=null,this.slotToBind=null,this.value=""}static get tag(){return"hax-context-item"}static get properties(){return{...super.properties,more:{type:Boolean},action:{type:Boolean},label:{type:String,reflect:!0},inputMethod:{type:String,reflect:!0,attribute:"input-method"},propertyToBind:{type:String,reflect:!0,attribute:"property-to-bind"},slotToBind:{type:String,reflect:!0,attribute:"slot-to-bind"},description:{type:String,reflect:!0},default:{type:Boolean},value:{type:String}}}_handleMousedown(t){this.disabled||(n._tmpSelection=n.getSelection())}_handleClick(t){this.disabled||this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:this,eventName:this.eventName,value:this.value}}))}}customElements.define(HaxContextItem.tag,HaxContextItem);export{HaxContextItem};