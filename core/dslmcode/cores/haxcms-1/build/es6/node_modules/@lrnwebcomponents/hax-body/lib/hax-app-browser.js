import{LitElement as t,html as e,css as i}from"../../../lit/index.js";import"./hax-tray-button.js";import{HAXStore as s}from"./hax-store.js";import{autorun as a,toJS as p}from"../../../mobx/dist/mobx.esm.js";class HaxAppBrowser extends t{static get styles(){return[i`
        :host {
          overflow-y: auto;
          position: relative;
        }
        simple-button-grid {
          overflow: auto;
        }
        simple-button-grid.collapse-hide {
          max-height: 0 !important;
          transition: all 0.5s;
        }
        hax-tray-button {
          font-size: 11px;
          --hax-ui-font-size-sm: 11px;
        }
        .visibility-hidden {
          z-index: -1;
          visibility: hidden;
          opacity: 0;
          height: 0;
          transition: all 0.5s;
        }
      `]}constructor(){super(),this.addEventListener("hax-tray-button-click",(t=>{"search-selected"===t.detail.eventName?(this.searching=!0,s.activeApp=p(this.appList[t.detail.index])):"cancel-search"===t.detail.eventName&&(this.searching=!1)})),this.searching=!1,this.appList=[],this.activeApp=null,this.hasActive=!1,import("./hax-app-search.js"),import("../../simple-toolbar/lib/simple-button-grid.js"),a((()=>{this.appList=p(s.appList)})),a((()=>{this.activeApp=p(s.activeApp)}))}render(){return e`
      <simple-button-grid
        class="${this.searching?"collapse-hide":""}"
        always-expanded
        columns="4"
      >
        ${this.appList.map((t=>e`
            <hax-tray-button
              class="${this.searching?"visibility-hidden":""}"
              show-text-label
              icon-position="top"
              index="${t.index}"
              label="${t.details.title}"
              icon="${t.details.icon}"
              color="${t.details.color}"
              event-name="search-selected"
              event-data="${t.index}"
            >
            </hax-tray-button>
          `))}
      </simple-button-grid>
      <hax-app-search
        id="haxappsearch"
        class="${this.searching?"":"visibility-hidden"}"
      ></hax-app-search>
      <slot></slot>
    `}static get tag(){return"hax-app-browser"}static get properties(){return{search:{type:String},searching:{type:Boolean,reflect:!0},activeApp:{type:Object},hasActive:{reflect:!0,type:Boolean,attribute:"has-active"},appList:{type:Array}}}updated(t){t.forEach(((t,e)=>{"activeApp"==e&&this[e]&&this._activeAppChanged(this[e],t),"appList"==e&&this[e]&&this.shadowRoot&&(this.searching=!1)}))}_activeAppChanged(t,e){this.hasActive=void 0!==e&&null!=t}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.searching=!1}}customElements.define(HaxAppBrowser.tag,HaxAppBrowser);export{HaxAppBrowser};