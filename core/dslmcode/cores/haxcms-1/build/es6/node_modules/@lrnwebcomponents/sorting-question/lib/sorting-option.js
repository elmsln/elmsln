import{LitElement as r,html as t,css as o}from"../../../lit/index.js";import"../../simple-icon/lib/simple-icons.js";import"../../simple-icon/lib/simple-icon-lite.js";export class SortingOption extends r{static get tag(){return"sorting-option"}static get properties(){return{disabled:{type:Boolean}}}constructor(){super(),this.option="option",this.setAttribute("draggable",!0),this.addEventListener("mousedown",this.getCurrentPosition),this.addEventListener("drag",this.dragStart),this.addEventListener("dragend",this.dragEnd),this.addEventListener("mouseup",this.dragEnd)}getCurrentPosition(r){if(!this.disabled){this.style.backgroundColor="darkgray",this.removeAttribute("correct"),this.removeAttribute("incorrect");var t=r.clientY;this.currentPosition=t}}dragStart(r){if(!this.disabled){var t=30;this.querySelectorAll("img").length>0&&(t=70);var o=r.clientY;0!=o&&o>0&&(this.dragPosition=o);var i=this,e=this.parentNode;if(this.dragPosition+t<this.currentPosition){for(var n=0;n<e.children.length;n++)e.children[n].isEqualNode(i)&&(s=n);if(0!=s)return e.insertBefore(i,e.children[s-1]),void(this.currentPosition=this.dragPosition)}if(this.dragPosition-t>this.currentPosition){var s;for(n=0;n<e.children.length;n++)e.children[n].isEqualNode(i)&&(s=n);if(s!=e.children.length-1)return e.insertBefore(e.children[s+1],i),void(this.currentPosition=this.dragPosition)}}}dragEnd(){this.disabled||(this.style.backgroundColor="white")}upArrowSort(r){if(!this.disabled){var t,o=r.parentNode;o.childNodes.forEach((r=>{"SORTING-OPTION"===r.tagName&&(r.style.backgroundColor="white")})),this.style.backgroundColor="darkgray";for(var i=0;i<o.children.length;i++)o.children[i].isEqualNode(r)&&(t=i);if(0!=t)return o.insertBefore(r,o.children[t-1]),void this.shadowRoot.querySelector("#upArrow").focus()}}downArrowSort(r){if(!this.disabled){var t,o=r.parentNode;o.childNodes.forEach((r=>{"SORTING-OPTION"===r.tagName&&(r.style.backgroundColor="white")})),this.style.backgroundColor="darkgray";for(var i=0;i<o.children.length;i++)o.children[i].isEqualNode(r)&&(t=i);if(t!=o.children.length-1)return void o.insertBefore(o.children[t+1],r)}}firstUpdated(r){super.firstUpdated&&super.firstUpdated(r);var t=this;this.shadowRoot.querySelector("#upArrow").addEventListener("click",(function(){t.upArrowSort(t)})),this.shadowRoot.querySelector("#upArrow").addEventListener("keypress",(function(r){"Enter"===r.key&&t.upArrowSort(t)})),this.shadowRoot.querySelector("#downArrow").addEventListener("click",(function(){t.downArrowSort(t)})),this.shadowRoot.querySelector("#downArrow").addEventListener("keypress",(function(r){"Enter"===r.key&&t.downArrowSort(t)}))}static get styles(){return o`
      :host {
        border: 2px black solid;
        border-radius: 5px;
        width: 95%;
        margin-top: 5px;
        margin-bottom: 5px;
        height: 100%;
        min-height: 25px;
        display: flex;
        align-items: center;
        box-shadow: 1px 1px 1px;
        cursor: grab;
        z-index: 1;
        background-color: var(--option-background-color, white);
        overflow: hidden;
      }

      :host([correct]) {
        transition: background-color 0.7s linear;
        background-color: var(
          --option-background-color-correct,
          #3deb3dcc
        ) !important;
      }

      :host([incorrect]) {
        transition: background-color 0.7s linear;
        background-color: var(
          --option-background-color-incorrect,
          #f94343f7
        ) !important;
      }

      .option-slot-wrapper {
        display: flex;
        align-items: center;
        z-index: 2;
        width: 100%;
        height: 100%;
        background-color: transparent;
        border: none;
        text-align: inherit;
        font-weight: bold;
      }
      :host button {
        cursor: grab;
        font-weight: bold;
      }
      :host button:active {
        cursor: grabbing;
      }

      ::slotted(*) {
        max-height: 75px;
      }

      .arrow-container {
        display: flex;
        justify-content: flex-end;
        padding-right: 5px;
        position: relative;
        right: 0px;
        width: 20%;
        height: 100%;
        background-color: transparent;
        align-items: center;
      }

      .arrow {
        height: 15px;
        width: 15px;
        border-style: solid;
        border-width: 1px;
        border-color: black;
        cursor: pointer;
        margin-left: 1px;
        margin-right: 1px;
        border-radius: 5px;
        box-shadow: 0px 0px 1px 0px;
      }

      .up-arrow {
        transform: rotate(270deg);
      }

      .down-arrow {
        transform: rotate(90deg);
      }

      .feedback-container {
        width: fit-content;
        display: flex;
        height: 100%;
        align-items: center;
        padding-left: 5px;
        background-color: transparent;
      }

      #correct-icon {
        display: none;
        height: 15px;
        width: 15px;
        border-radius: 2px;
        box-shadow: 0px 1px 1px 0px;
      }

      #incorrect-icon {
        display: none;
        height: 15px;
        width: 15px;
        border-radius: 2px;
        box-shadow: 0px 1px 1px 0px;
      }
    `}render(){return t`
      <div class="feedback-container">
        <simple-icon-lite
          id="correct-icon"
          icon="check"
          alt="correct answer"
        ></simple-icon-lite>
        <simple-icon-lite
          id="incorrect-icon"
          icon="clear"
          alt="incorrect answer"
        ></simple-icon-lite>
      </div>
      <button tabindex="-1" class="option-slot-wrapper"><slot></slot></button>
      <div class="arrow-container">
        <simple-icon-button-lite
          id="upArrow"
          icon="arrow-upward"
          @click="${this.upArrowSort}"
          alt="up arrow click me to move the option up"
        ></simple-icon-button-lite>
        <simple-icon-button-lite
          id="downArrow"
          icon="arrow-downward"
          @click="${this.downArrowSort}"
          alt="down arrow click me to move the option down"
        ></simple-icon-button-lite>
      </div>
    `}}globalThis.customElements.define(SortingOption.tag,SortingOption);