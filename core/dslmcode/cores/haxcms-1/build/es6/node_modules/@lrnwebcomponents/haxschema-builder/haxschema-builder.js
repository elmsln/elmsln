/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as a}from"../../lit/index.js";import"../json-editor/json-editor.js";import"../code-editor/code-editor.js";import"../../@vaadin/vaadin-split-layout/vaadin-split-layout.js";import"./lib/hax-schema-form.js";import{HAXWiring as i}from"../hax-body-behaviors/hax-body-behaviors.js";class HaxschemaBuilder extends e{static get styles(){return[a`
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }

        code-editor {
          height: 500px;
        }
      `]}render(){return t` <vaadin-split-layout>
      <div>
        <button @click="${this.addConfigure}">Add to configure</button>
        <button @click="${this.addAdvanced}">Add to advanced</button>
        <code-editor
          id="code"
          @value-changed="${this._editorDataChanged}"
          .value="{}"
          language="json"
        ></code-editor>
        <json-editor
          id="json"
          label="JSON"
          @value-changed="${this.__haxSchemaChanged}"
          value="${this.haxSchema}"
        ></json-editor>
      </div>
      <div>
        <hax-schema-form
          id="form"
          value="${this.value}"
          @value-changed="${this.__valueChanged}"
        ></hax-schema-form>
      </div>
    </vaadin-split-layout>`}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!0,gizmo:{title:"Haxschema builder",description:"dynamically build and visualize HAXschema",icon:"icons:android",color:"green",groups:["Builder"],handles:[],meta:{author:"HAXTheWeb",owner:"The Pennsylvania State University"}},settings:{configure:[{property:"source",description:"",inputMethod:"textfield",required:!0,icon:"icons:link",validationType:"url"}],advanced:[]}}}static get properties(){return{...super.properties,haxSchema:{type:String,attribute:"hax-schema"},source:{type:String},value:{type:String}}}static get tag(){return"haxschema-builder"}constructor(){super(),this.HAXWiring=new i,this.haxSchema="{}"}updated(e){e.forEach(((e,t)=>{"haxSchema"==t&&(this.dispatchEvent(new CustomEvent("hax-schema-changed",{value:this[t]})),this._haxSchemaChanged(this[t],e))}))}firstUpdated(){setTimeout((()=>{this.source||(this.haxSchema=JSON.stringify(this.HAXWiring.prototypeHaxProperties(),null,2))}),0),this.shadowRoot.querySelector("#form").modeTab="advanced",setTimeout((()=>{this.shadowRoot.querySelector("#form").modeTab="configure"}),2e3)}_haxSchemaChanged(e){e&&(this.shadowRoot.querySelector("#code").editorValue=e)}_editorDataChanged(e){this.haxSchema=e.detail.value;let t=JSON.parse(this.haxSchema);for(var a in t.settings){let e=this.HAXWiring.getHaxJSONSchema(a,t);this.shadowRoot.querySelector("#form")[a+"Schema"]=Object.assign({},e)}}addAdvanced(e){let t=JSON.parse(this.haxSchema);t.settings.advanced.push(this.__propPrototype()),this.__refreshSchemas(t)}addConfigure(e){let t=JSON.parse(this.haxSchema);t.settings.configure.push(this.__propPrototype()),this.__refreshSchemas(t)}__refreshSchemas(e){for(var t in e.settings){let a=this.HAXWiring.getHaxJSONSchema(t,e);this.shadowRoot.querySelector("#form")[t+"Schema"]=Object.assign({},a)}this.haxSchema=JSON.stringify(e)}__propPrototype(){return{property:"title",title:"Title",description:"",inputMethod:"textfield",icon:"android",required:!0,validationType:"text"}}__haxSchemaChanged(e){this.haxSchema=e.detail.value}__valueChanged(e){this.value=e.detail.value}}customElements.define(HaxschemaBuilder.tag,HaxschemaBuilder);export{HaxschemaBuilder};