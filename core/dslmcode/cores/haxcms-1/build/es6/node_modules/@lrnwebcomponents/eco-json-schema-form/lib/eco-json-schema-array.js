import{html as e,PolymerElement as o}from"../../../@polymer/polymer/polymer-element.js";import{AppLocalizeBehavior as a}from"../../../@polymer/app-localize-behavior/app-localize-behavior.js";import{mixinBehaviors as t}from"../../../@polymer/polymer/lib/legacy/class.js";import"../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js";import"../../../@polymer/polymer/lib/elements/dom-repeat.js";import"../../simple-icon/simple-icon.js";import"../../simple-icon/lib/simple-icons.js";import"../../simple-icon/lib/simple-icon-button.js";class EcoJsonSchemaArray extends(t([a],o)){static get tag(){return"eco-json-schema-array"}constructor(){super(),setTimeout((()=>{import("../../simple-tooltip/simple-tooltip.js"),import("../../a11y-collapse/a11y-collapse.js"),import("../../a11y-collapse/lib/a11y-collapse-group.js")}),0)}static get template(){return e`
      <style include="iron-flex iron-flex-alignment">
        :host {
          color: var(--eco-json-form-color);
          background-color: var(--eco-json-form-bg);
          font-family: var(--eco-json-form-font-family);
        }
        :host([hidden]),
        [hidden] {
          display: none;
        }
        :host fieldset {
          border-radius: var(--eco-json-form-border-radius);
          border-style: solid;
          border-width: 1px;
          border-color: var(--eco-json-form-faded-color);
          transition: all 0.5s;
        }
        :host legend {
          transition: all 0.5s;
          color: var(--eco-json-form-faded-color);
        }
        :host fieldset:focus #legend,
        :host fieldset:focus-within #legend {
          color: var(--eco-json-form-active-color);
        }
        :host .array-item-button {
          color: var(--eco-json-form-faded-color);
          background-color: var(--eco-json-form-bg);
          text-transform: none;
          margin-bottom: 0;
        }
        :host .array-item-button:focus,
        :host .array-item-button:hover {
          color: var(--eco-json-form-active-color);
        }
        :host .add-array-item iron-icon {
          padding: 8px;
        }
        :host .add-array-item {
          color: var(--eco-json-form-add-color);
          border-radius: 0 0 var(--eco-json-form-border-radius);
          border: 1px solid var(--eco-json-form-bg);
          margin: 0;
          padding: 0 8px 0 16px;
          display: flex;
          align-items: center;
          justify-content: space-between;
        }
        :host .add-array-item:focus,
        :host .add-array-item:hover {
          color: var(--eco-json-form-add-color);
          background-color: var(--eco-json-form-faded-bg);
          border: 1px solid var(--eco-json-form-faded-color);
        }
        :host .remove-array-item {
          color: var(--eco-json-form-remove-color);
          background-color: var(--eco-json-form-bg);
          margin: 15px 0 0 0;
          border-radius: 100%;
        }
        :host .remove-array-item:focus,
        :host .remove-array-item:hover {
          color: var(--eco-json-form-remove-color);
          background-color: var(--eco-json-form-faded-bg);
        }
        :host a11y-collapse-group {
          margin: 0;
          border-radius: var(--eco-json-form-border-radius);
          --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);
        }
        :host a11y-collapse {
          border: 1px solid var(--eco-json-form-bg);
          --a11y-collapse-padding-right: 8px;
          --a11y-collapse-heading-color: var(--eco-json-form-faded-color);
          --a11y-collapse-heading-background-color: var(--eco-json-form-bg);
          --a11y-collapse-heading-font-weight: normal;
          --a11y-collapse-heading-margin: 0;
          --a11y-collapse-icon-padding: 8px;
        }
        :host a11y-collapse:focus,
        :host a11y-collapse:hover,
        :host a11y-collapse[expanded] {
          border: 1px solid var(--eco-json-form-faded-color);
          --a11y-collapse-heading-color: var(--eco-json-form-color);
          --a11y-collapse-heading-background-color: var(
            --eco-json-form-faded-bg
          );
          --a11y-collapse-heading-font-weight: normal;
          --a11y-collapse-heading-margin: 0;
        }
        :host p[slot="heading"] {
          margin: 0;
        }
        :host div[slot="content"] > div {
          width: 100%;
          display: flex;
          align-items: flex-end;
          justify-content: space-between;
        }
        :host .item-fields {
          flex: 1 0 auto;
        }
      </style>
      <fieldset>
        <legend id="legend" class="flex" hidden$="[[!schema.title]]">
          [[schema.title]]
        </legend>
        <a11y-collapse-group
          id="form"
          icon="settings"
          class="vertical flex layout"
          global-options="[[globalOptions]]"
        >
          <template is="dom-repeat" items="[[schema.value]]" as="item">
            <a11y-collapse
              accordion
              id$="item-[[index]]"
              icon$="[[globalOptions.icon]]"
              tooltip$="[[globalOptions.tooltip]]"
            >
              <p slot="heading">
                [[_getHeading(__headings.*,schema.label,index)]]
              </p>
              <div slot="content">
                <div>
                  <div
                    id$="value-[[index]]"
                    class="item-fields"
                    data-index$="[[index]]"
                  ></div>
                  <simple-icon-button
                    id="remove-[[index]]"
                    icon="icons:delete"
                    aria-label="Remove this item"
                    aria-describedby="item-[[index]]"
                    class="remove-array-item array-item-button"
                    controls="item-[[index]]"
                    on-tap="_onRemoveItem"
                    role="button"
                  >
                  </simple-icon-button>
                  <simple-tooltip for="remove-[[index]]"
                    >Remove this item</simple-tooltip
                  >
                </div>
              </div>
            </a11y-collapse>
          </template>
        </a11y-collapse-group>
        <button
          class="add-array-item array-item-button"
          on-click="_onAddItem"
          role="button"
        >
          Add an item
          <simple-icon icon="add-circle"></simple-icon>
        </button>
      </fieldset>
    `}_toArray(e){return null==e?[]:Object.keys(e).map((function(o){return e[o]}))}static get properties(){return{globalOptions:{type:Object,value:{icon:"settings",tooltip:"configure item"},notify:!0},propertyName:{type:String,value:null},schema:{type:Object,value:{},notify:!0,observer:"_schemaChanged"},__headings:{type:Array,value:[],notify:!0}}}ready(){super.ready(),this.__headings=[],this._schemaChanged(),this.addEventListener("form-field-changed",(e=>{this._updateHeadings(e)}))}disconnectedCallback(){this.removeEventListener("form-field-changed",(e=>{this._updateHeadings(e)})),super.disconnectedCallback()}_schemaChanged(){setTimeout((()=>{let e=this.schema.items.itemLabel;this.schema&&Array.isArray(this.schema.value)&&this.schema.value.forEach((o=>{this.push("__headings",o[e])})),this.shadowRoot.querySelectorAll(".item-fields").forEach((e=>{let o=e.getAttribute("data-index"),a=`${this.propertyPrefix}${this.propertyName}`,t=`${a}.${o}`,r=this.schema.value[o];this.dispatchEvent(new CustomEvent("build-fieldset",{bubbles:!1,cancelable:!0,composed:!0,detail:{container:e,path:a,prefix:t,properties:this.schema.properties.map((e=>{let o=JSON.parse(JSON.stringify(e));return o.value=r[e.name],o})),type:EcoJsonSchemaArray.tag,value:this.schema.value||[]}}))}))}),0)}_onAddItem(e){let o={};this.schema.properties.forEach((e=>{o[e.name]=e.value})),this.push("schema.value",o),this.notifyPath("schema.*"),this.notifyPath("schema.value.*"),this._schemaChanged()}_onRemoveItem(e){let o=e.target.controls.replace(/item-/,"");this.splice("schema.value",o,1),this.notifyPath("schema.*"),this.notifyPath("schema.value.*"),this._schemaChanged()}_updateHeadings(e){let o=e.detail.getAttribute("name"),a=e.detail.value,t=o?o.split("."):[],r=t.length>2?t[t.length-2]:null,i=e.detail.propertyName===this.schema.items.itemLabel?a:this.__headings[r];r&&this.set(`__headings.${r}`,i)}_getHeading(e,o,a){return this.__headings&&this.__headings[a]&&"string"==typeof this.__headings[a]&&""!==this.__headings[a].trim("")?this.__headings[a].trim(""):o&&"string"==typeof o&&""!==o.trim("")?`${o.trim("")} ${a+1}`:`Item ${a+1}`}}customElements.define(EcoJsonSchemaArray.tag,EcoJsonSchemaArray);export{EcoJsonSchemaArray};