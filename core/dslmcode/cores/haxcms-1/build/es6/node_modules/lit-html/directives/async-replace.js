import{noChange as e}from"../lit-html.js";import{AsyncDirective as t}from"../async-directive.js";import{PseudoWeakRef as s,Pauser as i,forAwaitOf as r}from"./private-async-helpers.js";import{directive as n}from"../directive.js";
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */class kt extends t{constructor(){super(...arguments),this.K=new s(this),this.X=new i}render(t,s){return e}update(t,[s,i]){if(this.isConnected||this.disconnected(),s===this.J)return e;this.J=s;let n=0;const{K:c,X:o}=this;return r(s,(async e=>{for(;o.get();)await o.get();const t=c.deref();if(void 0!==t){if(t.J!==s)return!1;void 0!==i&&(e=i(e,n)),t.commitValue(e,n),n++}return!0})),e}commitValue(e,t){this.setValue(e)}disconnected(){this.K.disconnect(),this.X.pause()}reconnected(){this.K.reconnect(this),this.X.resume()}}const c=n(kt);export{kt as AsyncReplaceDirective,c as asyncReplace};