/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
import{html as t,svg as i}from"./lit-html.js";const e=Symbol.for(""),unwrapStaticValue=t=>{if((null==t?void 0:t.r)===e)return null==t?void 0:t._$litStatic$};export const unsafeStatic=t=>({_$litStatic$:t,r:e});export const literal=(t,...i)=>({_$litStatic$:i.reduce(((i,e,o)=>i+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`)})(e)+t[o+1]),t[0]),r:e});const o=new Map;export const withStatic=t=>(i,...e)=>{const r=e.length;let s,l;const a=[],n=[];let c,u=0,$=!1;for(;u<r;){for(c=i[u];u<r&&void 0!==(l=e[u],s=unwrapStaticValue(l));)c+=s+i[++u],$=!0;u!==r&&n.push(l),a.push(c),u++}if(u===r&&a.push(i[r]),$){const t=a.join("$$lit$$");void 0===(i=o.get(t))&&(a.raw=a,o.set(t,i=a)),e=n}return t(i,...e)};export const html=withStatic(t);export const svg=withStatic(i);