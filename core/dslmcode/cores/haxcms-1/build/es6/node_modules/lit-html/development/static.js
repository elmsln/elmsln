/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
import{html as t,svg as e,mathml as i}from"./lit-html.js";const o=Symbol.for(""),unwrapStaticValue=t=>{if(t?.r===o)return t?._$litStatic$};export const unsafeStatic=t=>({_$litStatic$:t,r:o});export const literal=(t,...e)=>({_$litStatic$:e.reduce(((e,i,o)=>e+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`)})(i)+t[o+1]),t[0]),r:o});const r=new Map;export const withStatic=t=>(e,...i)=>{const o=i.length;let s,a;const l=[],c=[];let n,u=0,$=!1;for(;u<o;){for(n=e[u];u<o&&void 0!==(a=i[u],s=unwrapStaticValue(a));)n+=s+e[++u],$=!0;u!==o&&c.push(a),l.push(n),u++}if(u===o&&l.push(e[o]),$){const t=l.join("$$lit$$");void 0===(e=r.get(t))&&(l.raw=l,r.set(t,e=l)),i=c}return t(e,...i)};export const html=withStatic(t);export const svg=withStatic(e);export const mathml=withStatic(i);