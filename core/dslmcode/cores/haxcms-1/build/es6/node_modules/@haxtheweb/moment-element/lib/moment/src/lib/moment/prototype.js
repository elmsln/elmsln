import{Moment as e}from"./constructor.js";var o=e.prototype;import{add as t,subtract as s}from"./add-subtract.js";import{calendar as r,getCalendarFormat as i}from"./calendar.js";import{clone as m}from"./clone.js";import{isBefore as a,isBetween as n,isSame as f,isAfter as d,isSameOrAfter as p,isSameOrBefore as c}from"./compare.js";import{diff as u}from"./diff.js";import{format as j,toString as l,toISOString as y,inspect as h}from"./format.js";import{from as k,fromNow as w}from"./from.js";import{to as O,toNow as S}from"./to.js";import{stringGet as g,stringSet as z}from"./get-set.js";import{locale as A,localeData as D,lang as U}from"./locale.js";import{prototypeMin as Y,prototypeMax as b}from"./min-max.js";import{startOf as W,endOf as v}from"./start-end-of.js";import{valueOf as x,toDate as I,toArray as N,toObject as T,toJSON as q,unix as B}from"./to-type.js";import{isValid as L,parsingFlags as C,invalidAt as F}from"./valid.js";import{creationData as H}from"./creation-data.js";o.add=t,o.calendar=r,o.clone=m,o.diff=u,o.endOf=v,o.format=j,o.from=k,o.fromNow=w,o.to=O,o.toNow=S,o.get=g,o.invalidAt=F,o.isAfter=d,o.isBefore=a,o.isBetween=n,o.isSame=f,o.isSameOrAfter=p,o.isSameOrBefore=c,o.isValid=L,o.lang=U,o.locale=A,o.localeData=D,o.max=b,o.min=Y,o.parsingFlags=C,o.set=z,o.startOf=W,o.subtract=s,o.toArray=N,o.toObject=T,o.toDate=I,o.toISOString=y,o.inspect=h,o.toJSON=q,o.toString=l,o.unix=B,o.valueOf=x,o.creationData=H;import{getSetYear as J,getIsLeapYear as M}from"../units/year.js";o.year=J,o.isLeapYear=M;import{getSetWeekYear as V,getSetISOWeekYear as Z,getWeeksInYear as E,getISOWeeksInYear as G}from"../units/week-year.js";o.weekYear=V,o.isoWeekYear=Z;import{getSetQuarter as K}from"../units/quarter.js";o.quarter=o.quarters=K;import{getSetMonth as P,getDaysInMonth as Q}from"../units/month.js";o.month=P,o.daysInMonth=Q;import{getSetWeek as R,getSetISOWeek as X}from"../units/week.js";o.week=o.weeks=R,o.isoWeek=o.isoWeeks=X,o.weeksInYear=E,o.isoWeeksInYear=G;import{getSetDayOfMonth as $}from"../units/day-of-month.js";import{getSetDayOfWeek as _,getSetISODayOfWeek as ee,getSetLocaleDayOfWeek as oe}from"../units/day-of-week.js";import{getSetDayOfYear as te}from"../units/day-of-year.js";o.date=$,o.day=o.days=_,o.weekday=oe,o.isoWeekday=ee,o.dayOfYear=te;import{getSetHour as se}from"../units/hour.js";o.hour=o.hours=se;import{getSetMinute as re}from"../units/minute.js";o.minute=o.minutes=re;import{getSetSecond as ie}from"../units/second.js";o.second=o.seconds=ie;import{getSetMillisecond as me}from"../units/millisecond.js";o.millisecond=o.milliseconds=me;import{getSetOffset as ae,setOffsetToUTC as ne,setOffsetToLocal as fe,setOffsetToParsedOffset as de,hasAlignedHourOffset as pe,isDaylightSavingTime as ce,isDaylightSavingTimeShifted as ue,getSetZone as je,isLocal as le,isUtcOffset as ye,isUtc as he}from"../units/offset.js";o.utcOffset=ae,o.utc=ne,o.local=fe,o.parseZone=de,o.hasAlignedHourOffset=pe,o.isDST=ce,o.isLocal=le,o.isUtcOffset=ye,o.isUtc=he,o.isUTC=he;import{getZoneAbbr as ke,getZoneName as we}from"../units/timezone.js";o.zoneAbbr=ke,o.zoneName=we;import{deprecate as Oe}from"../utils/deprecate.js";o.dates=Oe("dates accessor is deprecated. Use date instead.",$),o.months=Oe("months accessor is deprecated. Use month instead",P),o.years=Oe("years accessor is deprecated. Use year instead",J),o.zone=Oe("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",je),o.isDSTShifted=Oe("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",ue);export default o;