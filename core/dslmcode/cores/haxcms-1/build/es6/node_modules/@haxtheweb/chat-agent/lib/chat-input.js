/**
 * Copyright 2024 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import"../../simple-cta/simple-cta.js";import{ChatAgentModalStore as e}from"../chat-agent.js";import{DDD as t}from"../../d-d-d/d-d-d.js";import{html as r,css as a}from"../../../lit/index.js";import{autorun as s,toJS as d}from"../../../mobx/dist/mobx.esm.js";class ChatInput extends t{static get tag(){return"chat-input"}constructor(){super(),this.messageIndex=null,this.userIndex=null,s((()=>{this.messageIndex=d(e.messageIndex),this.userIndex=d(e.userIndex)}))}static get styles(){return[super.styles,a`
        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */
        
        :host {
          display: block;
          font-family: var(--ddd-font-primary);
        }

        .chat-input-wrapper {
          display: flex;
          align-items: center;
          justify-content: center;
          gap: var(--ddd-spacing-3);
          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);
        }

        #user-input {
          border-radius: var(--ddd-radius-lg);
          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);
          background-color: var(--ddd-theme-default-white);
          color: #000;
          resize: none;
          scrollbar-width: none;
          width: 85%;
        }

        .send-button {
          width: 52px;
          height: 52px;
          border-radius: var(--ddd-radius-circle);
          background-color: var(--data-theme-primary, var(--ddd-primary-1));
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
        }

        simple-icon-lite {
          color: var(
            --lowContrast-override,
            var(--ddd-theme-bgContrast, white)
          );
        }
      `]}render(){return r`
      <div class="chat-input-wrapper">
        <textarea name="prompt-input" id="user-input" placeholder="${e.promptPlaceholder}" @keypress=${this.handleKeyPress}></textarea>
        <div class="send-button" @click=${this.handleSendButton} tabindex="0">
          <simple-icon-lite icon="icons:send"></simple-icon-lite>
        </div>
      </div>
    `}handleKeyPress(e){"Enter"===e.key&&e.shiftKey&&(e.preventDefault(),this.handleSendButton()),"Enter"===e.key&&e.preventDefault()}handleSendButton(){const t=this.shadowRoot.querySelector("#user-input").value;e.promptCharacterLimit>0&&t.length>e.promptCharacterLimit&&alert(`Please shorten your prompt to no more than ${e.promptCharacterLimit} characters.`),""!==t?(e.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. Prompt to send: "+t),e.handleMessage(e.userName,t),this.shadowRoot.querySelector("#user-input").value=""):e.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. No prompt to send")}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),e.promptCharacterLimit>0&&this.shadowRoot.querySelector("#user-input").setAttribute("maxlength",`${e.promptCharacterLimit}`)}static get properties(){return{...super.properties}}static get haxProperties(){return new URL(`./lib/${this.tag}.haxProperties.json`,import.meta.url).href}}globalThis.customElements.define(ChatInput.tag,ChatInput);export{ChatInput};