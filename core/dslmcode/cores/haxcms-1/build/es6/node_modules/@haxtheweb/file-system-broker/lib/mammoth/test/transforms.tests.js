var e=require("assert"),n=require("underscore"),r=require("../lib/documents"),a=require("../lib/transforms"),t=require("./test")(module);t("paragraph()",{"paragraph is transformed":function(){var n=r.paragraph([]),t=a.paragraph((function(){return r.tab()}))(n);e.deepEqual(t,r.tab())},"non-paragraph elements are not transformed":function(){var n=r.run([]),t=a.paragraph((function(){return r.tab()}))(n);e.deepEqual(t,r.run([]))}}),t("run()",{"run is transformed":function(){var n=r.run([]),t=a.run((function(){return r.tab()}))(n);e.deepEqual(t,r.tab())},"non-run elements are not transformed":function(){var n=r.paragraph([]),t=a.run((function(){return r.tab()}))(n);e.deepEqual(t,r.paragraph([]))}}),t("elements()",{"all descendants are transformed":function(){var r=0;var t=a._elements((function setCount(e){return r++,n.extend(e,{count:r})}))({children:[{children:[{}]}]});e.deepEqual(t,{count:3,children:[{count:2,children:[{count:1}]}]})}}),t("getDescendants()",{"returns nothing if element has no children property":function(){e.deepEqual(a.getDescendants({}),[])},"returns nothing if element has empty children":function(){e.deepEqual(a.getDescendants({children:[]}),[])},"includes children":function(){e.deepEqual(a.getDescendants({children:[{name:"child 1"},{name:"child 2"}]}),[{name:"child 1"},{name:"child 2"}])},"includes indirect descendants":function(){var n={name:"grandchild"},r={name:"child",children:[n]},t={children:[r]};e.deepEqual(a.getDescendants(t),[n,r])}}),t("getDescendantsOfType()",{"filters descendants to type":function(){var n={type:"run"},r={children:[{type:"paragraph"},n]};e.deepEqual(a.getDescendantsOfType(r,"run"),[n])}});