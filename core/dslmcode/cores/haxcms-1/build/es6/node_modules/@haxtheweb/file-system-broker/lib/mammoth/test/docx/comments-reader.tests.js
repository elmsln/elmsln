var e=require("assert"),t=require("../../lib/docx/comments-reader").createCommentsReader,a=require("../../lib/docx/body-reader").createBodyReader,n=require("../../lib/documents"),r=require("../../lib/xml"),m=require("../test")(module);function readComment(n){var r=a({}),m=t(r)(n);return e.equal(m.value.length,1),m.value[0]}m("ID and body of comment are read",(function(){var t=[r.element("w:p")],a=readComment(r.element("w:comments",{},[r.element("w:comment",{"w:id":"1"},t)]));e.deepEqual(a.body,[new n.Paragraph([])]),e.deepEqual(a.commentId,"1")})),m("when optional attributes of comment are missing then they are read as null",(function(){var t=readComment(r.element("w:comments",{},[r.element("w:comment",{"w:id":"1"})]));e.strictEqual(t.authorName,null),e.strictEqual(t.authorInitials,null)})),m("when optional attributes of comment are blank then they are read as null",(function(){var t=readComment(r.element("w:comments",{},[r.element("w:comment",{"w:id":"1","w:author":" ","w:initials":" "})]));e.strictEqual(t.authorName,null),e.strictEqual(t.authorInitials,null)})),m("when optional attributes of comment are not blank then they are read",(function(){var t=readComment(r.element("w:comments",{},[r.element("w:comment",{"w:id":"1","w:author":"The Piemaker","w:initials":"TP"})]));e.strictEqual(t.authorName,"The Piemaker"),e.strictEqual(t.authorInitials,"TP")}));