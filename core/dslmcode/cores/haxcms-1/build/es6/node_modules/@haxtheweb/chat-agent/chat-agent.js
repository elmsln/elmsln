/**
 * Copyright 2024 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import"./lib/chat-button.js";import"./lib/chat-control-bar.js";import"./lib/chat-developer-panel.js";import"./lib/chat-input.js";import"./lib/chat-interface.js";import"./lib/chat-message.js";import"./lib/chat-suggestion.js";import"../rpg-character/rpg-character.js";import"../simple-icon/simple-icon.js";import{DDD as e}from"../d-d-d/d-d-d.js";import{html as t,css as i}from"../../lit/index.js";import{HAXCMSSiteEditorUI as s}from"../haxcms-elements/lib/core/haxcms-site-editor-ui.js";import{store as a}from"../haxcms-elements/lib/core/haxcms-site-store.js";import{observable as r,makeObservable as n,computed as o,configure as h,autorun as d,toJS as l}from"../../mobx/dist/mobx.esm.js";h({enforceActions:!1});import{MicroFrontendRegistry as c}from"../micro-frontend-registry/micro-frontend-registry.js";import{enableServices as p}from"../micro-frontend-registry/lib/microServices.js";p(["haxcms"]),c.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});class ChatAgent extends e{static get tag(){return"chat-agent"}constructor(){super(),this.chatLog=[],this.engine="alfred",void 0!==a.userData.userName?this.userName=a.userData.userName:this.userName="guest",void 0!==a.userData.userPicture&&(this.userPicture=a.userData.userPicture),this.buttonIcon="hax:wizard-hat",this.buttonLabel="Merlin-AI",this.developerModeEnabled=!0,this.promptCharacterLimit,this.promptPlaceholder="Enter your prompt here...",this.isFullView=!1,this.isInterfaceHidden=!1,this.merlinIndex=0,this.messageIndex=0,this.userIndex=0,this.userTypeWriterSpeed=1,this.merlinTypeWriterSpeed=30,this.isSiteEditorOpen=s.userMenuOpen,console.log(this.isSiteEditorOpen),n(this,{chatLog:r,engine:r,isFullView:r,isInterfaceHidden:r,merlinIndex:r,messageIndex:r,userIndex:r}),d((()=>{l(this.chatLog),l(this.engine);const e=l(this.isFullView),t=l(this.isInterfaceHidden);l(this.merlinIndex),l(this.messageIndex),l(this.userIndex);e?this.setAttribute("is-full-view",""):this.removeAttribute("is-full-view"),t?this.setAttribute("is-interface-hidden",""):this.removeAttribute("is-interface-hidden")}))}static get styles(){return[super.styles,i`
        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */

        :host {
          display: block;
          container-type: normal;
        }

        .chat-agent-wrapper {
          display: flex;
          flex-direction: column;
          gap: var(--ddd-spacing-2);
          position: fixed;
          bottom: var(--ddd-spacing-2);
          right: var(--ddd-spacing-2);
          width: 40%; /* Switch to 30% when working with hax environment */
        }

        :host([is-full-view]) .chat-agent-wrapper {
          bottom: var(--ddd-spacing-0);
          right: var(--ddd-spacing-0);
          gap: var(--ddd-spacing-0);
          width: 25%;
        }

        :host([is-full-view]:host([is-interface-hidden])) .chat-agent-wrapper {
          bottom: var(--ddd-spacing-2);
          right: var(--ddd-spacing-2);
          gap: var(--ddd-spacing-2);
        }

        .agent-interface-wrapper {
          display: flex;
          justify-content: right;
        }

        .agent-button-wrapper {
          display: flex;
          justify-content: right;
        }

        @container (max-width: 600px) {
          .chat-agent-wrapper {
            width: 30%;
          }
        }
      `]}render(){return t`
      <div class="chat-agent-wrapper">
        <div class="agent-interface-wrapper">
          <chat-interface></chat-interface>
        </div>
        <div class="agent-button-wrapper">
          <chat-button>
            <span slot="label">${this.buttonLabel}</span>
          </chat-button>
        </div>
      </div>
    `}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.handleMessage("merlin","Hello! My name is Merlin. How can I assist you today?")}handleMessage(e,t){let i;switch(this.developerModeEnabled&&console.info(`HAX-DEV-MODE: Writing message ${t} by ${e} to chatLog.`),this.messageIndex++,e){case"merlin":this.merlinIndex++,i=this.merlinIndex;break;case this.userName:this.userIndex++,i=this.userIndex}let s=new Date;const a={messageID:this.messageIndex,author:e,message:t,authorMessageIndex:i,timestamp:s.toString().replace(/\s/g,"-")};this.chatLog.push(a),e===this.userName&&this.handleInteraction(t)}handleInteraction(e){this.developerModeEnabled&&console.info(`HAX-DEV-MODE: Prompt sent to: ${this.engine}. Prompt sent: ${e}`);globalThis.document.querySelector("base")&&globalThis.document.querySelector("base").href;const t={site:{file:"https://haxtheweb.org/site.json"},type:"site",question:e,engine:this.engine,context:this.context};this.loading=!0,c.call("@haxcms/aiChat",t).then((e=>{200==e.status&&(this.answers=[e.data.answer],console.log(this.answers),this.question=e.data.question),this.loading=!1,this.handleMessage("merlin",e.data.answer)})).catch((e=>{this.loading=!1,console.error(e)}))}handleDownload(e){if(this.developerModeEnabled&&console.info(`HAX-DEV-MODE: Downloading chatlog as ${e}.`),0!==this.chatLog.length){const t=JSON.stringify(this.chatLog,void 0,2);let i=new Date;const s=`${this.userName}-chat-log-${i.toString().replace(/\s/g,"-")}.${e}`;let a=document.createElement("a");a.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),a.setAttribute("download",s),a.click(),a.remove()}}static get properties(){return{...super.properties,userName:{type:String,attribute:"user-name"},userPicture:{type:String,attribute:"user-picture"},developerModeEnabled:{type:Boolean,attribute:"developer-mode"},promptCharacterLimit:{type:Number,attribute:"maxlength"},promptPlaceholder:{type:String,attribute:"placeholder"},merlinTypeWriterSpeed:{type:Number,attribute:"merlin-type-writer-speed"},userTypeWriterSpeed:{type:Number,attribute:"user-type-writer-speed"}}}}customElements.define(ChatAgent.tag,ChatAgent);export{ChatAgent};globalThis.ChatAgentModal=globalThis.ChatAgentModal||{},globalThis.ChatAgentModal.requestAvailability=()=>(globalThis.ChatAgentModal.instance||(globalThis.ChatAgentModal.instance=document.createElement("chat-agent"),document.body.appendChild(globalThis.ChatAgentModal.instance)),globalThis.ChatAgentModal.instance);export const ChatAgentModalStore=globalThis.ChatAgentModal.requestAvailability();