import{configFromISO as r,configFromRFC2822 as e}from"./from-string.js";import{configFromArray as i}from"./from-array.js";import{getParseRegexForToken as o}from"../parse/regex.js";import{addTimeToArrayFromToken as t}from"../parse/token.js";import{expandFormat as s,formatTokenFunctions as m,formattingTokens as n}from"../format/format.js";import f from"./check-overflow.js";import{HOUR as u}from"../units/constants.js";import{hooks as a}from"../utils/hooks.js";import l from"./parsing-flags.js";a.ISO_8601=function(){},a.RFC_2822=function(){};export function configFromStringAndFormat(p){if(p._f!==a.ISO_8601)if(p._f!==a.RFC_2822){p._a=[],l(p).empty=!0;var _,c,d,h,g,j=""+p._i,k=j.length,v=0;for(d=s(p._f,p._locale).match(n)||[],_=0;_<d.length;_++)h=d[_],(c=(j.match(o(h,p))||[])[0])&&((g=j.substr(0,j.indexOf(c))).length>0&&l(p).unusedInput.push(g),j=j.slice(j.indexOf(c)+c.length),v+=c.length),m[h]?(c?l(p).empty=!1:l(p).unusedTokens.push(h),t(h,c,p)):p._strict&&!c&&l(p).unusedTokens.push(h);l(p).charsLeftOver=k-v,j.length>0&&l(p).unusedInput.push(j),p._a[u]<=12&&!0===l(p).bigHour&&p._a[u]>0&&(l(p).bigHour=void 0),l(p).parsedDateParts=p._a.slice(0),l(p).meridiem=p._meridiem,p._a[u]=function meridiemFixWrap(r,e,i){var o;if(null==i)return e;return null!=r.meridiemHour?r.meridiemHour(e,i):null!=r.isPM?((o=r.isPM(i))&&e<12&&(e+=12),o||12!==e||(e=0),e):e}(p._locale,p._a[u],p._meridiem),i(p),f(p)}else e(p);else r(p)}