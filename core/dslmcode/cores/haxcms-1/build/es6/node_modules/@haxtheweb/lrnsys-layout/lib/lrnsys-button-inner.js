import{LitElement as t,html as e,css as s}from"../../../lit/index.js";import"../../simple-icon/simple-icon.js";import"../../simple-icon/lib/simple-icons.js";import"../../hax-iconset/lib/simple-hax-iconset.js";import"../../paper-avatar/paper-avatar.js";class LrnsysButtonInner extends t{static get styles(){return[s`
        :host {
          display: block;
        }
        :host > div > * {
          vertical-align: middle;
        }
        .text-label {
          margin-left: 8px;
        }
        .text-label-only {
          margin-left: 0;
        }
      `]}constructor(){super(),this.text="",this.avatar="",this.icon=""}render(){return e`
      <div>
        ${""!=this.avatar?e`
              <paper-avatar
                part="lrnsys-button-inner-paper-avatar"
                src="${this.avatar}"
              ></paper-avatar>
            `:""}
        ${""!=this.icon?e`
              <simple-icon
                part="lrnsys-button-inner-simple-icon"
                icon="${this.icon}"
                accent-color="grey"
                contrast="4"
              ></simple-icon>
            `:""}
        ${""!=this.text?e`
              <span
                class="${this._getTextLabelClass(this.avatar,this.icon)}"
                part="lrnsys-button-inner-text-label"
                >${this.text}</span
              >
            `:""}
      </div>
      <div><slot name="button"></slot><slot></slot></div>
    `}static get tag(){return"lrnsys-button-inner"}static get properties(){return{icon:{type:String},avatar:{type:String},text:{type:String}}}_getTextLabelClass(t,e){return t||e?"text-label":"text-label-only"}}customElements.define(LrnsysButtonInner.tag,LrnsysButtonInner);export{LrnsysButtonInner};