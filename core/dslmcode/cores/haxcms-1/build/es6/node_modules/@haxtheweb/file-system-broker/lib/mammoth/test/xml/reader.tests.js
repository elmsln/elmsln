var e=require("assert"),n=require("../../lib/xml/reader"),t=require("../test")(module);t("should read self-closing element",(function(){return n.readString("<body/>").then((function(n){e.deepEqual({type:"element",name:"body",attributes:{},children:[]},n)}))})),t("should read empty element with separate closing tag",(function(){return n.readString("<body></body>").then((function(n){e.deepEqual({type:"element",name:"body",attributes:{},children:[]},n)}))})),t("should read attributes of tags",(function(){return n.readString('<body name="bob"/>').then((function(n){e.deepEqual({name:"bob"},n.attributes)}))})),t("can read text element",(function(){return n.readString("<body>Hello!</body>").then((function(n){e.deepEqual({type:"text",value:"Hello!"},n.children[0])}))})),t("should read element with children",(function(){return n.readString("<body><a/><b/></body>").then((function(n){e.equal(2,n.children.length),e.equal("a",n.children[0].name),e.equal("b",n.children[1].name)}))})),t("unmapped namespaces URIs are included in braces as prefix",(function(){return n.readString('<w:body xmlns:w="word"/>').then((function(n){e.deepEqual(n.name,"{word}body")}))})),t("mapped namespaces URIs are translated using map",(function(){return n.readString('<w:body xmlns:w="word"/>',{word:"x"}).then((function(n){e.deepEqual(n.name,"x:body")}))})),t("namespace of attributes is mapped to prefix",(function(){return n.readString('<w:body xmlns:w="word" w:val="Hello!"/>',{word:"x"}).then((function(n){e.deepEqual(n.attributes["x:val"],"Hello!")}))})),t("can find first element with name",(function(){return n.readString('<body><a/><b index="1"/><b index="2"/></body>').then((function(n){var t=n.first("b");e.equal("1",t.attributes.index)}))})),t("whitespace between xml declaration and root tag is ignored",(function(){return n.readString('<?xml version="1.0" ?>\n<body/>').then((function(n){e.deepEqual("body",n.name)}))})),t("error if XML is badly formed",(function(){return n.readString("<bo").then((function(e){throw new Error("Expected failure")}),(function(n){return e.ok(n),1}))}));