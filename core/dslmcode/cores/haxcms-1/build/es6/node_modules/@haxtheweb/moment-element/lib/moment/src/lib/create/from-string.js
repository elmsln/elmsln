import{configFromStringAndFormat as d}from"./from-string-and-format.js";import{createUTCDate as e}from"./date-from-array.js";import{configFromArray as r}from"./from-array.js";import{hooks as i}from"../utils/hooks.js";import{deprecate as t}from"../utils/deprecate.js";import a from"./parsing-flags.js";import{defaultLocaleMonthsShort as n}from"../units/month.js";import{defaultLocaleWeekdaysShort as s}from"../units/day-of-week.js";var o=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,m=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,f=/Z|[+-]\d\d(?::?\d\d)?/,l=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],u=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],c=/^\/?Date\((\-?\d+)/i;export function configFromISO(e){var r,i,t,n,s,c,p=e._i,Y=o.exec(p)||m.exec(p);if(Y){for(a(e).iso=!0,r=0,i=l.length;r<i;r++)if(l[r][1].exec(Y[1])){n=l[r][0],t=!1!==l[r][2];break}if(null==n)return void(e._isValid=!1);if(Y[3]){for(r=0,i=u.length;r<i;r++)if(u[r][1].exec(Y[3])){s=(Y[2]||" ")+u[r][0];break}if(null==s)return void(e._isValid=!1)}if(!t&&null!=s)return void(e._isValid=!1);if(Y[4]){if(!f.exec(Y[4]))return void(e._isValid=!1);c="Z"}e._f=n+(s||"")+(c||""),d(e)}else e._isValid=!1}var p=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;function untruncateYear(d){var e=parseInt(d,10);return e<=49?2e3+e:e<=999?1900+e:e}var Y={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};export function configFromRFC2822(d){var r=p.exec(function preprocessRFC2822(d){return d.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}(d._i));if(r){var i=function extractFromRFC2822Strings(d,e,r,i,t,a){var s=[untruncateYear(d),n.indexOf(e),parseInt(r,10),parseInt(i,10),parseInt(t,10)];return a&&s.push(parseInt(a,10)),s}(r[4],r[3],r[2],r[5],r[6],r[7]);if(!function checkWeekday(d,e,r){return!d||s.indexOf(d)===new Date(e[0],e[1],e[2]).getDay()||(a(r).weekdayMismatch=!0,r._isValid=!1,!1)}(r[1],i,d))return;d._a=i,d._tzm=function calculateOffset(d,e,r){if(d)return Y[d];if(e)return 0;var i=parseInt(r,10),t=i%100;return(i-t)/100*60+t}(r[8],r[9],r[10]),d._d=e.apply(null,d._a),d._d.setUTCMinutes(d._d.getUTCMinutes()-d._tzm),a(d).rfc2822=!0}else d._isValid=!1}export function configFromString(d){var e=c.exec(d._i);null===e?(configFromISO(d),!1===d._isValid&&(delete d._isValid,configFromRFC2822(d),!1===d._isValid&&(delete d._isValid,i.createFromInputFallback(d)))):d._d=new Date(+e[1])}i.createFromInputFallback=t("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(d){d._d=new Date(d._i+(d._useUTC?" UTC":""))}));