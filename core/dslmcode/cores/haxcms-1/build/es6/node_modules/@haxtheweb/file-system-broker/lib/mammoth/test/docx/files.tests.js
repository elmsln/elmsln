var e=require("path"),n=require("fs"),t=require("assert"),i=require("../../lib/promises"),a=require("../../lib/docx/files").Files,r=require("../../lib/docx/files").uriToPath,o=require("../testing"),l=require("../test")(module),s=i.promisify(n.readFile.bind(n));function assertError(e,n){return e.then((function(){t(!1,"Expected error")}),n)}l("Files",{"can open files with file URI":function(){var n=e.resolve(o.testPath("tiny-picture.png"));return new a(null).read("file:///"+n.replace(/^\//,""),"base64").then((function(e){return s(n,"base64").then((function(n){t.deepEqual(e,n)}))}))},"can open files with relative URI":function(){var n=e.resolve(o.testPath("tiny-picture.png"));return new a(o.testPath(".")).read("tiny-picture.png","base64").then((function(e){return s(n,"base64").then((function(n){t.deepEqual(e,n)}))}))},"given base is not set when opening relative uri then error is raised":function(){return assertError(new a(null).read("not-a-real-file.png","base64"),(function(e){t.equal(e.message,"could not find external image 'not-a-real-file.png', path of input document is unknown")}))},"error if relative uri cannot be opened":function(){return assertError(new a("/tmp").read("not-a-real-file.png","base64"),(function(e){!function assertRegex(e,n){t.ok(n.test(e),"Expected regex: "+n+"\nbut was: "+e)}(e.message,/could not open external image: 'not-a-real-file.png' \(document directory: '\/tmp'\)\nENOENT.*\/tmp\/not-a-real-file.png.*/)}))}}),l("uriToPath",{"leading slash is retained on non-Windows file URIs":function(){t.equal(r("file:///a/b/c","linux"),"/a/b/c"),t.equal(r("file:///a/b/c","win32"),"/a/b/c")},"URI is unquoted":function(){t.equal(r("file:///a%20b"),"/a b")},"when host is set to localhost then path can be found":function(){t.equal(r("file://localhost/a/b/c"),"/a/b/c")},"when host is set but not localhost then path cannot be found":function(){t.throws((function(){r("file://example/a/b/c")}),/Could not convert URI to path: file:\/\/example\/a\/b\/c/)},"leading slash is not dropped on Windows file URIs when platform is not Windows":function(){t.equal(r("file:///c:/a","linux"),"/c:/a")},"leading slash is dropped on Windows file URIs when platform is Windows":function(){t.equal(r("file:///c:/a","win32"),"c:/a"),t.equal(r("file:///C:/a","win32"),"C:/a")},"relative URI is unquoted":function(){t.equal(r("a%20b/c"),"a b/c")}});