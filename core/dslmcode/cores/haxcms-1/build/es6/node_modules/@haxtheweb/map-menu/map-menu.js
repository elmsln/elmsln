/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as i}from"../../lit/index.js";import"./lib/map-menu-builder.js";import"./lib/map-menu-container.js";import{normalizeEventPath as a}from"../utils/utils.js";class MapMenu extends e{static get styles(){return[i`
        :host {
          --map-menu-item-icon-height: 18px;
          --map-menu-item-active-item-color: rgba(100, 100, 255, 0.1);
          --map-menu-item-button-height: 20px;
          --map-menu-item-height: 20px;
          --map-menu-gap: 10px;
          display: block;
          overflow-y: scroll;
          position: relative;
          height: 100%;
          transition: all 0.1s ease-in-out;
          opacity: 1;
          background-color: transparent;
        }
        #itemslist {
          display: var(--map-menu-items-list-display);
          flex-direction: var(--map-menu-items-list-flex-direction);
          flex: var(--map-menu-items-list-flex);
        }
        #activeindicator {
          background: var(--map-menu-item-active-item-color);
          transition: all 0.1s ease-in-out;
          position: absolute;
          pointer-events: none;
          z-index: -1;
          width: calc(100% + (2 * var(--map-menu-gap)));
          margin-left: calc(-2 * var(--map-menu-gap));
        }

        map-menu-builder map-menu-builder map-menu-item,
        map-menu-builder map-menu-builder map-menu-submenu {
          border-left: 2px solid
            var(--map-menu-item-a-active-background-color, black);
          margin-left: calc(var(--map-menu-gap) + 2px);
        }
        map-menu-builder map-menu-builder map-menu-builder map-menu-item,
        map-menu-builder map-menu-builder map-menu-builder map-menu-submenu {
          border-left: 2px solid
            var(--map-menu-item-a-active-background-color, black);
          margin-left: calc(var(--map-menu-gap) + 2px);
        }
        map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-item,
        map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-submenu {
          border-left: 2px solid
            var(--map-menu-item-a-active-background-color, black);
          margin-left: calc(var(--map-menu-gap) + 2px);
        }
        map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-item,
        map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-builder
          map-menu-submenu {
          border-left: 2px solid
            var(--map-menu-item-a-active-background-color, black);
          margin-left: calc(var(--map-menu-gap) + 2px);
        }

        map-menu-container {
          padding: var(--map-menu-container-padding, 0);
          display: var(--map-menu-container-display);
          flex-direction: var(--map-menu-container-flex-direction);
          flex: var(--map-menu-container-flex);
          background-color: var(--map-menu-container-background-color);
          color: var(--map-menu-container-color);
        }

        /* turn default active color if indicator is on */
        :host([active-indicator]) map-menu-builder {
          --map-menu-item-active-item-color: transparent;
        }
      `]}constructor(){super(),this.editControls=!1,this.disabled=!1,this.title="Content outline",this.data=null,this.items=[],this.autoScroll=!1,this.activeIndicator=!1,setTimeout((()=>{this.addEventListener("link-clicked",this.__linkClickedHandler.bind(this)),this.addEventListener("toggle-updated",this.__toggleUpdated.bind(this)),this.addEventListener("active-item",this.__activeItemHandler.bind(this)),this.addEventListener("map-meu-item-hidden-check",this._mapMeuItemHiddenCheckHandler.bind(this))}),0)}render(){return t`
      <div id="itemslist">
        <map-menu-container>
          <div id="activeindicator"></div>
          <map-menu-builder
            id="builder"
            ?edit-controls="${this.editControls}"
            .items="${this.items}"
            .selected="${this.selected}"
          ></map-menu-builder>
        </map-menu-container>
      </div>
    `}static get tag(){return"map-menu"}static get properties(){return{disabled:{type:Boolean,reflect:!0},editControls:{type:Boolean,attribute:"edit-controls"},title:{type:String},data:{type:Array},manifest:{type:Object},items:{type:Array},selected:{type:String},activeItem:{type:Object},autoScroll:{type:Boolean,attribute:"auto-scroll"},activeIndicator:{type:Boolean,reflect:!0,attribute:"active-indicator"}}}updated(e){e.forEach(((e,t)=>{"data"==t&&this._dataChanged(this[t]),"manifest"==t&&this._manifestChanged(this[t]),"activeItem"==t&&this.refreshActiveChildren(this[t],e),["manifest","items","selected"].includes(t)&&this.dispatchEvent(new CustomEvent(`${t}-changed`,{detail:{value:this[t]}}))}))}__activeItemHandler(e){this.activeItem=e.detail}_mapMeuItemHiddenCheckHandler(e){const t=e.detail.action,i=e.detail.hiddenChild;"closed"===t&&!0===i?this.__updateActiveIndicator(this.activeItem,!0):this.__updateActiveIndicator(this.activeItem,!1)}refreshActiveChildren(e,t){e&&(e.setAttribute("active","active"),this.activeIndicator&&this.__updateActiveIndicator(e),this.autoScroll&&this.__scrollHandler(e,{duration:50,delay:0,scrollElement:this})),t&&(t.removeAttribute("active"),this.__updateActiveIndicator(e))}__scrollHandler(e,t){const i={align:"top",delay:0,duration:300,scrollElement:window},a=Object.assign({},i,t),n=e.getBoundingClientRect(),r=(a.scrollElement.getBoundingClientRect(),a.scrollElement.getBoundingClientRect().bottom-a.scrollElement.getBoundingClientRect().top),l=n.bottom-n.top,m=a.scrollElement.scrollTop;let o=e.getBoundingClientRect().top-a.scrollElement.getBoundingClientRect().top;switch(o-=r/2,a.align){case"center":o+=l/2;break;case"bottom":o+=l}let d=null;requestAnimationFrame((function animation(e){null===d&&(d=e);let t=e-d,i=function ease(e,t,i,a){return(e/=a/2)<1?i/2*e*e+t:-i/2*(--e*(e-2)-1)+t}(t,m,o,a.duration);a.scrollElement.scrollTop=i,t<a.duration&&requestAnimationFrame(animation)}))}_manifestChanged(e){e&&(this.data=e.items)}_dataChanged(e){const t=[];e&&(e.forEach((e=>{e.parent||t.push(e)})),t.forEach(((t,i)=>{this._setChildren(t,e)})),this.items=[...t])}_setChildren(e,t){const i=t.filter((t=>e.id===t.parent));e.children=i,e.children.length>0&&e.children.forEach((e=>{this._setChildren(e,t)}))}__hasChildren(e){return e.children.length>0}__linkClickedHandler(e){this.selected=e.detail.id,this.dispatchEvent(new CustomEvent("selected",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail.id}))}__toggleUpdated(e){const t=e.detail.opened?"opened":"closed",i=a(e)[0];void 0!==this.activeItem&&(this.__updateActiveIndicator(this.activeItem,!1),this.activeItem.dispatchEvent(new CustomEvent("map-menu-item-hidden-check",{bubbles:!0,cancelable:!0,composed:!0,detail:Object.assign({},{action:t,target:i})})))}__isInViewport(e){const t=this.__getScrollParent(e);if(!t)return!1;var i=e.offsetTop,a=i+e.offsetHeight,n=t.offsetTop,r=n+t.offsetHeight;return a>n&&i<r}__getScrollParent(e){return null==e?null:e.scrollHeight>e.clientHeight?e:this.__getScrollParent(e.parentNode)}__updateActiveIndicator(e,t=!1){setTimeout((()=>{const i=this.shadowRoot.querySelector("#activeindicator"),a=e.offsetTop,n=t?0:e.offsetHeight;i.setAttribute("style",`height:${n}px;top:${a}px;`)}),200)}__parentsHidden(e){const t=e.parentNode;return null==t?null:"MAP-MENU-SUBMENU"===t.tagName&&!t.opened||"MAP-MENU"!==t.tagName&&this.__parentsHidden(t)}}customElements.define(MapMenu.tag,MapMenu);export{MapMenu};