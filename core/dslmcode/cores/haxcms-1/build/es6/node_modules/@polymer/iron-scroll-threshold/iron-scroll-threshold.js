/**
@license
Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import"../polymer/polymer-legacy.js";import{IronScrollTargetBehavior as e}from"../iron-scroll-target-behavior/iron-scroll-target-behavior.js";import{Polymer as r}from"../polymer/lib/legacy/polymer-fn.js";import{html as t}from"../polymer/lib/utils/html-tag.js";r({_template:t`
    <style>
      :host {
        display: block;
      }
    </style>

    <slot></slot>
`,is:"iron-scroll-threshold",properties:{upperThreshold:{type:Number,value:100},lowerThreshold:{type:Number,value:100},upperTriggered:{type:Boolean,value:!1,notify:!0,readOnly:!0},lowerTriggered:{type:Boolean,value:!1,notify:!0,readOnly:!0},horizontal:{type:Boolean,value:!1}},behaviors:[e],observers:["_setOverflow(scrollTarget)","_initCheck(horizontal, isAttached)"],get _defaultScrollTarget(){return this},_setOverflow:function(e){this.style.overflow=e===this?"auto":"",this.style.webkitOverflowScrolling=e===this?"touch":""},_scrollHandler:function(){this.isDebouncerActive("_checkTheshold")||this.debounce("_checkTheshold",(function(){this.checkScrollThresholds()}),200)},_initCheck:function(e,r){r&&this.debounce("_init",(function(){this.clearTriggers(),this.checkScrollThresholds()}))},checkScrollThresholds:function(){if(!(!this.scrollTarget||this.lowerTriggered&&this.upperTriggered)){var e=this.horizontal?this._scrollLeft:this._scrollTop,r=this.horizontal?this.scrollTarget.scrollWidth-this._scrollTargetWidth-this._scrollLeft:this.scrollTarget.scrollHeight-this._scrollTargetHeight-this._scrollTop;e<=this.upperThreshold&&!this.upperTriggered&&(this._setUpperTriggered(!0),this.fire("upper-threshold")),r<=this.lowerThreshold&&!this.lowerTriggered&&(this._setLowerTriggered(!0),this.fire("lower-threshold"))}},checkScrollThesholds:function(){this.checkScrollThresholds()},clearTriggers:function(){this._setUpperTriggered(!1),this._setLowerTriggered(!1)}});