const n=/\/\*[\*!]\s+vaadin-dev-mode:start([\s\S]*)vaadin-dev-mode:end\s+\*\*\//i,e=window.Vaadin&&window.Vaadin.Flow&&window.Vaadin.Flow.clients;function uncommentAndRun(e,o){if("function"!=typeof e)return;const t=n.exec(e.toString());if(t)try{e=new Function(t[1])}catch(n){console.log("vaadin-development-mode-detector: uncommentAndRun() failed",n)}return e(o)}window.Vaadin=window.Vaadin||{};export const runIfDevelopmentMode=function(n,e){if(window.Vaadin.developmentMode)return uncommentAndRun(n,e)};void 0===window.Vaadin.developmentMode&&(window.Vaadin.developmentMode=function isDevelopmentMode(){try{return!!function isForcedDevelopmentMode(){return localStorage.getItem("vaadin.developmentmode.force")}()||!!function isLocalhost(){return["localhost","127.0.0.1"].indexOf(window.location.hostname)>=0}()&&(e?!function isFlowProductionMode(){return!!(e&&Object.keys(e).map((n=>e[n])).filter((n=>n.productionMode)).length>0)}():!function isMinified(){return uncommentAndRun((function test(){return!0}))}())}catch(n){return!1}}());