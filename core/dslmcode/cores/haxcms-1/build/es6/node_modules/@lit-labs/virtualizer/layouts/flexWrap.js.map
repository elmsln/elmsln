{"version":3,"file":"flexWrap.js","sourceRoot":"","sources":["../src/layouts/flexWrap.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {SizeCache} from './shared/SizeCache.js';\nimport {\n  SizeGapPaddingBaseLayout,\n  SizeGapPaddingBaseLayoutConfig,\n  GapSpec,\n} from './shared/SizeGapPaddingBaseLayout.js';\nimport {\n  ChildMeasurements,\n  ItemBox,\n  LayoutHostSink,\n  MeasureChildFunction,\n  Positions,\n  Size,\n} from './shared/Layout.js';\n\ninterface FlexWrapLayoutConfig extends SizeGapPaddingBaseLayoutConfig {\n  gap?: GapSpec;\n}\n\ntype FlexWrapLayoutSpecifier = FlexWrapLayoutConfig & {\n  type: new (\n    hostSink: LayoutHostSink,\n    config?: FlexWrapLayoutConfig\n  ) => FlexWrapLayout;\n};\n\ntype FlexWrapLayoutSpecifierFactory = (\n  config?: FlexWrapLayoutConfig\n) => FlexWrapLayoutSpecifier;\n\nexport const layout1dFlex: FlexWrapLayoutSpecifierFactory = (\n  config?: FlexWrapLayoutConfig\n) =>\n  Object.assign(\n    {\n      type: FlexWrapLayout,\n    },\n    config\n  );\n\ninterface Rolumn {\n  _startIdx: number;\n  _endIdx: number;\n  _startPos: number;\n  _size: number;\n}\n\ninterface Chunk {\n  _itemPositions: Array<Positions>;\n  _rolumns: Array<Rolumn>;\n  _size: number;\n  _dirty: boolean;\n}\n\ninterface AspectRatios {\n  // conceptually,  key is a number, but strictly speaking it's a string\n  [key: string]: number;\n}\n\n/**\n * TODO graynorton@ Don't hard-code Flickr - probably need a config option\n */\ninterface FlickrImageData {\n  o_width: number;\n  o_height: number;\n}\n\n/**\n * TODO @straversi: document and test this Layout.\n */\nexport class FlexWrapLayout extends SizeGapPaddingBaseLayout<FlexWrapLayoutConfig> {\n  private _itemSizes: Array<Size> = [];\n  // private _itemPositions: Array<Positions> = [];\n  // private _rolumnStartIdx: Array<number> = [];\n  // private _rolumnStartPos: Array<number> = [];\n  private _chunkLength: number | null = null;\n  private _chunks: Array<Chunk> = [];\n  private _chunkSizeCache = new SizeCache();\n  private _rolumnSizeCache = new SizeCache();\n  private _rolumnLengthCache = new SizeCache({roundAverageSize: false});\n  // private _rolumnStartPositions = new Map<number, number>();\n  private _aspectRatios: AspectRatios = {};\n  private _numberOfAspectRatiosMeasured = 0;\n  // protected _config: FlexWrapLayoutConfig = {};\n\n  listenForChildLoadEvents = true;\n\n  set gap(spec: GapSpec) {\n    this._setGap(spec);\n  }\n\n  /**\n   * TODO graynorton@ Don't hard-code Flickr - probably need a config option\n   */\n  measureChildren: MeasureChildFunction = function (e: Element, i: unknown) {\n    const {naturalWidth, naturalHeight} = e as HTMLImageElement;\n    if (naturalWidth !== undefined && naturalHeight != undefined) {\n      return {width: naturalWidth, height: naturalHeight};\n    }\n    const {o_width, o_height} = i as FlickrImageData;\n    if (o_width !== undefined && o_height !== undefined) {\n      return {width: o_width, height: o_height};\n    }\n    return {width: -1, height: -1};\n  };\n\n  updateItemSizes(sizes: ChildMeasurements) {\n    let dirty;\n    Object.keys(sizes).forEach((key) => {\n      const n = Number(key);\n      const chunk = this._getChunk(n);\n      const dims = sizes[n];\n      const prevDims = this._itemSizes[n];\n      if (dims.width && dims.height) {\n        if (\n          !prevDims ||\n          prevDims.width !== dims.width ||\n          prevDims.height !== dims.height\n        ) {\n          chunk._dirty = true;\n          dirty = true;\n          this._itemSizes[n] = sizes[n];\n          this._recordAspectRatio(sizes[n]);\n        }\n      }\n    });\n    if (dirty) {\n      this._scheduleLayoutUpdate();\n    }\n  }\n\n  _newChunk() {\n    return {\n      ['_rolumns']: [],\n      _itemPositions: [],\n      _size: 0,\n      _dirty: false,\n    };\n  }\n\n  _getChunk(idx: number | string) {\n    return (\n      this._chunks[Math.floor(Number(idx) / this._chunkLength!)] ||\n      this._newChunk()\n    );\n  }\n\n  _recordAspectRatio(dims: ItemBox) {\n    if (dims.width && dims.height) {\n      const bucket = Math.round((dims.width / dims.height) * 10) / 10;\n      if (this._aspectRatios[bucket]) {\n        this._aspectRatios[bucket]++;\n      } else {\n        this._aspectRatios[bucket] = 1;\n      }\n      this._numberOfAspectRatiosMeasured++;\n    }\n  }\n\n  _getRandomAspectRatio(): Size {\n    if (this._numberOfAspectRatiosMeasured === 0) {\n      return {width: 1, height: 1};\n    }\n    const n = Math.random() * this._numberOfAspectRatiosMeasured;\n    const buckets = Object.keys(this._aspectRatios);\n    let i = -1,\n      m = 0;\n    while (m < n && i < buckets.length) {\n      m += this._aspectRatios[buckets[++i]];\n    }\n    return {width: Number(buckets[i]), height: 1};\n  }\n\n  // _viewDim2Changed() {\n  //   this._scheduleLayoutUpdate();\n  // }\n\n  _getActiveItems() {\n    const chunk = this._getChunk(0);\n    if (chunk._rolumns.length === 0) return;\n    const scrollPos = Math.max(\n      0,\n      Math.min(this._scrollPosition, this._scrollSize - this._viewDim1)\n    );\n    const min = Math.max(0, scrollPos - this._overhang);\n    const max = Math.min(\n      this._scrollSize,\n      scrollPos + this._viewDim1 + this._overhang\n    );\n    const mid = (min + max) / 2;\n    const estMidRolumn = Math.round(\n      (mid / this._scrollSize) * chunk._rolumns.length\n    );\n    let idx = estMidRolumn;\n    while (chunk._rolumns[idx]._startPos < min) {\n      idx++;\n    }\n    while (chunk._rolumns[idx]._startPos > min) {\n      idx--;\n    }\n    this._first = chunk._rolumns[idx]._startIdx;\n    this._physicalMin = chunk._rolumns[idx]._startPos;\n    let rolumnMax;\n    while (\n      (rolumnMax =\n        chunk._rolumns[idx]._startPos +\n        chunk._rolumns[idx]._size +\n        this._gap! * 2) < max\n    ) {\n      idx++;\n    }\n    this._last = chunk._rolumns[idx]._endIdx;\n    this._physicalMax = rolumnMax;\n  }\n\n  _getItemPosition(idx: number): Positions {\n    const chunk = this._getChunk(0);\n    return chunk._itemPositions[idx];\n  }\n\n  _getItemSize(idx: number): Size {\n    const chunk = this._getChunk(0);\n    const {width, height} = chunk._itemPositions[idx];\n    return {width, height} as Size;\n  }\n\n  _getNaturalItemDims(idx: number): Size {\n    let itemDims = this._itemSizes[idx];\n    if (\n      itemDims === undefined ||\n      itemDims.width === -1 ||\n      itemDims.height === -1\n    ) {\n      itemDims = this._getRandomAspectRatio();\n    }\n    return itemDims;\n  }\n\n  _layOutChunk(startIdx: number, endIdx: number /*, reverse=false*/) {\n    const chunk: Chunk = this._newChunk();\n    const gap = this._gap!;\n    let startPos = gap;\n    let idx = 0;\n    let rolumnSize2 = 0;\n    let lastRatio = Infinity;\n    const finishRolumn = (lastIdx: number) => {\n      const rolumn = {\n        _startIdx: startIdx,\n        _endIdx: lastIdx,\n        _startPos: startPos - gap,\n        _size: 0,\n      };\n      chunk._rolumns.push(rolumn);\n      let itemStartPos = this._gap!;\n      for (let i = startIdx; i <= lastIdx; i++) {\n        const pos = chunk._itemPositions[i];\n        pos.width = pos.width! * lastRatio;\n        pos.height = pos.height! * lastRatio;\n        pos.left = this._positionDim === 'left' ? startPos : itemStartPos;\n        pos.top = this._positionDim === 'top' ? startPos : itemStartPos;\n        itemStartPos += pos[this._secondarySizeDim]! + gap;\n      }\n      rolumn._size = chunk._itemPositions[lastIdx][this._sizeDim]!;\n    };\n    while (idx <= endIdx) {\n      const itemDims = this._getNaturalItemDims(idx);\n      const availableSpace = this._viewDim2 - gap * (idx - startIdx + 2);\n      const itemSize = itemDims[this._sizeDim];\n      const itemSize2 = itemDims[this._secondarySizeDim];\n      const idealScaleFactor = this._idealSize! / itemSize;\n      const adjItemSize = idealScaleFactor * itemSize;\n      const adjItemSize2 = idealScaleFactor * itemSize2;\n      chunk._itemPositions[idx] = {\n        left: 0,\n        top: 0,\n        width: this._sizeDim === 'width' ? adjItemSize : adjItemSize2,\n        height: this._sizeDim === 'height' ? adjItemSize : adjItemSize2,\n      };\n      const ratio = availableSpace / (rolumnSize2 + adjItemSize2);\n      if (Math.abs(1 - ratio) > Math.abs(1 - lastRatio)) {\n        // rolumn is better without adding this item\n        finishRolumn(idx - 1);\n        startIdx = idx;\n        startPos += this._idealSize! * lastRatio + gap;\n        lastRatio = (this._viewDim2 - 2 * gap) / adjItemSize2;\n        rolumnSize2 = adjItemSize2;\n      } else {\n        // add this item and continue\n        rolumnSize2 += adjItemSize2;\n        lastRatio = ratio;\n      }\n      if (idx === endIdx) {\n        finishRolumn(idx);\n      }\n      idx++;\n    }\n    const lastRolumn = chunk._rolumns[chunk._rolumns.length - 1];\n    chunk._size = lastRolumn._startPos + lastRolumn._size;\n    return chunk;\n  }\n\n  _updateLayout(): void {\n    if (/*this._rolumnStartIdx === undefined ||*/ this._viewDim2 === 0) return;\n    this._chunkLength = Math.ceil(\n      (2 * (this._viewDim1 * this._viewDim2)) /\n        (this._idealSize! * this._idealSize!)\n    );\n    console.log('chunkLength', this._chunkLength);\n    // TODO: An odd place to do this, need to think through the logistics of getting size info to the layout\n    // in all cases\n    // this._itemSizes.length = 100;//this._totalItems;\n    const chunk = this._layOutChunk(0, this._chunkLength - 1);\n    this._chunks[0] = chunk;\n    this._chunkSizeCache.set(0, chunk._size);\n    chunk._rolumns.forEach((rolumn, idx) => {\n      const id = `0:${idx}`;\n      this._rolumnSizeCache.set(id, rolumn._size);\n      this._rolumnLengthCache.set(id, rolumn._endIdx - rolumn._startIdx + 1);\n    });\n  }\n\n  _updateScrollSize() {\n    const chunk = this._chunks[0];\n    this._scrollSize =\n      !chunk || chunk._rolumns.length === 0 ? 1 : chunk._size + 2 * this._gap!;\n    // chunk._rolumns[chunk._rolumns.length - 1]._startPos +\n    // chunk._itemPositions[chunk._rolumns.length - 1][this._sizeDim] +\n    // (this._gap * 2);\n  }\n}\n"]}