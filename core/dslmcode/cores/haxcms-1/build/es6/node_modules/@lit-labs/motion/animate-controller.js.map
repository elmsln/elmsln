{"version":3,"file":"animate-controller.js","sources":["src/animate-controller.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {ReactiveControllerHost} from 'lit';\nimport {Animate, Options} from './animate.js';\n\nexport const controllerMap = new WeakMap<\n  ReactiveControllerHost,\n  AnimateController\n>();\n\n/**\n * AnimateController can be used to provide default configuration options to all\n * `animate()` directives in a given component.\n *\n * It also provides control over all the `animate()` animations within a given\n * component, for example, `this.animateController.pause()` pauses all animations.\n */\nexport class AnimateController {\n  host: ReactiveControllerHost;\n  defaultOptions: Options;\n  startPaused = false;\n  disabled = false;\n  onComplete?: () => void;\n\n  constructor(\n    host: ReactiveControllerHost,\n    options: {\n      defaultOptions?: Options;\n      startPaused?: boolean;\n      disabled?: boolean;\n      onComplete?: () => void;\n    }\n  ) {\n    this.host = host;\n    this.defaultOptions = options.defaultOptions || {};\n    this.startPaused = !!options.startPaused;\n    this.disabled = !!options.disabled;\n    this.onComplete = options.onComplete;\n    controllerMap.set(this.host, this);\n  }\n\n  /**\n   * Set of active `animate()` directives in the host component\n   */\n  clients = new Set<Animate>();\n\n  protected pendingComplete = false;\n\n  async add(animate: Animate) {\n    this.clients.add(animate);\n    if (this.startPaused) {\n      animate.webAnimation?.pause();\n    }\n    this.pendingComplete = true;\n    await animate.finished;\n    if (this.pendingComplete && !this.isAnimating) {\n      this.pendingComplete = false;\n      this.onComplete?.();\n    }\n  }\n\n  remove(animate: Animate) {\n    this.clients.delete(animate);\n  }\n\n  /**\n   * Pauses all animations running in the host component.\n   */\n  pause() {\n    this.clients.forEach((f) => f.webAnimation?.pause());\n  }\n\n  /**\n   * Plays all active animations in the host component.\n   */\n  play() {\n    this.clients.forEach((f) => f.webAnimation?.play());\n  }\n\n  cancel() {\n    this.clients.forEach((f) => f.webAnimation?.cancel());\n    this.clients.clear();\n  }\n\n  finish() {\n    this.clients.forEach((f) => f.webAnimation?.finish());\n    this.clients.clear();\n  }\n\n  /**\n   * Toggles the play/pause state of all active `animate()` animations in the host component.\n   */\n  togglePlay() {\n    if (this.isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Returns true if the host component has any active `animate()` animations.\n   */\n  get isAnimating() {\n    return this.clients.size > 0;\n  }\n\n  /**\n   * Returns true if the host component has any playing `animate()` animations.\n   */\n  get isPlaying() {\n    return Array.from(this.clients).some(\n      (a) => a.webAnimation?.playState === 'running'\n    );\n  }\n\n  async finished() {\n    await Promise.all(Array.from(this.clients).map((f) => f.finished));\n  }\n}\n"],"names":["controllerMap","WeakMap","AnimateController","constructor","host","options","this","startPaused","disabled","clients","Set","pendingComplete","defaultOptions","onComplete","set","add","animate","webAnimation","pause","finished","isAnimating","remove","delete","forEach","f","play","cancel","clear","finish","togglePlay","isPlaying","size","Array","from","some","a","playState","Promise","all","map"],"mappings":"AAQa,MAAAA,EAAgB,IAAIC,cAYpBC,EAOX,WAAAC,CACEC,EACAC,GANFC,KAAWC,aAAG,EACdD,KAAQE,UAAG,EAuBXF,KAAAG,QAAU,IAAIC,IAEJJ,KAAeK,iBAAG,EAb1BL,KAAKF,KAAOA,EACZE,KAAKM,eAAiBP,EAAQO,gBAAkB,CAAA,EAChDN,KAAKC,cAAgBF,EAAQE,YAC7BD,KAAKE,WAAaH,EAAQG,SAC1BF,KAAKO,WAAaR,EAAQQ,WAC1Bb,EAAcc,IAAIR,KAAKF,KAAME,KAC9B,CASD,SAAMS,CAAIC,GACRV,KAAKG,QAAQM,IAAIC,GACbV,KAAKC,aACPS,EAAQC,cAAcC,QAExBZ,KAAKK,iBAAkB,QACjBK,EAAQG,SACVb,KAAKK,kBAAoBL,KAAKc,cAChCd,KAAKK,iBAAkB,EACvBL,KAAKO,eAER,CAED,MAAAQ,CAAOL,GACLV,KAAKG,QAAQa,OAAON,EACrB,CAKD,KAAAE,GACEZ,KAAKG,QAAQc,SAASC,GAAMA,EAAEP,cAAcC,SAC7C,CAKD,IAAAO,GACEnB,KAAKG,QAAQc,SAASC,GAAMA,EAAEP,cAAcQ,QAC7C,CAED,MAAAC,GACEpB,KAAKG,QAAQc,SAASC,GAAMA,EAAEP,cAAcS,WAC5CpB,KAAKG,QAAQkB,OACd,CAED,MAAAC,GACEtB,KAAKG,QAAQc,SAASC,GAAMA,EAAEP,cAAcW,WAC5CtB,KAAKG,QAAQkB,OACd,CAKD,UAAAE,GACMvB,KAAKwB,UACPxB,KAAKY,QAELZ,KAAKmB,MAER,CAKD,eAAIL,GACF,OAAOd,KAAKG,QAAQsB,KAAO,CAC5B,CAKD,aAAID,GACF,OAAOE,MAAMC,KAAK3B,KAAKG,SAASyB,MAC7BC,GAAoC,YAA9BA,EAAElB,cAAcmB,WAE1B,CAED,cAAMjB,SACEkB,QAAQC,IAAIN,MAAMC,KAAK3B,KAAKG,SAAS8B,KAAKf,GAAMA,EAAEL,WACzD"}