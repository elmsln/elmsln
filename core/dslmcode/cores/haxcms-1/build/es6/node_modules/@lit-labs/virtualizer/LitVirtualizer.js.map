{"version":3,"file":"LitVirtualizer.js","sourceRoot":"","sources":["src/LitVirtualizer.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAC;AAGpD,OAAO,EACL,UAAU,EACV,cAAc,EAEd,iBAAiB,EACjB,kBAAkB,GAEnB,MAAM,iBAAiB,CAAC;AAEzB,MAAM,OAAO,cAA4B,SAAQ,UAAU;IAA3D;;QAEE,UAAK,GAAQ,EAAE,CAAC;QAGhB,eAAU,GAA0B,iBAAiB,CAAC;QAGtD,gBAAW,GAAa,kBAAkB,CAAC;QAG3C,WAAM,GAAsB,EAAE,CAAC;QAG/B,aAAQ,GAAG,KAAK,CAAC;IAmCnB,CAAC;IAjCC,gBAAgB;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM;QACJ,MAAM,EAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC;QAChE,OAAO,IAAI,CAAA,GAAG,UAAU,CAAC;YACvB,KAAK;YACL,UAAU;YACV,WAAW;YACX,MAAM;YACN,QAAQ;SACT,CAAC,EAAE,CAAC;IACP,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,OAAQ,IAA+B,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,cAAc;QAChB,OAAQ,IAA+B,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC;IAC1E,CAAC;IAED;;;OAGG;IACH,aAAa,CACX,KAAa,EACb,WAAmD,OAAO;QAE1D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,cAAc,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;IACzD,CAAC;CACF;AA/CC;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;6CACb;AAGhB;IADC,QAAQ,EAAE;kDAC2C;AAGtD;IADC,QAAQ,EAAE;mDACgC;AAG3C;IADC,QAAQ,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC;8CACE;AAG/B;IADC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC;gDACxB","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {html, LitElement} from 'lit';\nimport {property} from 'lit/decorators/property.js';\nimport {KeyFn} from 'lit/directives/repeat.js';\nimport {LayoutConfigValue} from './layouts/shared/Layout.js';\nimport {\n  virtualize,\n  virtualizerRef,\n  VirtualizerHostElement,\n  defaultRenderItem,\n  defaultKeyFunction,\n  RenderItemFunction,\n} from './virtualize.js';\n\nexport class LitVirtualizer<T = unknown> extends LitElement {\n  @property({attribute: false})\n  items: T[] = [];\n\n  @property()\n  renderItem: RenderItemFunction<T> = defaultRenderItem;\n\n  @property()\n  keyFunction: KeyFn<T> = defaultKeyFunction;\n\n  @property({attribute: false})\n  layout: LayoutConfigValue = {};\n\n  @property({reflect: true, type: Boolean})\n  scroller = false;\n\n  createRenderRoot() {\n    return this;\n  }\n\n  render() {\n    const {items, renderItem, keyFunction, layout, scroller} = this;\n    return html`${virtualize({\n      items,\n      renderItem,\n      keyFunction,\n      layout,\n      scroller,\n    })}`;\n  }\n\n  element(index: number) {\n    return (this as VirtualizerHostElement)[virtualizerRef]?.element(index);\n  }\n\n  get layoutComplete() {\n    return (this as VirtualizerHostElement)[virtualizerRef]?.layoutComplete;\n  }\n\n  /**\n   * This scrollToIndex() shim is here to provide backwards compatibility with other 0.x versions of\n   * lit-virtualizer. It is deprecated and will likely be removed in the 1.0.0 release.\n   */\n  scrollToIndex(\n    index: number,\n    position: 'start' | 'center' | 'end' | 'nearest' = 'start'\n  ) {\n    this.element(index)?.scrollIntoView({block: position});\n  }\n}\n"]}