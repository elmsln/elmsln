{"version":3,"file":"grid.js","sourceRoot":"","sources":["../src/layouts/grid.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {LayoutHostSink, Positions, Size} from './shared/Layout.js';\nimport {dim1, dim2} from './shared/BaseLayout.js';\nimport {GridBaseLayout, GridBaseLayoutConfig} from './shared/GridBaseLayout.js';\n\ntype GridLayoutSpecifier = GridBaseLayoutConfig & {\n  type: new (\n    hostSink: LayoutHostSink,\n    config?: GridBaseLayoutConfig\n  ) => GridLayout;\n};\n\ntype GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) => GridLayoutSpecifier;\n\nexport const grid: GridLayoutSpecifierFactory = (\n  config?: GridBaseLayoutConfig\n) =>\n  Object.assign(\n    {\n      type: GridLayout,\n    },\n    config\n  );\n\nexport class GridLayout extends GridBaseLayout<GridBaseLayoutConfig> {\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n  protected get _delta() {\n    return this._metrics!.itemSize1 + this._metrics!.gap1;\n  }\n\n  protected _getItemSize(_idx: number): Size {\n    return {\n      [this._sizeDim]: this._metrics!.itemSize1,\n      [this._secondarySizeDim]: this._metrics!.itemSize2,\n    } as unknown as Size;\n  }\n\n  _getActiveItems() {\n    const metrics = this._metrics!;\n    const {rolumns} = metrics;\n    if (rolumns === 0) {\n      this._first = -1;\n      this._last = -1;\n      this._physicalMin = 0;\n      this._physicalMax = 0;\n    } else {\n      const {padding1} = metrics;\n      const min = Math.max(0, this._scrollPosition - this._overhang);\n      const max = Math.min(\n        this._scrollSize,\n        this._scrollPosition + this._viewDim1 + this._overhang\n      );\n      const firstCow = Math.max(\n        0,\n        Math.floor((min - padding1.start) / this._delta)\n      );\n      const lastCow = Math.max(\n        0,\n        Math.ceil((max - padding1.start) / this._delta)\n      );\n\n      this._first = firstCow * rolumns;\n      this._last = Math.min(lastCow * rolumns - 1, this.items.length - 1);\n      this._physicalMin = padding1.start + this._delta * firstCow;\n      this._physicalMax = padding1.start + this._delta * lastCow;\n    }\n  }\n\n  _getItemPosition(idx: number): Positions {\n    const {rolumns, padding1, positions, itemSize1, itemSize2} = this._metrics!;\n    return {\n      [this._positionDim]:\n        padding1.start + Math.floor(idx / rolumns) * this._delta,\n      [this._secondaryPositionDim]: positions[idx % rolumns],\n      [dim1(this.direction)]: itemSize1,\n      [dim2(this.direction)]: itemSize2,\n    } as unknown as {top: number; left: number};\n  }\n\n  _updateScrollSize() {\n    const {rolumns, gap1, padding1, itemSize1} = this._metrics!;\n    let size = 1;\n    if (rolumns > 0) {\n      const cows = Math.ceil(this.items.length / rolumns);\n      size =\n        padding1.start + cows * itemSize1 + (cows - 1) * gap1 + padding1.end;\n    }\n    this._scrollSize = size;\n  }\n}\n"]}