{"version":3,"file":"virtualize.js","sourceRoot":"","sources":["src/virtualize.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {TemplateResult, ChildPart, html, noChange} from 'lit';\nimport {directive, DirectiveResult, PartInfo, PartType} from 'lit/directive.js';\nimport {AsyncDirective} from 'lit/async-directive.js';\nimport {repeat, KeyFn} from 'lit/directives/repeat.js';\nimport {Virtualizer} from './Virtualizer.js';\nimport {RangeChangedEvent} from './events.js';\nimport {LayoutConfigValue} from './layouts/shared/Layout.js';\n\nexport {virtualizerRef, VirtualizerHostElement} from './Virtualizer.js';\n\n/**\n * Configuration options for the virtualize directive.\n */\nexport interface VirtualizeDirectiveConfig<T> {\n  /**\n   * A function that returns a lit-html TemplateResult. It will be used\n   * to generate the DOM for each item in the virtual list.\n   */\n  renderItem?: RenderItemFunction<T>;\n\n  keyFunction?: KeyFn<T>;\n\n  scroller?: boolean;\n\n  // TODO (graynorton): Document...\n  layout?: LayoutConfigValue;\n\n  /**\n   * The list of items to display via the renderItem function.\n   */\n  items?: Array<T>;\n}\n\nexport type RenderItemFunction<T = unknown> = (\n  item: T,\n  index: number\n) => TemplateResult;\n\nexport const defaultKeyFunction: KeyFn<unknown> = (item: unknown) => item;\nexport const defaultRenderItem: RenderItemFunction<unknown> = (\n  item: unknown,\n  idx: number\n) => html`${idx}: ${JSON.stringify(item, null, 2)}`;\n\nclass VirtualizeDirective<T = unknown> extends AsyncDirective {\n  _virtualizer: Virtualizer | null = null;\n  _first = 0;\n  _last = -1;\n  _renderItem: RenderItemFunction<T> = (item: T, idx: number) =>\n    defaultRenderItem(item, idx + this._first);\n  _keyFunction: KeyFn<T> = (item: T, idx: number) =>\n    defaultKeyFunction(item, idx + this._first);\n  _items: Array<T> = [];\n\n  constructor(part: PartInfo) {\n    super(part);\n    if (part.type !== PartType.CHILD) {\n      throw new Error(\n        'The virtualize directive can only be used in child expressions'\n      );\n    }\n  }\n\n  render(config?: VirtualizeDirectiveConfig<T>) {\n    if (config) {\n      this._setFunctions(config);\n    }\n    const itemsToRender: Array<T> = [];\n\n    if (this._first >= 0 && this._last >= this._first) {\n      for (let i = this._first; i <= this._last; i++) {\n        itemsToRender.push(this._items[i]);\n      }\n    }\n    return repeat(itemsToRender, this._keyFunction, this._renderItem);\n  }\n\n  update(part: ChildPart, [config]: [VirtualizeDirectiveConfig<T>]) {\n    this._setFunctions(config);\n    const itemsChanged = this._items !== config.items;\n    this._items = config.items || [];\n    if (this._virtualizer) {\n      this._updateVirtualizerConfig(part, config);\n    } else {\n      this._initialize(part, config);\n    }\n    return itemsChanged ? noChange : this.render();\n  }\n\n  private async _updateVirtualizerConfig(\n    part: ChildPart,\n    config: VirtualizeDirectiveConfig<T>\n  ) {\n    const compatible = await this._virtualizer!.updateLayoutConfig(\n      config.layout || {}\n    );\n    if (!compatible) {\n      const hostElement = part.parentNode as HTMLElement;\n      this._makeVirtualizer(hostElement, config);\n    }\n    this._virtualizer!.items = this._items;\n  }\n\n  private _setFunctions(config: VirtualizeDirectiveConfig<T>) {\n    const {renderItem, keyFunction} = config;\n    if (renderItem) {\n      this._renderItem = (item, idx) => renderItem(item, idx + this._first);\n    }\n    if (keyFunction) {\n      this._keyFunction = (item, idx) => keyFunction(item, idx + this._first);\n    }\n  }\n\n  private _makeVirtualizer(\n    hostElement: HTMLElement,\n    config: VirtualizeDirectiveConfig<T>\n  ) {\n    if (this._virtualizer) {\n      this._virtualizer.disconnected();\n    }\n    const {layout, scroller, items} = config;\n    this._virtualizer = new Virtualizer({hostElement, layout, scroller});\n    this._virtualizer.items = items;\n    this._virtualizer.connected();\n  }\n\n  private _initialize(part: ChildPart, config: VirtualizeDirectiveConfig<T>) {\n    const hostElement = part.parentNode as HTMLElement;\n    if (hostElement && hostElement.nodeType === 1) {\n      hostElement.addEventListener('rangeChanged', (e: RangeChangedEvent) => {\n        this._first = e.first;\n        this._last = e.last;\n        this.setValue(this.render());\n      });\n      this._makeVirtualizer(hostElement, config);\n    }\n  }\n\n  disconnected() {\n    this._virtualizer?.disconnected();\n  }\n\n  reconnected() {\n    this._virtualizer?.connected();\n  }\n}\n\nexport const virtualize = directive(VirtualizeDirective) as <T>(\n  config?: VirtualizeDirectiveConfig<T>\n) => DirectiveResult<typeof VirtualizeDirective>;\n"]}