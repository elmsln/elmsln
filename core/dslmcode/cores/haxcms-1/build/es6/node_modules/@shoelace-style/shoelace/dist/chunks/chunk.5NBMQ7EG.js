import{tree_styles_default as e}from"./chunk.ZUGTGVV2.js";import{SlTreeItem as t}from"./chunk.A4EV4GKC.js";import{clamp as s}from"./chunk.HF7GESMZ.js";import{LocalizeController as n}from"./chunk.2A3352EO.js";import{watch as l}from"./chunk.CJDR7567.js";import{ShoelaceElement as i}from"./chunk.7UUIUZXI.js";import{__decorateClass as o}from"./chunk.5F6CPPXO.js";import{html as c}from"../../../../lit/index.js";import{property as r,query as a}from"../../../../lit/decorators.js";function syncCheckboxes(e,s=!1){function syncParentItem(e){const t=e.getChildrenItems({includeDisabled:!1});if(t.length){const s=t.every((e=>e.selected)),n=t.every((e=>!e.selected&&!e.indeterminate));e.selected=s,e.indeterminate=!s&&!n}}!function syncDescendants(e){for(const t of e.getChildrenItems())t.selected=s?e.selected||t.selected:!t.disabled&&e.selected,syncDescendants(t);s&&syncParentItem(e)}(e),function syncAncestors(e){const s=e.parentElement;t.isTreeItem(s)&&(syncParentItem(s),syncAncestors(s))}(e)}var d=class extends i{constructor(){super(),this.selection="single",this.localize=new n(this),this.clickTarget=null,this.initTreeItem=e=>{e.selectable="multiple"===this.selection,["expand","collapse"].filter((e=>!!this.querySelector(`[slot="${e}-icon"]`))).forEach((t=>{const s=e.querySelector(`[slot="${t}-icon"]`);null===s?e.append(this.getExpandButtonIcon(t)):s.hasAttribute("data-default")&&s.replaceWith(this.getExpandButtonIcon(t))}))},this.handleTreeChanged=e=>{for(const s of e){const e=[...s.addedNodes].filter(t.isTreeItem),n=[...s.removedNodes].filter(t.isTreeItem);e.forEach(this.initTreeItem),this.lastFocusedItem&&n.includes(this.lastFocusedItem)&&(this.lastFocusedItem=null)}},this.handleFocusOut=e=>{const t=e.relatedTarget;t&&this.contains(t)||(this.tabIndex=0)},this.handleFocusIn=e=>{const s=e.target;e.target===this&&this.focusItem(this.lastFocusedItem||this.getAllTreeItems()[0]),t.isTreeItem(s)&&!s.disabled&&(this.lastFocusedItem&&(this.lastFocusedItem.tabIndex=-1),this.lastFocusedItem=s,this.tabIndex=-1,s.tabIndex=0)},this.addEventListener("focusin",this.handleFocusIn),this.addEventListener("focusout",this.handleFocusOut),this.addEventListener("sl-lazy-change",this.handleSlotChange)}async connectedCallback(){super.connectedCallback(),this.setAttribute("role","tree"),this.setAttribute("tabindex","0"),await this.updateComplete,this.mutationObserver=new MutationObserver(this.handleTreeChanged),this.mutationObserver.observe(this,{childList:!0,subtree:!0})}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver.disconnect()}getExpandButtonIcon(e){const t=("expand"===e?this.expandedIconSlot:this.collapsedIconSlot).assignedElements({flatten:!0})[0];if(t){const s=t.cloneNode(!0);return[s,...s.querySelectorAll("[id]")].forEach((e=>e.removeAttribute("id"))),s.setAttribute("data-default",""),s.slot=`${e}-icon`,s}return null}syncTreeItems(e){const t=this.getAllTreeItems();if("multiple"===this.selection)syncCheckboxes(e);else for(const s of t)s!==e&&(s.selected=!1)}selectItem(e){const t=[...this.selectedItems];"multiple"===this.selection?(e.selected=!e.selected,e.lazy&&(e.expanded=!0),this.syncTreeItems(e)):"single"===this.selection||e.isLeaf?(e.expanded=!e.expanded,e.selected=!0,this.syncTreeItems(e)):"leaf"===this.selection&&(e.expanded=!e.expanded);const s=this.selectedItems;(t.length!==s.length||s.some((e=>!t.includes(e))))&&Promise.all(s.map((e=>e.updateComplete))).then((()=>{this.emit("sl-selection-change",{detail:{selection:s}})}))}getAllTreeItems(){return[...this.querySelectorAll("sl-tree-item")]}focusItem(e){null==e||e.focus()}handleKeyDown(e){if(!["ArrowDown","ArrowUp","ArrowRight","ArrowLeft","Home","End","Enter"," "].includes(e.key))return;const t=this.getFocusableItems(),n="ltr"===this.localize.dir(),l="rtl"===this.localize.dir();if(t.length>0){e.preventDefault();const i=t.findIndex((e=>e.matches(":focus"))),o=t[i],focusItemAt=e=>{const n=t[s(e,0,t.length-1)];this.focusItem(n)},toggleExpand=e=>{o.expanded=e};"ArrowDown"===e.key?focusItemAt(i+1):"ArrowUp"===e.key?focusItemAt(i-1):n&&"ArrowRight"===e.key||l&&"ArrowLeft"===e.key?!o||o.disabled||o.expanded||o.isLeaf&&!o.lazy?focusItemAt(i+1):toggleExpand(!0):n&&"ArrowLeft"===e.key||l&&"ArrowRight"===e.key?!o||o.disabled||o.isLeaf||!o.expanded?focusItemAt(i-1):toggleExpand(!1):"Home"===e.key?focusItemAt(0):"End"===e.key?focusItemAt(t.length-1):"Enter"!==e.key&&" "!==e.key||o.disabled||this.selectItem(o)}}handleClick(e){const t=e.target,s=t.closest("sl-tree-item"),n=e.composedPath().some((e=>{var t;return null==(t=null==e?void 0:e.classList)?void 0:t.contains("tree-item__expand-button")}));s&&!s.disabled&&t===this.clickTarget&&("multiple"===this.selection&&n?s.expanded=!s.expanded:this.selectItem(s))}handleMouseDown(e){this.clickTarget=e.target}handleSlotChange(){this.getAllTreeItems().forEach(this.initTreeItem)}async handleSelectionChange(){const e="multiple"===this.selection,t=this.getAllTreeItems();this.setAttribute("aria-multiselectable",e?"true":"false");for(const s of t)s.selectable=e;e&&(await this.updateComplete,[...this.querySelectorAll(":scope > sl-tree-item")].forEach((e=>syncCheckboxes(e,!0))))}get selectedItems(){return this.getAllTreeItems().filter((e=>e.selected))}getFocusableItems(){const e=this.getAllTreeItems(),t=new Set;return e.filter((e=>{var s;if(e.disabled)return!1;const n=null==(s=e.parentElement)?void 0:s.closest("[role=treeitem]");return n&&(!n.expanded||n.loading||t.has(n))&&t.add(e),!t.has(e)}))}render(){return c`
      <div
        part="base"
        class="tree"
        @click=${this.handleClick}
        @keydown=${this.handleKeyDown}
        @mousedown=${this.handleMouseDown}
      >
        <slot @slotchange=${this.handleSlotChange}></slot>
        <span hidden aria-hidden="true"><slot name="expand-icon"></slot></span>
        <span hidden aria-hidden="true"><slot name="collapse-icon"></slot></span>
      </div>
    `}};d.styles=e,o([a("slot:not([name])")],d.prototype,"defaultSlot",2),o([a("slot[name=expand-icon]")],d.prototype,"expandedIconSlot",2),o([a("slot[name=collapse-icon]")],d.prototype,"collapsedIconSlot",2),o([r()],d.prototype,"selection",2),o([l("selection")],d.prototype,"handleSelectionChange",1);export{d as SlTree};