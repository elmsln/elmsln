import{offsetParent as t}from"../../../../composed-offset-position/dist/composed-offset-position.esm.js";function isTabbable(e){const a=e.tagName.toLowerCase();return"-1"!==e.getAttribute("tabindex")&&(!e.hasAttribute("disabled")&&((!e.hasAttribute("aria-disabled")||"false"===e.getAttribute("aria-disabled"))&&(!("input"===a&&"radio"===e.getAttribute("type")&&!e.hasAttribute("checked"))&&((null!==e.offsetParent||null!==t(e))&&("hidden"!==window.getComputedStyle(e).visibility&&(!("audio"!==a&&"video"!==a||!e.hasAttribute("controls"))||(!!e.hasAttribute("tabindex")||(!(!e.hasAttribute("contenteditable")||"false"===e.getAttribute("contenteditable"))||["button","input","select","textarea","a","audio","video","summary"].includes(a)))))))))}function getTabbableBoundary(t){var e,a;const n=getTabbableElements(t);return{start:null!=(e=n[0])?e:null,end:null!=(a=n[n.length-1])?a:null}}function getTabbableElements(t){const e=[];return function walk(t){t instanceof Element&&(e.push(t),null!==t.shadowRoot&&"open"===t.shadowRoot.mode&&walk(t.shadowRoot)),[...t.children].forEach((t=>walk(t)))}(t),e.filter(isTabbable).sort(((t,e)=>{const a=Number(t.getAttribute("tabindex"))||0;return(Number(e.getAttribute("tabindex"))||0)-a}))}export{getTabbableBoundary,getTabbableElements};