{"version":3,"file":"scripts.bundle.js","sources":["webpack:////Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/script-loader/addScript.js","webpack:////Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg-editor.js?1060","webpack:////Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg.js?cc25","webpack:////Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg-editor.js","webpack:////Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/script-loader/addScript.js\n// module id = 494\n// module chunks = 2","require(\"!!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/script-loader/addScript.js\")(require(\"!!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/raw-loader/index.js!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/source-map-loader/index.js!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg-editor.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg-editor.js\n// module id = 497\n// module chunks = 2","require(\"!!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/script-loader/addScript.js\")(require(\"!!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/raw-loader/index.js!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/node_modules/source-map-loader/index.js!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg.js\n// module id = 498\n// module chunks = 2","module.exports = \"(function(factory) {\\n    'use strict';\\n    if (typeof define === 'function' && define.amd) {\\n        define(['jquery'], function($){\\n            return factory(window, document, $);\\n        });\\n    } else if (typeof exports !== 'undefined') {\\n        module.exports = factory(window, document, require('jquery'));\\n    } else {\\n        return factory(window, document, jQuery);\\n    }\\n})(function(window, document, $){\\n    'use strict';\\n\\n    // http://stackoverflow.com/questions/17242144/javascript-convert-hsb-hsv-color-to-rgb-accurately\\n    var HSVtoRGB = function( h, s, v )\\n    {\\n        var r, g, b, i, f, p, q, t;\\n        i = Math.floor(h * 6);\\n        f = h * 6 - i;\\n        p = v * (1 - s);\\n        q = v * (1 - f * s);\\n        t = v * (1 - (1 - f) * s);\\n        switch (i % 6)\\n        {\\n            case 0: r = v, g = t, b = p; break;\\n            case 1: r = q, g = v, b = p; break;\\n            case 2: r = p, g = v, b = t; break;\\n            case 3: r = p, g = q, b = v; break;\\n            case 4: r = t, g = p, b = v; break;\\n            case 5: r = v, g = p, b = q; break;\\n        }\\n        var hr = Math.floor(r * 255).toString(16);\\n        var hg = Math.floor(g * 255).toString(16);\\n        var hb = Math.floor(b * 255).toString(16);\\n        return '#' + (hr.length < 2 ? '0' : '') + hr +\\n                     (hg.length < 2 ? '0' : '') + hg +\\n                     (hb.length < 2 ? '0' : '') + hb;\\n    };\\n\\n    // Encode htmlentities() - http://stackoverflow.com/questions/5499078/fastest-method-to-escape-html-tags-as-html-entities\\n    var html_encode = function( string )\\n    {\\n        return string.replace(/[&<>\\\"]/g, function(tag)\\n        {\\n            var charsToReplace = {\\n                '&': '&amp;',\\n                '<': '&lt;',\\n                '>': '&gt;',\\n                '\\\"': '&quot;'\\n            };\\n            return charsToReplace[tag] || tag;\\n        });\\n    };\\n\\n    // Create the Editor\\n    var create_editor = function( $textarea, classes, placeholder, toolbar_position, toolbar_buttons, toolbar_submit, label_selectImage,\\n                                  placeholder_url, placeholder_embed, max_imagesize, filter_imageType, on_imageupload, force_imageupload, video_from_url,\\n                                  on_keydown, on_keypress, on_keyup, on_autocomplete )\\n    {\\n        // Content: Insert link\\n        var wysiwygeditor_insertLink = function( wysiwygeditor, url )\\n        {\\n            if( ! url )\\n                ;\\n            else if( wysiwygeditor.getSelectedHTML() )\\n                wysiwygeditor.insertLink( url );\\n            else\\n                wysiwygeditor.insertHTML( '<a href=\\\"' + html_encode(url) + '\\\">' + html_encode(url) + '</a>' );\\n            wysiwygeditor.closePopup().collapseSelection();\\n        };\\n        var content_insertlink = function(wysiwygeditor, $modify_link)\\n        {\\n            var $inputurl = $('<input type=\\\"text\\\" value=\\\"\\\">').val( $modify_link ? $modify_link.attr('href') : '' )  // prop('href') does not reflect real value\\n                                .addClass('wysiwyg-input')\\n                                .keypress(function(event){\\n                                    if( event.which != 10 && event.which != 13 )\\n                                        return ;\\n                                    if( $modify_link )\\n                                    {\\n                                        $modify_link.prop( 'href', $inputurl.val() );\\n                                        wysiwygeditor.closePopup().collapseSelection();\\n                                    }\\n                                    else\\n                                        wysiwygeditor_insertLink( wysiwygeditor,$inputurl.val() );\\n                                });\\n            if( placeholder_url )\\n                $inputurl.prop( 'placeholder', placeholder_url );\\n            var $okaybutton = $();\\n            if( toolbar_submit )\\n                $okaybutton = toolbar_button(toolbar_submit).click(function(event){\\n                                    if( $modify_link )\\n                                    {\\n                                        $modify_link.prop( 'href', $inputurl.val() );\\n                                        wysiwygeditor.closePopup().collapseSelection();\\n                                    }\\n                                    else\\n                                        wysiwygeditor_insertLink( wysiwygeditor, $inputurl.val() );\\n                                    event.stopPropagation();\\n                                    event.preventDefault();\\n                                    return false;\\n                                });\\n            var $content = $('<div/>').addClass('wysiwyg-toolbar-form')\\n                                      .prop('unselectable','on');\\n            $content.append($inputurl).append($okaybutton);\\n            return $content;\\n        };\\n\\n        // Content: Insert image\\n        var content_insertimage = function(wysiwygeditor)\\n        {\\n            // Add image to editor\\n            var insert_image_wysiwyg = function( url, filename )\\n            {\\n                var html = '<img id=\\\"wysiwyg-insert-image\\\" src=\\\"\\\" alt=\\\"\\\"' + (filename ? ' title=\\\"'+html_encode(filename)+'\\\"' : '') + '>';\\n                wysiwygeditor.insertHTML( html ).closePopup().collapseSelection();\\n                var $image = $('#wysiwyg-insert-image').removeAttr('id');\\n                if( max_imagesize )\\n                {\\n                    $image.css({maxWidth: max_imagesize[0]+'px',\\n                                maxHeight: max_imagesize[1]+'px'})\\n                          .load( function() {\\n                                $image.css({maxWidth: '',\\n                                            maxHeight: ''});\\n                                // Resize $image to fit \\\"clip-image\\\"\\n                                var image_width = $image.width(),\\n                                    image_height = $image.height();\\n                                if( image_width > max_imagesize[0] || image_height > max_imagesize[1] )\\n                                {\\n                                    if( (image_width/image_height) > (max_imagesize[0]/max_imagesize[1]) )\\n                                    {\\n                                        image_height = parseInt(image_height / image_width * max_imagesize[0]);\\n                                        image_width = max_imagesize[0];\\n                                    }\\n                                    else\\n                                    {\\n                                        image_width = parseInt(image_width / image_height * max_imagesize[1]);\\n                                        image_height = max_imagesize[1];\\n                                    }\\n                                    $image.prop('width',image_width)\\n                                          .prop('height',image_height);\\n                                }\\n                            });\\n                }\\n                $image.prop('src', url);\\n            };\\n            // Create popup\\n            var $content = $('<div/>').addClass('wysiwyg-toolbar-form')\\n                                      .prop('unselectable','on');\\n            // Add image via 'Browse...'\\n            var $fileuploader = null,\\n                $fileuploader_input = $('<input type=\\\"file\\\">')\\n                                        .css({position: 'absolute',\\n                                              left: 0,\\n                                              top: 0,\\n                                              width: '100%',\\n                                              height: '100%',\\n                                              opacity: 0,\\n                                              cursor: 'pointer'});\\n            if( ! force_imageupload && window.File && window.FileReader && window.FileList )\\n            {\\n                // File-API\\n                var loadImageFromFile = function( file )\\n                {\\n                    // Only process image files\\n                    if( typeof(filter_imageType) === 'function' && ! filter_imageType(file) )\\n                        return;\\n                    else if( ! file.type.match(filter_imageType) )\\n                        return;\\n                    var reader = new FileReader();\\n                    reader.onload = function(event) {\\n                        var dataurl = event.target.result;\\n                        insert_image_wysiwyg( dataurl, file.name );\\n                    };\\n                    // Read in the image file as a data URL\\n                    reader.readAsDataURL( file );\\n                };\\n                $fileuploader = $fileuploader_input\\n                                    .prop('draggable','true')\\n                                    .change(function(event){\\n                                        var files = event.target.files; // FileList object\\n                                        for(var i=0; i < files.length; ++i)\\n                                            loadImageFromFile( files[i] );\\n                                    })\\n                                    .on('dragover',function(event){\\n                                        event.originalEvent.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\\n                                        event.stopPropagation();\\n                                        event.preventDefault();\\n                                        return false;\\n                                    })\\n                                    .on('drop', function(event){\\n                                        var files = event.originalEvent.dataTransfer.files; // FileList object.\\n                                        for(var i=0; i < files.length; ++i)\\n                                            loadImageFromFile( files[i] );\\n                                        event.stopPropagation();\\n                                        event.preventDefault();\\n                                        return false;\\n                                    });\\n            }\\n            else if( on_imageupload )\\n            {\\n                // Upload image to a server\\n                var $input = $fileuploader_input\\n                                    .change(function(event){\\n                                        on_imageupload.call( this, insert_image_wysiwyg );\\n                                    });\\n                $fileuploader = $('<form/>').append($input);\\n            }\\n            if( $fileuploader )\\n                $('<div/>').addClass( 'wysiwyg-browse' )\\n                           .html( label_selectImage )\\n                           .append( $fileuploader )\\n                           .appendTo( $content );\\n            // Add image via 'URL'\\n            var $inputurl = $('<input type=\\\"text\\\" value=\\\"\\\">').addClass('wysiwyg-input')\\n                                .keypress(function(event){\\n                                    if( event.which == 10 || event.which == 13 )\\n                                        insert_image_wysiwyg( $inputurl.val() );\\n                                });\\n            if( placeholder_url )\\n                $inputurl.prop( 'placeholder', placeholder_url );\\n            var $okaybutton = $();\\n            if( toolbar_submit )\\n                $okaybutton = toolbar_button(toolbar_submit).click(function(event){\\n                                    insert_image_wysiwyg( $inputurl.val() );\\n                                    event.stopPropagation();\\n                                    event.preventDefault();\\n                                    return false;\\n                                });\\n            $content.append( $('<div/>').append($inputurl).append($okaybutton) );\\n            return $content;\\n        };\\n\\n        // Content: Insert video\\n        var content_insertvideo = function(wysiwygeditor)\\n        {\\n            // Add video to editor\\n            var insert_video_wysiwyg = function( url, html )\\n            {\\n                url = $.trim(url||'');\\n                html = $.trim(html||'');\\n                var website_url = false;\\n                if( url.length && ! html.length )\\n                    website_url = url;\\n                else if( html.indexOf('<') == -1 && html.indexOf('>') == -1 &&\\n                         html.match(/^(?:https?:\\\\/)?\\\\/?(?:[^:\\\\/\\\\s]+)(?:(?:\\\\/\\\\w+)*\\\\/)(?:[\\\\w\\\\-\\\\.]+[^#?\\\\s]+)(?:.*)?(?:#[\\\\w\\\\-]+)?$/) )\\n                    website_url = html;\\n                if( website_url && video_from_url )\\n                    html = video_from_url( website_url ) || '';\\n                if( ! html.length && website_url )\\n                    html = '<video src=\\\"' + html_encode(website_url) + '\\\">';\\n                wysiwygeditor.insertHTML( html ).closePopup().collapseSelection();\\n            };\\n            // Create popup\\n            var $content = $('<div/>').addClass('wysiwyg-toolbar-form')\\n                                      .prop('unselectable','on');\\n            // Add video via '<embed/>'\\n            var $textareaembed = $('<textarea>').addClass('wysiwyg-input wysiwyg-inputtextarea');\\n            if( placeholder_embed )\\n                $textareaembed.prop( 'placeholder', placeholder_embed );\\n            $('<div/>').addClass( 'wysiwyg-embedcode' )\\n                       .append( $textareaembed )\\n                       .appendTo( $content );\\n            // Add video via 'URL'\\n            var $inputurl = $('<input type=\\\"text\\\" value=\\\"\\\">').addClass('wysiwyg-input')\\n                                .keypress(function(event){\\n                                    if( event.which == 10 || event.which == 13 )\\n                                        insert_video_wysiwyg( $inputurl.val() );\\n                                });\\n            if( placeholder_url )\\n                $inputurl.prop( 'placeholder', placeholder_url );\\n            var $okaybutton = $();\\n            if( toolbar_submit )\\n                $okaybutton = toolbar_button(toolbar_submit).click(function(event){\\n                                    insert_video_wysiwyg( $inputurl.val(), $textareaembed.val() );\\n                                    event.stopPropagation();\\n                                    event.preventDefault();\\n                                    return false;\\n                                });\\n            $content.append( $('<div/>').append($inputurl).append($okaybutton) );\\n            return $content;\\n        };\\n\\n        // Content: Color palette\\n        var content_colorpalette = function( wysiwygeditor, forecolor )\\n        {\\n            var $content = $('<table/>')\\n                            .prop('cellpadding','0')\\n                            .prop('cellspacing','0')\\n                            .prop('unselectable','on');\\n            for( var row=1; row < 15; ++row ) // should be '16' - but last line looks so dark\\n            {\\n                var $rows = $('<tr/>');\\n                for( var col=0; col < 25; ++col ) // last column is grayscale\\n                {\\n                    var color;\\n                    if( col == 24 )\\n                    {\\n                        var gray = Math.floor(255 / 13 * (14 - row)).toString(16);\\n                        var hexg = (gray.length < 2 ? '0' : '') + gray;\\n                        color = '#' + hexg + hexg + hexg;\\n                    }\\n                    else\\n                    {\\n                        var hue        = col / 24;\\n                        var saturation = row <= 8 ? row     /8 : 1;\\n                        var value      = row  > 8 ? (16-row)/8 : 1;\\n                        color = HSVtoRGB( hue, saturation, value );\\n                    }\\n                    $('<td/>').addClass('wysiwyg-toolbar-color')\\n                              .prop('title', color)\\n                              .prop('unselectable','on')\\n                              .css({backgroundColor: color})\\n                              .click(function(){\\n                                  var color = this.title;\\n                                  if( forecolor )\\n                                      wysiwygeditor.forecolor( color ).closePopup().collapseSelection();\\n                                  else\\n                                      wysiwygeditor.highlight( color ).closePopup().collapseSelection();\\n                                  return false;\\n                              })\\n                              .appendTo( $rows );\\n                }\\n                $content.append( $rows );\\n            }\\n            return $content;\\n        };\\n\\n        // Handlers\\n        var get_toolbar_handler = function( name, popup_callback )\\n        {\\n            switch( name )\\n            {\\n                case 'insertimage':\\n                    if( ! popup_callback )\\n                        return null;\\n                    return function( target ) {\\n                        popup_callback( content_insertimage(wysiwygeditor), target );\\n                    };\\n                case 'insertvideo':\\n                    if( ! popup_callback )\\n                        return null;\\n                    return function( target ) {\\n                        popup_callback( content_insertvideo(wysiwygeditor), target );\\n                    };\\n                case 'insertlink':\\n                    if( ! popup_callback )\\n                        return null;\\n                    return function( target ) {\\n                        popup_callback( content_insertlink(wysiwygeditor), target );\\n                    };\\n                case 'bold':\\n                    return function() {\\n                        wysiwygeditor.bold(); // .closePopup().collapseSelection()\\n                    };\\n                case 'italic':\\n                    return function() {\\n                        wysiwygeditor.italic(); // .closePopup().collapseSelection()\\n                    };\\n                case 'underline':\\n                    return function() {\\n                        wysiwygeditor.underline(); // .closePopup().collapseSelection()\\n                    };\\n                case 'strikethrough':\\n                    return function() {\\n                        wysiwygeditor.strikethrough(); // .closePopup().collapseSelection()\\n                    };\\n                case 'forecolor':\\n                    if( ! popup_callback )\\n                        return null;\\n                    return function( target ) {\\n                        popup_callback( content_colorpalette(wysiwygeditor,true), target );\\n                    };\\n                case 'highlight':\\n                    if( ! popup_callback )\\n                        return null;\\n                    return function( target ) {\\n                        popup_callback( content_colorpalette(wysiwygeditor,false), target );\\n                    };\\n                case 'alignleft':\\n                    return function() {\\n                        wysiwygeditor.align('left'); // .closePopup().collapseSelection()\\n                    };\\n                case 'aligncenter':\\n                    return function() {\\n                        wysiwygeditor.align('center'); // .closePopup().collapseSelection()\\n                    };\\n                case 'alignright':\\n                    return function() {\\n                        wysiwygeditor.align('right'); // .closePopup().collapseSelection()\\n                    };\\n                case 'alignjustify':\\n                    return function() {\\n                        wysiwygeditor.align('justify'); // .closePopup().collapseSelection()\\n                    };\\n                case 'subscript':\\n                    return function() {\\n                        wysiwygeditor.subscript(); // .closePopup().collapseSelection()\\n                    };\\n                case 'superscript':\\n                    return function() {\\n                        wysiwygeditor.superscript(); // .closePopup().collapseSelection()\\n                    };\\n                case 'indent':\\n                    return function() {\\n                        wysiwygeditor.indent(); // .closePopup().collapseSelection()\\n                    };\\n                case 'outdent':\\n                    return function() {\\n                        wysiwygeditor.indent(true); // .closePopup().collapseSelection()\\n                    };\\n                case 'orderedList':\\n                    return function() {\\n                        wysiwygeditor.insertList(true); // .closePopup().collapseSelection()\\n                    };\\n                case 'unorderedList':\\n                    return function() {\\n                        wysiwygeditor.insertList(); // .closePopup().collapseSelection()\\n                    };\\n                case 'removeformat':\\n                    return function() {\\n                        wysiwygeditor.removeFormat().closePopup().collapseSelection();\\n                    };\\n            }\\n            return null;\\n        }\\n\\n        // Create the toolbar\\n        var toolbar_button = function( button ) {\\n            var $element = $('<a/>').addClass( 'wysiwyg-toolbar-icon' )\\n                                    .prop('href','#')\\n                                    .prop('unselectable','on')\\n                                    .append(button.image);\\n            // pass other properties as \\\"prop()\\\"\\n            $.each( button, function( name, value )\\n            {\\n                switch( name )\\n                {\\n                    // classes\\n                    case 'class':\\n                        $element.addClass( value );\\n                        break;\\n                    // special meaning\\n                    case 'image':\\n                    case 'html':\\n                    case 'popup':\\n                    case 'click':\\n                    case 'showstatic':\\n                    case 'showselection':\\n                        break;\\n                    default: // button.title, ...\\n                        $element.attr( name, value );\\n                        break;\\n                }\\n            });\\n            return $element;\\n        };\\n        var add_buttons_to_toolbar = function( $toolbar, selection, popup_open_callback, popup_position_callback )\\n        {\\n            $.each( toolbar_buttons, function(key, value) {\\n                if( ! value )\\n                    return ;\\n                // Skip buttons on the toolbar\\n                if( selection === false && 'showstatic' in value && ! value.showstatic )\\n                    return ;\\n                // Skip buttons on selection\\n                if( selection === true && 'showselection' in value && ! value.showselection )\\n                    return ;\\n                // Click handler\\n                var toolbar_handler;\\n                if( 'click' in value )\\n                    toolbar_handler = function( target ) {\\n                        value.click( $(target) );\\n                    };\\n                else if( 'popup' in value )\\n                    toolbar_handler = function( target ) {\\n                        var $popup = popup_open_callback();\\n                        var overwrite_offset = value.popup( $popup, $(target) );\\n                        popup_position_callback( $popup, target, overwrite_offset );\\n                    };\\n                else\\n                    toolbar_handler = get_toolbar_handler( key, function( $content, target ) {\\n                        var $popup = popup_open_callback();\\n                        $popup.append( $content );\\n                        popup_position_callback( $popup, target );\\n                        $popup.find('input[type=text]:first').focus();\\n                    });\\n                // Create the toolbar button\\n                var $button;\\n                if( toolbar_handler )\\n                    $button = toolbar_button( value ).click( function(event) {\\n                        toolbar_handler( event.currentTarget );\\n                        // Give the focus back to the editor. Technically not necessary\\n                        if( get_toolbar_handler(key) ) // only if not a popup-handler\\n                            wysiwygeditor.getElement().focus();\\n                        event.stopPropagation();\\n                        event.preventDefault();\\n                        return false;\\n                    });\\n                else if( value.html )\\n                    $button = $(value.html);\\n                if( $button )\\n                    $toolbar.append( $button );\\n            });\\n        };\\n        var popup_position = function( $popup, $container, left, top )  // left+top relative to $container\\n        {\\n            // Test parents\\n            var container_node = $container.get(0),\\n                offsetparent = container_node.offsetParent,\\n                offsetparent_left = 0,\\n                offsetparent_top = 0,\\n                offsetparent_break = false,\\n                offsetparent_window_left = 0,     //$.offset() does not work with Safari 3 and 'position:fixed'\\n                offsetparent_window_top = 0,\\n                offsetparent_fixed = false,\\n                offsetparent_overflow = false,\\n                popup_width = $popup.width(),\\n                node = offsetparent;\\n            while( node )\\n            {\\n                offsetparent_window_left += node.offsetLeft;\\n                offsetparent_window_top += node.offsetTop;\\n                var $node = $(node),\\n                    node_position = $node.css('position');\\n                if( node_position != 'static' )\\n                    offsetparent_break = true;\\n                else if( ! offsetparent_break )\\n                {\\n                    offsetparent_left += node.offsetLeft;\\n                    offsetparent_top += node.offsetTop;\\n                }\\n                if( node_position == 'fixed' )\\n                    offsetparent_fixed = true;\\n                if( $node.css('overflow') != 'visible' )\\n                    offsetparent_overflow = true;\\n                node = node.offsetParent;\\n            }\\n            // Move $popup as high as possible in the DOM tree: offsetParent of $container\\n            var $offsetparent = $(offsetparent || document.body);\\n            $offsetparent.append( $popup );\\n            left += offsetparent_left + container_node.offsetLeft; // $container.position() does not work with Safari 3\\n            top += offsetparent_top + container_node.offsetTop;\\n            // Trim to offset-parent\\n            if( offsetparent_fixed || offsetparent_overflow )\\n            {\\n                if( left + popup_width > $offsetparent.width() - 1 )\\n                    left = $offsetparent.width() - popup_width - 1;\\n                if( left < 1 )\\n                    left = 1;\\n            }\\n            // Trim to viewport\\n            var viewport_width = $(window).width();\\n            if( offsetparent_window_left + left + popup_width > viewport_width - 1 )\\n                left = viewport_width - offsetparent_window_left - popup_width - 1;\\n            var scroll_left = offsetparent_fixed ? 0 : $(window).scrollLeft();\\n            if( offsetparent_window_left + left < scroll_left + 1 )\\n                left = scroll_left - offsetparent_window_left + 1;\\n            // Set offset\\n            $popup.css({ left: parseInt(left) + 'px',\\n                         top: parseInt(top) + 'px' });\\n        };\\n\\n\\n        // Transform the textarea to contenteditable\\n        var hotkeys = {},\\n            autocomplete = null;\\n        var create_wysiwyg = function( $textarea, $editor, $container, $placeholder )\\n        {\\n            var handle_autocomplete = function( keypress, key, character, shiftKey, altKey, ctrlKey, metaKey )\\n            {\\n                if( ! on_autocomplete )\\n                    return ;\\n                var typed = autocomplete || '';\\n                switch( key )\\n                {\\n                    case  8: // backspace\\n                        typed = typed.substring( 0, typed.length - 1 );\\n                        // fall through\\n                    case 13: // enter\\n                    case 27: // escape\\n                    case 33: // pageUp\\n                    case 34: // pageDown\\n                    case 35: // end\\n                    case 36: // home\\n                    case 37: // left\\n                    case 38: // up\\n                    case 39: // right\\n                    case 40: // down\\n                        if( keypress )\\n                            return ;\\n                        character = false;\\n                        break;\\n                    default:\\n                        if( ! keypress )\\n                            return ;\\n                        typed += character;\\n                        break;\\n                }\\n                var rc = on_autocomplete( typed, key, character, shiftKey, altKey, ctrlKey, metaKey );\\n                if( typeof(rc) == 'object' && rc.length )\\n                {\\n                    // Show autocomplete\\n                    var $popup = $(wysiwygeditor.openPopup());\\n                    $popup.hide().addClass( 'wysiwyg-popup wysiwyg-popuphover' ) // show later\\n                          .empty().append( rc );\\n                    autocomplete = typed;\\n                }\\n                else\\n                {\\n                    // Hide autocomplete\\n                    wysiwygeditor.closePopup();\\n                    autocomplete = null;\\n                    return rc; // swallow key if 'false'\\n                }\\n            };\\n\\n            // Options to wysiwyg.js\\n            var option = {\\n                element: $textarea.get(0),\\n                contenteditable: $editor ? $editor.get(0) : null,\\n                onKeyDown: function( key, character, shiftKey, altKey, ctrlKey, metaKey )\\n                    {\\n                        // Ask master\\n                        if( on_keydown && on_keydown(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                            return false; // swallow key\\n                        // Exec hotkey (onkeydown because e.g. CTRL+B would oben the bookmarks)\\n                        if( character && !shiftKey && !altKey && ctrlKey && !metaKey )\\n                        {\\n                            var hotkey = character.toLowerCase();\\n                            if( ! hotkeys[hotkey] )\\n                                return ;\\n                            hotkeys[hotkey]();\\n                            return false; // prevent default\\n                        }\\n                        // Handle autocomplete\\n                        return handle_autocomplete( false, key, character, shiftKey, altKey, ctrlKey, metaKey );\\n                    },\\n                onKeyPress: function( key, character, shiftKey, altKey, ctrlKey, metaKey )\\n                    {\\n                        // Ask master\\n                        if( on_keypress && on_keypress(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                            return false; // swallow key\\n                        // Handle autocomplete\\n                        return handle_autocomplete( true, key, character, shiftKey, altKey, ctrlKey, metaKey );\\n                    },\\n                onKeyUp: function( key, character, shiftKey, altKey, ctrlKey, metaKey )\\n                    {\\n                        // Ask master\\n                        if( on_keyup && on_keyup(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                            return false; // swallow key\\n                    },\\n                onSelection: function( collapsed, rect, nodes, rightclick )\\n                    {\\n                        var show_popup = true,\\n                            $special_popup = null;\\n                        // Click on a link opens the link-popup\\n                        if( collapsed )\\n                            $.each( nodes, function(index, node) {\\n                                var $link = $(node).closest('a');\\n                                if( $link.length != 0 ) { // only clicks on text-nodes\\n                                    $special_popup = content_insertlink( wysiwygeditor, $link )\\n                                    return false; // break\\n                                }\\n                            });\\n                        // Read-Only?\\n                        if( wysiwygeditor.readOnly() )\\n                            show_popup = false;\\n                        // Fix type error - https://github.com/wysiwygjs/wysiwyg.js/issues/4\\n                        else if( ! rect )\\n                            show_popup = false;\\n                        // Force a special popup?\\n                        else if( $special_popup )\\n                            ;\\n                        // A right-click always opens the popup\\n                        else if( rightclick )\\n                            ;\\n                        // Autocomplete popup?\\n                        else if( autocomplete )\\n                            ;\\n                        // No selection-popup wanted?\\n                        else if( $.inArray('selection',toolbar_position.split('-')) == -1 )\\n                            show_popup = false;\\n                        // Selected popup wanted, but nothing selected (=selection collapsed)\\n                        else if( collapsed )\\n                            show_popup = false;\\n                        // Only one image? Better: Display a special image-popup\\n                        else if( nodes.length == 1 && nodes[0].nodeName == 'IMG' ) // nodes is not a sparse array\\n                            show_popup = false;\\n                        if( ! show_popup )\\n                        {\\n                            wysiwygeditor.closePopup();\\n                            return ;\\n                        }\\n                        // Popup position\\n                        var $popup;\\n                        var apply_popup_position = function()\\n                        {\\n                            var popup_width = $popup.outerWidth();\\n                            // Point is the center of the selection - relative to $parent not the element\\n                            var $parent = $textarea.parent(),\\n                                container_offset = $parent.offset(),\\n                                editor_offset = $(wysiwygeditor.getElement()).offset();\\n                            var left = rect.left + parseInt(rect.width / 2) - parseInt(popup_width / 2) + editor_offset.left - container_offset.left;\\n                            var top = rect.top + rect.height + editor_offset.top - container_offset.top;\\n                            popup_position( $popup, $parent, left, top );\\n                        };\\n                        // Open popup\\n                        $popup = $(wysiwygeditor.openPopup());\\n                        // if wrong popup -> close and open a new one\\n                        if( ! $popup.hasClass('wysiwyg-popuphover') || (!$popup.data('wysiwygjs-special')) != (!$special_popup) )\\n                            $popup = $(wysiwygeditor.closePopup().openPopup());\\n                        if( autocomplete )\\n                            $popup.show();\\n                        else if( ! $popup.hasClass('wysiwyg-popup') )\\n                        {\\n                            // add classes + buttons\\n                            $popup.addClass( 'wysiwyg-popup wysiwyg-popuphover' );\\n                            if( $special_popup )\\n                                $popup.empty().append( $special_popup ).data('wysiwygjs-special',true);\\n                            else\\n                                add_buttons_to_toolbar( $popup, true,\\n                                    function() {\\n                                        return $popup.empty();\\n                                    },\\n                                    apply_popup_position );\\n                        }\\n                        // Apply position\\n                        apply_popup_position();\\n                    },\\n                onOpenpopup: function() {\\n                        add_class_active();\\n                    },\\n                onClosepopup: function() {\\n                        autocomplete = null;\\n                        remove_class_active();\\n                    },\\n                hijackContextmenu: (toolbar_position == 'selection'),\\n                readOnly: !!$textarea.prop( 'readonly' )\\n            };\\n            if( $placeholder )\\n            {\\n                option.onPlaceholder = function( visible ) {\\n                    if( visible )\\n                        $placeholder.show();\\n                    else\\n                        $placeholder.hide();\\n                };\\n            }\\n\\n            var wysiwygeditor = wysiwyg( option );\\n            return wysiwygeditor;\\n        }\\n\\n\\n        // Create a container if it does not exist yet\\n        var $container = $textarea.closest( '.wysiwyg-container' );\\n        if( $container.length == 0 )\\n        {\\n            $container = $('<div/>').addClass('wysiwyg-container');\\n            if( classes )\\n                $container.addClass( classes );\\n            $textarea.wrap( $container );\\n            $container = $textarea.closest( '.wysiwyg-container' );\\n        }\\n\\n        // Create the placeholder if it does not exist yet and we want one\\n        var $wrapper = $textarea.closest( '.wysiwyg-wrapper' );\\n        if( placeholder && $wrapper.length == 0 )\\n        {\\n            $wrapper = $('<div/>').addClass('wysiwyg-wrapper');\\n            $textarea.wrap( $wrapper );\\n            $wrapper = $textarea.closest( '.wysiwyg-wrapper' );\\n        }\\n        var $placeholder = null;\\n        if( $wrapper.length != 0 )\\n            $placeholder = $wrapper.find( '.wysiwyg-placeholder' );\\n        if( placeholder && (! $placeholder || $placeholder.length == 0) )\\n        {\\n            $placeholder = $('<div/>').addClass( 'wysiwyg-placeholder' )\\n                                      .html( placeholder )\\n                                      .hide();\\n            $wrapper.prepend( $placeholder );\\n        }\\n\\n        // Create the WYSIWYG Editor\\n        var $editor = $container.find( '.wysiwyg-editor' );\\n        if( $editor.length == 0 )\\n            $editor = null;\\n        var wysiwygeditor = create_wysiwyg( $textarea, $editor, $container, $placeholder );\\n        if( wysiwygeditor.legacy )\\n        {\\n            if( $editor )\\n                $editor.hide();\\n            if( $placeholder )\\n                $placeholder.hide();\\n            var $textarea = $(wysiwygeditor.getElement());\\n            $textarea.show().addClass( 'wysiwyg-textarea' );\\n            if( $textarea.is(':visible') ) // inside the DOM\\n                $textarea.width( $container.width() - ($textarea.outerWidth() - $textarea.width()) );\\n        }\\n        else\\n        {\\n            if( ! $editor )\\n                $(wysiwygeditor.getElement()).addClass( 'wysiwyg-editor' );\\n\\n            // Clicking the placeholder -> focus editor - fixes IE6-IE8\\n            $wrapper.click(function(){\\n                wysiwygeditor.getElement().focus();\\n            });\\n\\n            // Support ':active'-class\\n            var remove_active_timeout = null,\\n                initialize_toolbar = null;\\n            var add_class_active = function() {\\n                if( remove_active_timeout )\\n                    clearTimeout( remove_active_timeout );\\n                remove_active_timeout = null;\\n                if( initialize_toolbar )\\n                {\\n                    initialize_toolbar();\\n                    initialize_toolbar = null;\\n                }\\n                $container.addClass( 'wysiwyg-active' );\\n                $container.find( '.wysiwyg-toolbar-focus' ).slideDown(200);\\n            };\\n            var remove_class_active = function() {\\n                if( remove_active_timeout || document.activeElement == wysiwygeditor.getElement() )\\n                    return ;\\n                remove_active_timeout = setTimeout( function() {\\n                    remove_active_timeout = null;\\n                    $container.removeClass( 'wysiwyg-active' );\\n                    if( $.trim(wysiwygeditor.getHTML().replace(/<br\\\\s*[\\\\/]?>/gi,'')).length == 0 )\\n                        $container.find( '.wysiwyg-toolbar-focus' ).slideUp(200);\\n                }, 100 );\\n            };\\n            $(wysiwygeditor.getElement()).focus( add_class_active ).blur( remove_class_active );\\n            $textarea.closest( 'form' ).on( 'reset', remove_class_active );\\n\\n            // Hotkey+Commands-List\\n            var commands = {};\\n            $.each( toolbar_buttons, function(key, value) {\\n                if( ! value || ! value.hotkey )\\n                    return ;\\n                var toolbar_handler = get_toolbar_handler( key );\\n                if( ! toolbar_handler )\\n                    return ;\\n                hotkeys[value.hotkey.toLowerCase()] = toolbar_handler;\\n                commands[key] = toolbar_handler;\\n            });\\n\\n            // Toolbar on top or bottom\\n            if( ! $.isEmptyObject(toolbar_buttons) && toolbar_position != 'selection' )\\n            {\\n                var toolbar_top = $.inArray( 'top', toolbar_position.split('-') ) != -1;\\n                var toolbar_focus = $.inArray( 'focus', toolbar_position.split('-') ) != -1;\\n                // Callback to create toolbar on demand\\n                var create_toolbar = function()\\n                {\\n                    var $toolbar = $('<div/>').addClass( 'wysiwyg-toolbar' ).addClass( toolbar_top ? 'wysiwyg-toolbar-top' : 'wysiwyg-toolbar-bottom' );\\n                    if( toolbar_focus )\\n                        $toolbar.hide().addClass( 'wysiwyg-toolbar-focus' );\\n                    // Add buttons to the toolbar\\n                    add_buttons_to_toolbar( $toolbar, false,\\n                        function() {\\n                            // Open a popup from the toolbar\\n                            var $popup = $(wysiwygeditor.openPopup());\\n                            // if wrong popup -> create a new one\\n                            if( $popup.hasClass('wysiwyg-popup') && $popup.hasClass('wysiwyg-popuphover') )\\n                                $popup = $(wysiwygeditor.closePopup().openPopup());\\n                            if( ! $popup.hasClass('wysiwyg-popup') )\\n                                // add classes + content\\n                                $popup.addClass( 'wysiwyg-popup' );\\n                            return $popup;\\n                        },\\n                        function( $popup, target, overwrite_offset ) {\\n                            // Popup position\\n                            var $button = $(target);\\n                            var popup_width = $popup.outerWidth();\\n                            // Point is the top/bottom-center of the button\\n                            var left = $button.offset().left - $container.offset().left + parseInt($button.width() / 2) - parseInt(popup_width / 2);\\n                            var top = $button.offset().top - $container.offset().top;\\n                            if( toolbar_top )\\n                                top += $button.outerHeight();\\n                            else\\n                                top -= $popup.outerHeight();\\n                            if( overwrite_offset )\\n                            {\\n                                left = overwrite_offset.left;\\n                                top = overwrite_offset.top;\\n                            }\\n                            popup_position( $popup, $container, left, top );\\n                        });\\n                    if( toolbar_top )\\n                        $container.prepend( $toolbar );\\n                    else\\n                        $container.append( $toolbar );\\n                };\\n                if( ! toolbar_focus )\\n                    create_toolbar();\\n                else\\n                    initialize_toolbar = create_toolbar;\\n            }\\n        }\\n\\n        // Export userdata\\n        return {\\n            wysiwygeditor: wysiwygeditor,\\n            $container: $container\\n        };\\n    };\\n\\n    // jQuery Interface\\n    $.fn.wysiwyg = function( option, param )\\n    {\\n        if( ! option || typeof(option) === 'object' )\\n        {\\n            option = $.extend( {}, option );\\n            return this.each(function() {\\n                var $that = $(this);\\n                // Already an editor\\n                if( $that.data( 'wysiwygjs') )\\n                    return ;\\n\\n                // Two modes: toolbar on top and on bottom\\n                var classes = option['class'],\\n                    placeholder = option.placeholder || $that.prop('placeholder'),\\n                    toolbar_position = option.toolbar || 'top',\\n                    toolbar_buttons = option.buttons || {},\\n                    toolbar_submit = option.submit,\\n                    label_selectImage = option.selectImage,\\n                    placeholder_url = option.placeholderUrl || null,\\n                    placeholder_embed = option.placeholderEmbed || null,\\n                    max_imagesize = option.maxImageSize || null,\\n                    filter_imageType = option.filterImageType || '^image/',\\n                    on_imageupload = option.onImageUpload || null,\\n                    force_imageupload = option.forceImageUpload && on_imageupload,\\n                    video_from_url = option.videoFromUrl || null,\\n                    on_keydown = option.onKeyDown || null,\\n                    on_keypress = option.onKeyPress || null,\\n                    on_keyup = option.onKeyUp || null,\\n                    on_autocomplete = option.onAutocomplete || null;\\n\\n                // Create the WYSIWYG Editor\\n                var data = create_editor( $that, classes, placeholder, toolbar_position, toolbar_buttons, toolbar_submit, label_selectImage,\\n                                          placeholder_url, placeholder_embed, max_imagesize, filter_imageType, on_imageupload, force_imageupload, video_from_url,\\n                                          on_keydown, on_keypress, on_keyup, on_autocomplete );\\n                $that.data( 'wysiwygjs', data );\\n            });\\n        }\\n        else if( this.length == 1 )\\n        {\\n            var data = this.data('wysiwygjs');\\n            if( ! data )\\n                return this;\\n            if( option == 'container' )\\n                return data.$container;\\n            if( option == 'shell' )\\n                return data.wysiwygeditor;\\n        }\\n        return this;\\n    };\\n});\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/raw-loader!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/source-map-loader!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg-editor.js\n// module id = 835\n// module chunks = 2","module.exports = \"(function(factory) {\\n    'use strict';\\n    if (typeof define === 'function' && define.amd) {\\n        define([], function(){\\n            return factory(window, document);\\n        });\\n    } else if (typeof exports !== 'undefined') {\\n        module.exports = factory(window, document);\\n    } else {\\n        window.wysiwyg = factory(window, document);\\n    }\\n})(function(window, document){\\n    'use strict';\\n\\n    // http://stackoverflow.com/questions/97962/debounce-clicks-when-submitting-a-web-form\\n    var debounce = function( callback, wait, cancelprevious )\\n    {\\n        var timeout;\\n        return function()\\n        {\\n            if( timeout )\\n            {\\n                if( ! cancelprevious )\\n                    return ;\\n                clearTimeout( timeout );\\n            }\\n            var context = this,\\n                args = arguments;\\n            timeout = setTimeout(\\n                function()\\n                {\\n                    timeout = null;\\n                    callback.apply( context, args );\\n                }, wait );\\n        };\\n    };\\n\\n    // http://stackoverflow.com/questions/12949590/how-to-detach-event-in-ie-6-7-8-9-using-javascript\\n    var addEvent = function( element, type, handler, useCapture )\\n    {\\n        if( element.addEventListener ) {\\n            element.addEventListener( type, handler, useCapture ? true : false );\\n        }\\n        else if( element.attachEvent ) {\\n            element.attachEvent( 'on' + type, handler );\\n        }\\n        else if( element != window )\\n            element['on' + type] = handler;\\n    };\\n    var removeEvent = function( element, type, handler, useCapture )\\n    {\\n        if( element.removeEventListener ) {\\n            element.removeEventListener( type, handler, useCapture ? true : false );\\n        }\\n        else if( element.detachEvent) {\\n            element.detachEvent( 'on' + type, handler );\\n        }\\n        else if( element != window )\\n            element['on' + type] = null;\\n    };\\n    // http://www.cristinawithout.com/content/function-trigger-events-javascript\\n    var fireEvent = function( element, type, bubbles, cancelable )\\n    {\\n        if( document.createEvent ) {\\n            var event = document.createEvent('Event');\\n            event.initEvent( type, bubbles !== undefined ? bubbles : true, cancelable !== undefined ? cancelable : false );\\n            element.dispatchEvent(event);\\n        }\\n        else if( document.createEventObject ) { //IE\\n            var event = document.createEventObject();\\n            element.fireEvent( 'on' + type, event );\\n        }\\n        else if( typeof(element['on' + type]) == 'function' )\\n            element['on' + type]();\\n    };\\n    // prevent default\\n    var cancelEvent = function( e )\\n    {\\n        if( e.preventDefault )\\n            e.preventDefault();\\n        else\\n            e.returnValue = false;\\n        if( e.stopPropagation )\\n            e.stopPropagation();\\n        else\\n            e.cancelBubble = true;\\n        return false;\\n    };\\n\\n    // http://stackoverflow.com/questions/13377887/javascript-node-undefined-in-ie8-and-under\\n    var Node_ELEMENT_NODE = typeof(Node) != 'undefined' ? Node.ELEMENT_NODE : 1;\\n    var Node_TEXT_NODE = typeof(Node) != 'undefined' ? Node.TEXT_NODE : 3;\\n\\n    // http://stackoverflow.com/questions/2234979/how-to-check-in-javascript-if-one-element-is-a-child-of-another\\n    var isOrContainsNode = function( ancestor, descendant )\\n    {\\n        var node = descendant;\\n        while( node )\\n        {\\n            if( node === ancestor )\\n                return true;\\n            node = node.parentNode;\\n        }\\n        return false;\\n    };\\n\\n    // http://stackoverflow.com/questions/667951/how-to-get-nodes-lying-inside-a-range-with-javascript\\n    var nextNode = function( node, container )\\n    {\\n        if( node.firstChild )\\n            return node.firstChild;\\n        while( node )\\n        {\\n            if( node == container ) // do not walk out of the container\\n                return null;\\n            if( node.nextSibling )\\n                return node.nextSibling;\\n            node = node.parentNode;\\n        }\\n        return null;\\n    };\\n\\n    // save/restore selection\\n    // http://stackoverflow.com/questions/13949059/persisting-the-changes-of-range-objects-after-selection-in-html/13950376#13950376\\n    var saveSelection = function( containerNode )\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( sel.rangeCount > 0 )\\n                return sel.getRangeAt(0);\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            return sel.createRange();\\n        }\\n        return null;\\n    };\\n    var restoreSelection = function( containerNode, savedSel )\\n    {\\n        if( ! savedSel )\\n            return;\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            sel.removeAllRanges();\\n            sel.addRange(savedSel);\\n        }\\n        else if( document.selection )\\n        {\\n            savedSel.select();\\n        }\\n    };\\n\\n    // http://stackoverflow.com/questions/12603397/calculate-width-height-of-the-selected-text-javascript\\n    // http://stackoverflow.com/questions/6846230/coordinates-of-selected-text-in-browser-page\\n    var getSelectionRect = function()\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( ! sel.rangeCount )\\n                return false;\\n            var range = sel.getRangeAt(0).cloneRange();\\n            if( range.getBoundingClientRect ) // Missing for Firefox 3.5+3.6\\n            {\\n                var rect = range.getBoundingClientRect();\\n                // Safari 5.1 returns null, IE9 returns 0/0/0/0 if image selected\\n                if( rect && rect.left && rect.top && rect.right && rect.bottom )\\n                    return {\\n                        // Modern browsers return floating-point numbers\\n                        left: parseInt(rect.left),\\n                        top: parseInt(rect.top),\\n                        width: parseInt(rect.right - rect.left),\\n                        height: parseInt(rect.bottom - rect.top)\\n                    };\\n                // on Webkit 'range.getBoundingClientRect()' sometimes return 0/0/0/0 - but 'range.getClientRects()' works\\n                var rects = range.getClientRects ? range.getClientRects() : [];\\n                for( var i=0; i < rects.length; ++i )\\n                {\\n                    var rect = rects[i];\\n                    if( rect.left && rect.top && rect.right && rect.bottom )\\n                        return {\\n                            // Modern browsers return floating-point numbers\\n                            left: parseInt(rect.left),\\n                            top: parseInt(rect.top),\\n                            width: parseInt(rect.right - rect.left),\\n                            height: parseInt(rect.bottom - rect.top)\\n                        };\\n                }\\n            }\\n            /*\\n            // Fall back to inserting a temporary element (only for Firefox 3.5 and 3.6)\\n            var span = document.createElement('span');\\n            if( span.getBoundingClientRect )\\n            {\\n                // Ensure span has dimensions and position by\\n                // adding a zero-width space character\\n                span.appendChild( document.createTextNode('\\\\u200b') );\\n                range.insertNode( span );\\n                var rect = span.getBoundingClientRect();\\n                var spanParent = span.parentNode;\\n                spanParent.removeChild( span );\\n                // Glue any broken text nodes back together\\n                spanParent.normalize();\\n                return {\\n                    left: parseInt(rect.left),\\n                    top: parseInt(rect.top),\\n                    width: parseInt(rect.right - rect.left),\\n                    height: parseInt(rect.bottom - rect.top)\\n                };\\n            }\\n            */\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type != 'Control' )\\n            {\\n                var range = sel.createRange();\\n                // IE8 return 0/0/0/0 if caret right before newline\\n                if( range.boundingLeft || range.boundingTop || range.boundingWidth || range.boundingHeight )\\n                    return {\\n                        left: range.boundingLeft,\\n                        top: range.boundingTop,\\n                        width: range.boundingWidth,\\n                        height: range.boundingHeight\\n                    };\\n            }\\n        }\\n        return false;\\n    };\\n\\n    var getSelectionCollapsed = function( containerNode )\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( sel.isCollapsed )\\n                return true;\\n            return false;\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type == 'Text' )\\n            {\\n                var range = document.selection.createRange();\\n                var textrange = document.body.createTextRange();\\n                textrange.moveToElementText(containerNode);\\n                textrange.setEndPoint('EndToStart', range);\\n                return range.htmlText.length == 0;\\n            }\\n            if( sel.type == 'Control' ) // e.g. an image selected\\n                return false;\\n            // sel.type == 'None' -> collapsed selection\\n        }\\n        return true;\\n    };\\n\\n    // http://stackoverflow.com/questions/7781963/js-get-array-of-all-selected-nodes-in-contenteditable-div\\n    var getSelectedNodes = function( containerNode )\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( ! sel.rangeCount )\\n                return [];\\n            var nodes = [];\\n            for( var i=0; i < sel.rangeCount; ++i )\\n            {\\n                var range = sel.getRangeAt(i),\\n                    node = range.startContainer,\\n                    endNode = range.endContainer;\\n                while( node )\\n                {\\n                    // add this node?\\n                    if( node != containerNode )\\n                    {\\n                        var node_inside_selection = false;\\n                        if( sel.containsNode )\\n                            node_inside_selection = sel.containsNode( node, true );\\n                        else // IE11\\n                        {\\n                            // http://stackoverflow.com/questions/5884210/how-to-find-if-a-htmlelement-is-enclosed-in-selected-text\\n                            var noderange = document.createRange();\\n                            noderange.selectNodeContents( node );\\n                            for( var i=0; i < sel.rangeCount; ++i )\\n                            {\\n                                var range = sel.getRangeAt(i);\\n                                // start after or end before -> skip node\\n                                if( range.compareBoundaryPoints(range.END_TO_START,noderange) >= 0 &&\\n                                    range.compareBoundaryPoints(range.START_TO_END,noderange) <= 0 )\\n                                {\\n                                    node_inside_selection = true;\\n                                    break;\\n                                }\\n                            }\\n                        }\\n                        if( node_inside_selection )\\n                            nodes.push( node );\\n                    }\\n                    node = nextNode( node, node == endNode ? endNode : containerNode );\\n                }\\n            }\\n            // Fallback\\n            if( nodes.length == 0 && isOrContainsNode(containerNode,sel.focusNode) && sel.focusNode != containerNode )\\n                nodes.push( sel.focusNode );\\n            return nodes;\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type == 'Text' )\\n            {\\n                var nodes = [];\\n                var ranges = sel.createRangeCollection();\\n                for( var i=0; i < ranges.length; ++i )\\n                {\\n                    var range = ranges[i],\\n                        parentNode = range.parentElement(),\\n                        node = parentNode;\\n                    while( node )\\n                    {\\n                        // No clue how to detect whether a TextNode is within the selection...\\n                        // ElementNode is easy: http://stackoverflow.com/questions/5884210/how-to-find-if-a-htmlelement-is-enclosed-in-selected-text\\n                        var noderange = range.duplicate();\\n                        noderange.moveToElementText( node.nodeType != Node_ELEMENT_NODE ? node.parentNode : node );\\n                        // start after or end before -> skip node\\n                        if( noderange.compareEndPoints('EndToStart',range) >= 0 &&\\n                            noderange.compareEndPoints('StartToEnd',range) <= 0 )\\n                        {\\n                            // no \\\"Array.indexOf()\\\" in IE8\\n                            var in_array = false;\\n                            for( var j=0; j < nodes.length; ++j )\\n                            {\\n                                if( nodes[j] !== node )\\n                                    continue;\\n                                in_array = true;\\n                                break;\\n                            }\\n                            if( ! in_array )\\n                                nodes.push( node );\\n                        }\\n                        node = nextNode( node, parentNode );\\n                    }\\n                }\\n                // Fallback\\n                if( nodes.length == 0 && isOrContainsNode(containerNode,document.activeElement) && document.activeElement != containerNode )\\n                    nodes.push( document.activeElement );\\n                return nodes;\\n            }\\n            if( sel.type == 'Control' ) // e.g. an image selected\\n            {\\n                var nodes = [];\\n                // http://msdn.microsoft.com/en-us/library/ie/hh826021%28v=vs.85%29.aspx\\n                var range = sel.createRange();\\n                for( var i=0; i < range.length; ++i )\\n                    nodes.push( range(i) );\\n                return nodes;\\n            }\\n        }\\n        return [];\\n    };\\n\\n    // http://stackoverflow.com/questions/8513368/collapse-selection-to-start-of-selection-not-div\\n    var collapseSelectionEnd = function()\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( ! sel.isCollapsed )\\n            {\\n                // Form-submits via Enter throw 'NS_ERROR_FAILURE' on Firefox 34\\n                try {\\n                    sel.collapseToEnd();\\n                }\\n                catch( e ) {\\n                }\\n            }\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type != 'Control' )\\n            {\\n                var range = sel.createRange();\\n                range.collapse(false);\\n                range.select();\\n            }\\n        }\\n    };\\n\\n    // http://stackoverflow.com/questions/15157435/get-last-character-before-caret-position-in-javascript\\n    // http://stackoverflow.com/questions/11247737/how-can-i-get-the-word-that-the-caret-is-upon-inside-a-contenteditable-div\\n    var expandSelectionCaret = function( containerNode, preceding, following )\\n    {\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( sel.modify )\\n            {\\n                for( var i=0; i < preceding; ++i )\\n                    sel.modify('extend', 'backward', 'character');\\n                for( var i=0; i < following; ++i )\\n                    sel.modify('extend', 'forward', 'character');\\n            }\\n            else\\n            {\\n                // not so easy if the steps would cover multiple nodes ...\\n                var range = sel.getRangeAt(0);\\n                range.setStart( range.startContainer, range.startOffset - preceding );\\n                range.setEnd( range.endContainer, range.endOffset + following );\\n                sel.removeAllRanges();\\n                sel.addRange(range);\\n            }\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type != 'Control' )\\n            {\\n                var range = sel.createRange();\\n                range.collapse(true);\\n                range.moveStart('character', -preceding);\\n                range.moveEnd('character', following);\\n                range.select();\\n            }\\n        }\\n    };\\n\\n    // http://stackoverflow.com/questions/4652734/return-html-from-a-user-selected-text/4652824#4652824\\n    var getSelectionHtml = function( containerNode )\\n    {\\n        if( getSelectionCollapsed( containerNode ) )\\n            return null;\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( sel.rangeCount )\\n            {\\n                var container = document.createElement('div'),\\n                    len = sel.rangeCount;\\n                for( var i=0; i < len; ++i )\\n                {\\n                    var contents = sel.getRangeAt(i).cloneContents();\\n                    container.appendChild(contents);\\n                }\\n                return container.innerHTML;\\n            }\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type == 'Text' )\\n            {\\n                var range = sel.createRange();\\n                return range.htmlText;\\n            }\\n        }\\n        return null;\\n    };\\n\\n    var selectionInside = function( containerNode, force )\\n    {\\n        // selection inside editor?\\n        if( window.getSelection )\\n        {\\n            var sel = window.getSelection();\\n            if( isOrContainsNode(containerNode,sel.anchorNode) && isOrContainsNode(containerNode,sel.focusNode) )\\n                return true;\\n            // selection at least partly outside editor\\n            if( ! force )\\n                return false;\\n            // force selection to editor\\n            var range = document.createRange();\\n            range.selectNodeContents( containerNode );\\n            range.collapse( false );\\n            sel.removeAllRanges();\\n            sel.addRange(range);\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type == 'Control' ) // e.g. an image selected\\n            {\\n                // http://msdn.microsoft.com/en-us/library/ie/hh826021%28v=vs.85%29.aspx\\n                var range = sel.createRange();\\n                if( range.length != 0 && isOrContainsNode(containerNode,range(0)) ) // test only the first element\\n                    return true;\\n            }\\n            else //if( sel.type == 'Text' || sel.type == 'None' )\\n            {\\n                // Range of container\\n                // http://stackoverflow.com/questions/12243898/how-to-select-all-text-in-contenteditable-div\\n                var rangeContainer = document.body.createTextRange();\\n                rangeContainer.moveToElementText(containerNode);\\n                // Compare with selection range\\n                var range = sel.createRange();\\n                if( rangeContainer.inRange(range) )\\n                    return true;\\n            }\\n            // selection at least partly outside editor\\n            if( ! force )\\n                return false;\\n            // force selection to editor\\n            // http://stackoverflow.com/questions/12243898/how-to-select-all-text-in-contenteditable-div\\n            var range = document.body.createTextRange();\\n            range.moveToElementText(containerNode);\\n            range.setEndPoint('StartToEnd',range); // collapse\\n            range.select();\\n        }\\n        return true;\\n    };\\n\\n    /*\\n    var clipSelectionTo = function( containerNode )\\n    {\\n        if( window.getSelection && containerNode.compareDocumentPosition )\\n        {\\n            var sel = window.getSelection();\\n            var left_node = sel.anchorNode,\\n                left_offset = sel.anchorOffset,\\n                right_node = sel.focusNode,\\n                right_offset = sel.focusOffset;\\n            // http://stackoverflow.com/questions/10710733/dom-determine-if-the-anchornode-or-focusnode-is-on-the-left-side\\n            if( (left_node == right_node && left_offset > right_offset) ||\\n                (left_node.compareDocumentPosition(right_node) & Node.DOCUMENT_POSITION_PRECEDING) )\\n            {\\n                // Right-to-left selection\\n                left_node = sel.focusNode;\\n                left_offset = sel.focusOffset;\\n                right_node = sel.anchorNode,\\n                right_offset = sel.anchorOffset;\\n            }\\n            // Speed up: selection inside editor\\n            var left_inside = isOrContainsNode(containerNode,left_node),\\n                right_inside = isOrContainsNode(containerNode,right_node);\\n            if( left_inside && right_inside )\\n                return true;\\n            // Selection before/after container?\\n            if( ! left_inside && containerNode.compareDocumentPosition(left_node) & Node.DOCUMENT_POSITION_FOLLOWING )\\n                return false; // selection after\\n            if( ! right_inside && containerNode.compareDocumentPosition(right_node) & Node.DOCUMENT_POSITION_PRECEDING )\\n                return false; // selection before\\n            // Selection partly before/after container\\n            // http://stackoverflow.com/questions/12243898/how-to-select-all-text-in-contenteditable-div\\n            var range = document.createRange();\\n            range.selectNodeContents( containerNode );\\n            if( left_inside )\\n                range.setStart( left_node, left_offset );\\n            if( right_inside )\\n                range.setEnd( right_node, right_offset );\\n            sel.removeAllRanges();\\n            sel.addRange(range);\\n            return true;\\n        }\\n        else if( document.selection )\\n        {\\n            var sel = document.selection;\\n            if( sel.type == 'Text' )\\n            {\\n                // Range of container\\n                // http://stackoverflow.com/questions/12243898/how-to-select-all-text-in-contenteditable-div\\n                var rangeContainer = document.body.createTextRange();\\n                rangeContainer.moveToElementText(containerNode);\\n                // Compare with selection range\\n                var range = sel.createRange();\\n                if( rangeContainer.inRange(range) )\\n                    return true;\\n                // Selection before/after container?\\n                if( rangeContainer.compareEndPoints('StartToEnd',range) > 0 )\\n                    return false;\\n                if( rangeContainer.compareEndPoints('EndToStart',range) < 0 )\\n                    return false;\\n                // Selection partly before/after container\\n                if( rangeContainer.compareEndPoints('StartToStart',range) > 0 )\\n                    range.setEndPoint('StartToStart',rangeContainer);\\n                if( rangeContainer.compareEndPoints('EndToEnd',range) < 0 )\\n                    range.setEndPoint('EndToEnd',rangeContainer);\\n                // select range\\n                range.select();\\n                return true;\\n            }\\n        }\\n        return true;\\n    };\\n    */\\n\\n    // http://stackoverflow.com/questions/6690752/insert-html-at-caret-in-a-contenteditable-div/6691294#6691294\\n    // http://stackoverflow.com/questions/4823691/insert-an-html-element-in-a-contenteditable-element\\n    // http://stackoverflow.com/questions/6139107/programatically-select-text-in-a-contenteditable-html-element\\n    var pasteHtmlAtCaret = function( containerNode, html )\\n    {\\n        if( window.getSelection )\\n        {\\n            // IE9 and non-IE\\n            var sel = window.getSelection();\\n            if( sel.getRangeAt && sel.rangeCount )\\n            {\\n                var range = sel.getRangeAt(0);\\n                // Range.createContextualFragment() would be useful here but is\\n                // only relatively recently standardized and is not supported in\\n                // some browsers (IE9, for one)\\n                var el = document.createElement('div');\\n                el.innerHTML = html;\\n                var frag = document.createDocumentFragment(), node, lastNode;\\n                while ( (node = el.firstChild) ) {\\n                    lastNode = frag.appendChild(node);\\n                }\\n                if( isOrContainsNode(containerNode, range.commonAncestorContainer) )\\n                {\\n                    range.deleteContents();\\n                    range.insertNode(frag);\\n                }\\n                else {\\n                    containerNode.appendChild(frag);\\n                }\\n                // Preserve the selection\\n                if( lastNode )\\n                {\\n                    range = range.cloneRange();\\n                    range.setStartAfter(lastNode);\\n                    range.collapse(true);\\n                    sel.removeAllRanges();\\n                    sel.addRange(range);\\n                }\\n            }\\n        }\\n        else if( document.selection )\\n        {\\n            // IE <= 8\\n            var sel = document.selection;\\n            if( sel.type != 'Control' )\\n            {\\n                var originalRange = sel.createRange();\\n                originalRange.collapse(true);\\n                var range = sel.createRange();\\n                if( isOrContainsNode(containerNode, range.parentElement()) )\\n                    range.pasteHTML( html );\\n                else // simply append to Editor\\n                {\\n                    var textRange = document.body.createTextRange();\\n                    textRange.moveToElementText(containerNode);\\n                    textRange.collapse(false);\\n                    textRange.select();\\n                    textRange.pasteHTML( html );\\n                }\\n                // Preserve the selection\\n                range = sel.createRange();\\n                range.setEndPoint('StartToEnd', originalRange);\\n                range.select();\\n            }\\n        }\\n    };\\n\\n    // Interface: Create wysiwyg\\n    var wysiwyg = function( option )\\n    {\\n        // Options\\n        option = option || {};\\n        var option_element = option.element || null;\\n        if( typeof(option_element) == 'string' )\\n            option_element = document.getElementById( option_element );\\n        var option_contenteditable = option.contenteditable || null;\\n        if( typeof(option_contenteditable) == 'string' )\\n            option_contenteditable = document.getElementById( option_contenteditable );\\n        var option_onkeydown = option.onKeyDown || null;\\n        var option_onkeypress = option.onKeyPress || null;\\n        var option_onkeyup = option.onKeyUp || null;\\n        var option_onselection = option.onSelection || null;\\n        var option_onplaceholder = option.onPlaceholder || null;\\n        var option_onopenpopup = option.onOpenpopup || null;\\n        var option_onclosepopup = option.onClosepopup || null;\\n        var option_hijackcontextmenu = option.hijackContextmenu || false;\\n        var option_readonly = option.readOnly || false;\\n\\n        // Keep textarea if browser can't handle content-editable\\n        var is_textarea = option_element.nodeName == 'TEXTAREA' || option_element.nodeName == 'INPUT';\\n        if( is_textarea )\\n        {\\n            // http://stackoverflow.com/questions/1882205/how-do-i-detect-support-for-contenteditable-via-javascript\\n            var canContentEditable = 'contentEditable' in document.body;\\n            if( canContentEditable )\\n            {\\n                // Sniffer useragent...\\n                var webkit = navigator.userAgent.match(/(?:iPad|iPhone|Android).* AppleWebKit\\\\/([^ ]+)/);\\n                if( webkit && 420 <= parseInt(webkit[1]) && parseInt(webkit[1]) < 534 ) // iPhone 1 was Webkit/420\\n                    canContentEditable = false;\\n            }\\n            if( ! canContentEditable )\\n            {\\n                // Keep textarea\\n                var node_textarea = option_element;\\n                // Add a 'newline' after each '<br>'\\n                var newlineAfterBR = function( html ) {\\n                    return html.replace(/<br[ \\\\/]*>\\\\n?/gi,'<br>\\\\n');\\n                };\\n                node_textarea.value = newlineAfterBR( node_textarea.value );\\n                // Command structure\\n                var dummy_this = function() {\\n                    return this;\\n                };\\n                var dummy_null = function() {\\n                    return null;\\n                };\\n                return {\\n                    legacy: true,\\n                    // properties\\n                    getElement: function()\\n                    {\\n                        return node_textarea;\\n                    },\\n                    getHTML: function()\\n                    {\\n                        return node_textarea.value;\\n                    },\\n                    setHTML: function( html )\\n                    {\\n                        node_textarea.value = newlineAfterBR( html );\\n                        return this;\\n                    },\\n                    getSelectedHTML: dummy_null,\\n                    sync: dummy_this,\\n                    readOnly: function( readonly )\\n                    {\\n                        // query read-only\\n                        if( readonly === undefined )\\n                            return node_textarea.hasAttribute ? node_textarea.hasAttribute('readonly') : \\n                                                                !!node_textarea.getAttribute('readonly'); // IE7\\n                        // set read-only\\n                        if( readonly )\\n                            node_textarea.setAttribute( 'readonly', 'readonly' );\\n                        else\\n                            node_textarea.removeAttribute( 'readonly' );\\n                        return this;\\n                    },\\n                    // selection and popup\\n                    collapseSelection: dummy_this,\\n                    expandSelection: dummy_this,\\n                    openPopup: dummy_null,\\n                    closePopup: dummy_this,\\n                    // exec commands\\n                    removeFormat: dummy_this,\\n                    bold: dummy_this,\\n                    italic: dummy_this,\\n                    underline: dummy_this,\\n                    strikethrough: dummy_this,\\n                    forecolor: dummy_this,\\n                    highlight: dummy_this,\\n                    fontName: dummy_this,\\n                    fontSize: dummy_this,\\n                    subscript: dummy_this,\\n                    superscript: dummy_this,\\n                    align: dummy_this,\\n                    format: dummy_this,\\n                    indent: dummy_this,\\n                    insertLink: dummy_this,\\n                    insertImage: dummy_this,\\n                    insertHTML: dummy_this,\\n                    insertList: dummy_this\\n                };\\n            }\\n        }\\n\\n        // create content-editable\\n        var node_textarea = null,\\n            node_wysiwyg = null;\\n        if( is_textarea )\\n        {\\n            // Textarea\\n            node_textarea = option_element;\\n            node_textarea.style.display = 'none';\\n\\n            // Contenteditable\\n            if( option_contenteditable )\\n                node_wysiwyg = option_contenteditable;\\n            else\\n            {\\n                node_wysiwyg = document.createElement( 'DIV' );\\n                node_wysiwyg.innerHTML = node_textarea.value || '';\\n                var parent = node_textarea.parentNode,\\n                    next = node_textarea.nextSibling;\\n                if( next )\\n                    parent.insertBefore( node_wysiwyg, next );\\n                else\\n                    parent.appendChild( node_wysiwyg );\\n            }\\n        }\\n        else\\n            node_wysiwyg = option_element;\\n        // If not read-only\\n        if( ! option_readonly )\\n            node_wysiwyg.setAttribute( 'contentEditable', 'true' ); // IE7 is case sensitive\\n\\n        // IE8 uses 'document' instead of 'window'\\n        // http://tanalin.com/en/articles/ie-version-js/ - http://stackoverflow.com/questions/10964966/detect-ie-version-prior-to-v9-in-javascript\\n        var window_ie8 = (document.all && (! document.documentMode || document.documentMode <= 8)) ? document : window;\\n\\n        // Sync Editor with Textarea\\n        var syncTextarea = null,\\n            callUpdates;\\n        if( is_textarea )\\n        {\\n            var previous_html = node_wysiwyg.innerHTML;\\n            syncTextarea = function()\\n            {\\n                var new_html = node_wysiwyg.innerHTML;\\n                if( new_html == previous_html )\\n                    return ;\\n                // HTML changed\\n                node_textarea.value = new_html;\\n                previous_html = new_html;\\n                // Event Handler\\n                fireEvent( node_textarea, 'change', false );\\n            };\\n\\n            // handle reset event\\n            var form = node_textarea.form;\\n            if( form )\\n            {\\n                addEvent( form, 'reset', function() {\\n                    node_wysiwyg.innerHTML = '';\\n                    syncTextarea();\\n                    callUpdates( true );\\n                });\\n            }\\n        }\\n\\n        // Show placeholder\\n        var showPlaceholder;\\n        if( option_onplaceholder )\\n        {\\n            var placeholder_visible = false;\\n            showPlaceholder = function()\\n            {\\n                // Test if wysiwyg has content\\n                var wysiwyg_empty = true;\\n                var node = node_wysiwyg;\\n                while( node )\\n                {\\n                    node = nextNode( node, node_wysiwyg );\\n                    // Test if node contains something visible\\n                    if( ! node )\\n                        ;\\n                    else if( node.nodeType == Node_ELEMENT_NODE )\\n                    {\\n                        if( node.nodeName == 'IMG' )\\n                        {\\n                            wysiwyg_empty = false;\\n                            break;\\n                        }\\n                    }\\n                    else if( node.nodeType == Node_TEXT_NODE )\\n                    {\\n                        var text = node.nodeValue;\\n                        if( text && text.search(/[^\\\\s]/) != -1 )\\n                        {\\n                            wysiwyg_empty = false;\\n                            break;\\n                        }\\n                    }\\n                }\\n                if( placeholder_visible != wysiwyg_empty )\\n                {\\n                    option_onplaceholder( wysiwyg_empty );\\n                    placeholder_visible = wysiwyg_empty;\\n                }\\n            };\\n            showPlaceholder();\\n        }\\n\\n        // Handle selection\\n        var popup_saved_selection = null, // preserve selection during popup\\n            handleSelection = null,\\n            debounced_handleSelection = null;\\n        if( option_onselection )\\n        {\\n            handleSelection = function( clientX, clientY, rightclick )\\n            {\\n                // Detect collapsed selection\\n                var collapsed = getSelectionCollapsed( node_wysiwyg );\\n                // List of all selected nodes\\n                var nodes = getSelectedNodes( node_wysiwyg );\\n                // Rectangle of the selection\\n                var rect = (clientX === null || clientY === null) ? null :\\n                            {\\n                                left: clientX,\\n                                top: clientY,\\n                                width: 0,\\n                                height: 0\\n                            };\\n                var selectionRect = getSelectionRect();\\n                if( selectionRect )\\n                    rect = selectionRect;\\n                if( rect )\\n                {\\n                    // So far 'rect' is relative to viewport\\n                    if( node_wysiwyg.getBoundingClientRect )\\n                    {\\n                        // Make it relative to the editor via 'getBoundingClientRect()'\\n                        var boundingrect = node_wysiwyg.getBoundingClientRect();\\n                        rect.left -= parseInt(boundingrect.left);\\n                        rect.top -= parseInt(boundingrect.top);\\n                    }\\n                    else\\n                    {\\n                        var node = node_wysiwyg,\\n                            offsetLeft = 0,\\n                            offsetTop = 0,\\n                            fixed = false;\\n                        do {\\n                            offsetLeft += node.offsetLeft ? parseInt(node.offsetLeft) : 0;\\n                            offsetTop += node.offsetTop ? parseInt(node.offsetTop) : 0;\\n                            if( node.style.position == 'fixed' )\\n                                fixed = true;\\n                        }\\n                        while( node = node.offsetParent );\\n                        rect.left -= offsetLeft - (fixed ? 0 : window.pageXOffset);\\n                        rect.top -= offsetTop - (fixed ? 0 : window.pageYOffset);\\n                    }\\n                    // Trim rectangle to the editor\\n                    if( rect.left < 0 )\\n                        rect.left = 0;\\n                    if( rect.top < 0 )\\n                        rect.top = 0;\\n                    if( rect.width > node_wysiwyg.offsetWidth )\\n                        rect.width = node_wysiwyg.offsetWidth;\\n                    if( rect.height > node_wysiwyg.offsetHeight )\\n                        rect.height = node_wysiwyg.offsetHeight;\\n                }\\n                else if( nodes.length )\\n                {\\n                    // What else could we do? Offset of first element...\\n                    for( var i=0; i < nodes.length; ++i )\\n                    {\\n                        var node = nodes[i];\\n                        if( node.nodeType != Node_ELEMENT_NODE )\\n                            continue;\\n                        rect = {\\n                                left: node.offsetLeft,\\n                                top: node.offsetTop,\\n                                width: node.offsetWidth,\\n                                height: node.offsetHeight\\n                            };\\n                        break;\\n                    }\\n                }\\n                // Callback\\n                option_onselection( collapsed, rect, nodes, rightclick );\\n            };\\n            debounced_handleSelection = debounce( handleSelection, 1 );\\n        }\\n\\n        // Open popup\\n        var node_popup = null;\\n        var popupClickClose = function( e )\\n        {\\n            // http://www.quirksmode.org/js/events_properties.html\\n            if( !e )\\n                var e = window.event;\\n            var target = e.target || e.srcElement;\\n            if( target.nodeType == Node_TEXT_NODE ) // defeat Safari bug\\n                target = target.parentNode;\\n            // Click within popup?\\n            if( isOrContainsNode(node_popup,target) )\\n                return ;\\n            // close popup\\n            popupClose();\\n        };\\n        var popupOpen = function()\\n        {\\n            // Already open?\\n            if( node_popup )\\n                return node_popup;\\n\\n            // Global click closes popup\\n            addEvent( window_ie8, 'mousedown', popupClickClose, true );\\n\\n            // Create popup element\\n            node_popup = document.createElement( 'DIV' );\\n            var parent = node_wysiwyg.parentNode,\\n                next = node_wysiwyg.nextSibling;\\n            if( next )\\n                parent.insertBefore( node_popup, next );\\n            else\\n                parent.appendChild( node_popup );\\n            if( option_onopenpopup )\\n                option_onopenpopup();\\n            return node_popup;\\n        };\\n        var popupClose = function()\\n        {\\n            if( ! node_popup )\\n                return ;\\n            node_popup.parentNode.removeChild( node_popup );\\n            node_popup = null;\\n            removeEvent( window_ie8, 'mousedown', popupClickClose, true );\\n            if( option_onclosepopup )\\n                option_onclosepopup();\\n        };\\n\\n        // Focus/Blur events\\n        addEvent( node_wysiwyg, 'focus', function()\\n        {\\n            // forward focus/blur to the textarea\\n            if( node_textarea )\\n                fireEvent( node_textarea, 'focus', false );\\n        });\\n        addEvent( node_wysiwyg, 'blur', function()\\n        {\\n            // sync textarea immediately\\n            if( syncTextarea )\\n                syncTextarea();\\n            // forward focus/blur to the textarea\\n            if( node_textarea )\\n                fireEvent( node_textarea, 'blur', false );\\n        });\\n\\n        // Change events\\n        var debounced_changeHandler = null;\\n        if( showPlaceholder || syncTextarea )\\n        {\\n            // debounce 'syncTextarea' a second time, because 'innerHTML' is quite burdensome\\n            var debounced_syncTextarea = syncTextarea ? debounce( syncTextarea, 250, true ) : null; // high timeout is save, because of \\\"onblur\\\" fires immediately\\n            var changeHandler = function( e )\\n            {\\n                if( showPlaceholder )\\n                    showPlaceholder();\\n                if( debounced_syncTextarea )\\n                    debounced_syncTextarea();\\n            };\\n            debounced_changeHandler = debounce( changeHandler, 1 );\\n\\n            // Catch change events\\n            // http://stackoverflow.com/questions/1391278/contenteditable-change-events/1411296#1411296\\n            // http://stackoverflow.com/questions/8694054/onchange-event-with-contenteditable/8694125#8694125\\n            // https://github.com/mindmup/bootstrap-wysiwyg/pull/50/files\\n            // http://codebits.glennjones.net/editing/events-contenteditable.htm\\n            addEvent( node_wysiwyg, 'input', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'DOMNodeInserted', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'DOMNodeRemoved', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'DOMSubtreeModified', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'DOMCharacterDataModified', debounced_changeHandler ); // polyfill input in IE 9-10\\n            addEvent( node_wysiwyg, 'propertychange', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'textInput', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'paste', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'cut', debounced_changeHandler );\\n            addEvent( node_wysiwyg, 'drop', debounced_changeHandler );\\n        }\\n\\n        // Key events\\n        // http://sandbox.thewikies.com/html5-experiments/key-events.html\\n        var keyHandler = function( e, phase )\\n        {\\n            // http://www.quirksmode.org/js/events_properties.html\\n            if( !e )\\n                var e = window.event;\\n            // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\\n            // http://stackoverflow.com/questions/1444477/keycode-and-charcode\\n            // http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\\n            // http://unixpapa.com/js/key.html\\n            var key = e.which || e.keyCode,\\n                character = String.fromCharCode(key || e.charCode),\\n                shiftKey = e.shiftKey || false,\\n                altKey = e.altKey || false,\\n                ctrlKey = e.ctrlKey || false,\\n                metaKey = e.metaKey || false;\\n             if( phase == 1 )\\n            {\\n                // Callback\\n                if( option_onkeydown && option_onkeydown(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                    return cancelEvent( e ); // dismiss key\\n            }\\n            else if( phase == 2 )\\n            {\\n                // Callback\\n                if( option_onkeypress && option_onkeypress(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                    return cancelEvent( e ); // dismiss key\\n            }\\n            else if( phase == 3 )\\n            {\\n                // Callback\\n                if( option_onkeyup && option_onkeyup(key, character, shiftKey, altKey, ctrlKey, metaKey) === false )\\n                    return cancelEvent( e ); // dismiss key\\n            }\\n\\n            // Keys can change the selection\\n            if( phase == 2 || phase == 3 )\\n            {\\n                popup_saved_selection = null;\\n                if( debounced_handleSelection )\\n                    debounced_handleSelection( null, null, false );\\n            }\\n            // Most keys can cause text-changes\\n            if( phase == 2 && debounced_changeHandler )\\n            {\\n                switch( key )\\n                {\\n                    case 33: // pageUp\\n                    case 34: // pageDown\\n                    case 35: // end\\n                    case 36: // home\\n                    case 37: // left\\n                    case 38: // up\\n                    case 39: // right\\n                    case 40: // down\\n                        // cursors do not\\n                        break;\\n                    default:\\n                        // call change handler\\n                        debounced_changeHandler();\\n                        break;\\n                }\\n            }\\n        };\\n        addEvent( node_wysiwyg, 'keydown', function( e )\\n        {\\n            return keyHandler( e, 1 );\\n        });\\n        addEvent( node_wysiwyg, 'keypress', function( e )\\n        {\\n            return keyHandler( e, 2 );\\n        });\\n        addEvent( node_wysiwyg, 'keyup', function( e )\\n        {\\n            return keyHandler( e, 3 );\\n        });\\n\\n        // Mouse events\\n        var mouseHandler = function( e, rightclick )\\n        {\\n            // http://www.quirksmode.org/js/events_properties.html\\n            if( !e )\\n                var e = window.event;\\n            // mouse position\\n            var clientX = null,\\n                clientY = null;\\n            if( e.clientX && e.clientY )\\n            {\\n                clientX = e.clientX;\\n                clientY = e.clientY;\\n            }\\n            else if( e.pageX && e.pageY )\\n            {\\n                clientX = e.pageX - window.pageXOffset;\\n                clientY = e.pageY - window.pageYOffset;\\n            }\\n            // mouse button\\n            if( e.which && e.which == 3 )\\n                rightclick = true;\\n            else if( e.button && e.button == 2 )\\n                rightclick = true;\\n\\n            // remove event handler\\n            removeEvent( window_ie8, 'mouseup', mouseHandler );\\n            // Callback selection\\n            popup_saved_selection = null;\\n            if( ! option_hijackcontextmenu && rightclick )\\n                return ;\\n            if( debounced_handleSelection )\\n                debounced_handleSelection( clientX, clientY, rightclick );\\n        };\\n        addEvent( node_wysiwyg, 'mousedown', function( e )\\n        {\\n            // catch event if 'mouseup' outside 'node_wysiwyg'\\n            removeEvent( window_ie8, 'mouseup', mouseHandler );\\n            addEvent( window_ie8, 'mouseup', mouseHandler );\\n        });\\n        addEvent( node_wysiwyg, 'mouseup', function( e )\\n        {\\n            mouseHandler( e );\\n            // Trigger change\\n            if( debounced_changeHandler )\\n                debounced_changeHandler();\\n        });\\n        addEvent( node_wysiwyg, 'dblclick', function( e )\\n        {\\n            mouseHandler( e );\\n        });\\n        addEvent( node_wysiwyg, 'selectionchange',  function( e )\\n        {\\n            mouseHandler( e );\\n        });\\n        if( option_hijackcontextmenu )\\n        {\\n            addEvent( node_wysiwyg, 'contextmenu', function( e )\\n            {\\n                mouseHandler( e, true );\\n                return cancelEvent( e );\\n            });\\n        }\\n\\n\\n        // exec command\\n        // https://developer.mozilla.org/en-US/docs/Web/API/document.execCommand\\n        // http://www.quirksmode.org/dom/execCommand.html\\n        var execCommand = function( command, param, force_selection )\\n        {\\n            // give selection to contenteditable element\\n            restoreSelection( node_wysiwyg, popup_saved_selection );\\n            // tried to avoid forcing focus(), but ... - https://github.com/wysiwygjs/wysiwyg.js/issues/51\\n            node_wysiwyg.focus();\\n            if( ! selectionInside(node_wysiwyg, force_selection) ) // returns 'selection inside editor'\\n                return false;\\n            \\n            // for webkit, mozilla, opera\\n            if( window.getSelection )\\n            {\\n                // Buggy, call within 'try/catch'\\n                try {\\n                    if( document.queryCommandSupported && ! document.queryCommandSupported(command) )\\n                        return false;\\n                    return document.execCommand( command, false, param );\\n                }\\n                catch( e ) {\\n                }\\n            }\\n            // for IE\\n            else if( document.selection )\\n            {\\n                var sel = document.selection;\\n                if( sel.type != 'None' )\\n                {\\n                    var range = sel.createRange();\\n                    // Buggy, call within 'try/catch'\\n                    try {\\n                        if( ! range.queryCommandEnabled(command) )\\n                            return false;\\n                        return range.execCommand( command, false, param );\\n                    }\\n                    catch( e ) {\\n                    }\\n                }\\n            }\\n            return false;\\n        };\\n\\n        // Workaround IE11 - https://github.com/wysiwygjs/wysiwyg.js/issues/14\\n        var trailingDiv = null;\\n        var IEtrailingDIV = function()\\n        {\\n            // Detect IE - http://stackoverflow.com/questions/17907445/how-to-detect-ie11\\n            if( document.all || !!window.MSInputMethodContext )\\n            {\\n                trailingDiv = document.createElement( 'DIV' );\\n                node_wysiwyg.appendChild( trailingDiv );\\n            }\\n        };\\n        // Command structure\\n        callUpdates = function( selection_destroyed )\\n        {\\n            // Remove IE11 workaround\\n            if( trailingDiv )\\n            {\\n                node_wysiwyg.removeChild( trailingDiv );\\n                trailingDiv = null;\\n            }\\n            // change-handler\\n            if( debounced_changeHandler )\\n                debounced_changeHandler();\\n            // handle saved selection\\n            if( selection_destroyed )\\n            {\\n                collapseSelectionEnd();\\n                popup_saved_selection = null; // selection destroyed\\n            }\\n            else if( popup_saved_selection )\\n                popup_saved_selection = saveSelection( node_wysiwyg );\\n        };\\n        return {\\n            // properties\\n            getElement: function()\\n            {\\n                return node_wysiwyg;\\n            },\\n            getHTML: function()\\n            {\\n                return node_wysiwyg.innerHTML;\\n            },\\n            setHTML: function( html )\\n            {\\n                node_wysiwyg.innerHTML = html || '<br>';\\n                callUpdates( true ); // selection destroyed\\n                return this;\\n            },\\n            getSelectedHTML: function()\\n            {\\n                restoreSelection( node_wysiwyg, popup_saved_selection );\\n                if( ! selectionInside(node_wysiwyg) )\\n                    return null;\\n                return getSelectionHtml( node_wysiwyg );\\n            },\\n            sync: function()\\n            {\\n                if( syncTextarea )\\n                    syncTextarea();\\n                return this;\\n            },\\n            readOnly: function( readonly )\\n            {\\n                // query read-only\\n                if( readonly === undefined )\\n                    return node_wysiwyg.hasAttribute ? !node_wysiwyg.hasAttribute('contentEditable') : \\n                                                       !node_wysiwyg.getAttribute('contentEditable'); // IE7\\n                // set read-only\\n                if( readonly )\\n                    node_wysiwyg.removeAttribute( 'contentEditable' );\\n                else\\n                    node_wysiwyg.setAttribute( 'contentEditable', 'true' ); // IE7 is case sensitive\\n                return this;\\n            },\\n            // selection and popup\\n            collapseSelection: function()\\n            {\\n                collapseSelectionEnd();\\n                popup_saved_selection = null; // selection destroyed\\n                return this;\\n            },\\n            expandSelection: function( preceding, following )\\n            {\\n                restoreSelection( node_wysiwyg, popup_saved_selection );\\n                if( ! selectionInside(node_wysiwyg) )\\n                    return this;\\n                expandSelectionCaret( node_wysiwyg, preceding, following );\\n                popup_saved_selection = saveSelection( node_wysiwyg ); // save new selection\\n                return this;\\n            },\\n            openPopup: function()\\n            {\\n                if( ! popup_saved_selection )\\n                    popup_saved_selection = saveSelection( node_wysiwyg ); // save current selection\\n                return popupOpen();\\n            },\\n            closePopup: function()\\n            {\\n                popupClose();\\n                return this;\\n            },\\n            removeFormat: function()\\n            {\\n                execCommand( 'removeFormat' );\\n                execCommand( 'unlink' );\\n                callUpdates();\\n                return this;\\n            },\\n            bold: function()\\n            {\\n                execCommand( 'bold' );\\n                callUpdates();\\n                return this;\\n            },\\n            italic: function()\\n            {\\n                execCommand( 'italic' );\\n                callUpdates();\\n                return this;\\n            },\\n            underline: function()\\n            {\\n                execCommand( 'underline' );\\n                callUpdates();\\n                return this;\\n            },\\n            strikethrough: function()\\n            {\\n                execCommand( 'strikeThrough' );\\n                callUpdates();\\n                return this;\\n            },\\n            forecolor: function( color )\\n            {\\n                execCommand( 'foreColor', color );\\n                callUpdates();\\n                return this;\\n            },\\n            highlight: function( color )\\n            {\\n                // http://stackoverflow.com/questions/2756931/highlight-the-text-of-the-dom-range-element\\n                if( ! execCommand('hiliteColor',color) ) // some browsers apply 'backColor' to the whole block\\n                    execCommand( 'backColor', color );\\n                callUpdates();\\n                return this;\\n            },\\n            fontName: function( name )\\n            {\\n                execCommand( 'fontName', name );\\n                callUpdates();\\n                return this;\\n            },\\n            fontSize: function( size )\\n            {\\n                execCommand( 'fontSize', size );\\n                callUpdates();\\n                return this;\\n            },\\n            subscript: function()\\n            {\\n                execCommand( 'subscript' );\\n                callUpdates();\\n                return this;\\n            },\\n            superscript: function()\\n            {\\n                execCommand( 'superscript' );\\n                callUpdates();\\n                return this;\\n            },\\n            align: function( align )\\n            {\\n                IEtrailingDIV();\\n                if( align == 'left' )\\n                    execCommand( 'justifyLeft' );\\n                else if( align == 'center' )\\n                    execCommand( 'justifyCenter' );\\n                else if( align == 'right' )\\n                    execCommand( 'justifyRight' );\\n                else if( align == 'justify' )\\n                    execCommand( 'justifyFull' );\\n                callUpdates();\\n                return this;\\n            },\\n            format: function( tagname )\\n            {\\n                IEtrailingDIV();\\n                execCommand( 'formatBlock', tagname );\\n                callUpdates();\\n                return this;\\n            },\\n            indent: function( outdent )\\n            {\\n                IEtrailingDIV();\\n                execCommand( outdent ? 'outdent' : 'indent' );\\n                callUpdates();\\n                return this;\\n            },\\n            insertLink: function( url )\\n            {\\n                execCommand( 'createLink', url );\\n                callUpdates( true ); // selection destroyed\\n                return this;\\n            },\\n            insertImage: function( url )\\n            {\\n                execCommand( 'insertImage', url, true );\\n                callUpdates( true ); // selection destroyed\\n                return this;\\n            },\\n            insertHTML: function( html )\\n            {\\n                if( ! execCommand('insertHTML', html, true) )\\n                {\\n                    // IE 11 still does not support 'insertHTML'\\n                    restoreSelection( node_wysiwyg, popup_saved_selection );\\n                    selectionInside( node_wysiwyg, true );\\n                    pasteHtmlAtCaret( node_wysiwyg, html );\\n                }\\n                callUpdates( true ); // selection destroyed\\n                return this;\\n            },\\n            insertList: function( ordered )\\n            {\\n                IEtrailingDIV();\\n                execCommand( ordered ? 'insertOrderedList' : 'insertUnorderedList' );\\n                callUpdates();\\n                return this;\\n            }\\n        };\\n    };\\n\\n    return wysiwyg;\\n});\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/raw-loader!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/~/source-map-loader!/Users/scienceonlineed/Documents/websites/elmsln/core/dslmcode/profiles/cle-7.x-2.x/modules/features/cle_app/app/bower_components/wysiwyg.js/src/wysiwyg.js\n// module id = 836\n// module chunks = 2"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}