<?php
/**
 * @file
 * Code for the CLE App module.
 */

 include_once 'cle_app.features.inc';

/**
 * Implements hook_page_build().
 */
function cle_app_page_build(&$page) {
  // ensure this is at least in scope of the app
  if (arg(0) == 'cle' && arg(1) == 'app') {
    // a little silly looking probably but this allows us to ensure our Angular app can be
    // compiled either into production or development mode and still work correctly either way
    $dh = opendir(DRUPAL_ROOT . '/' . drupal_get_path('module', 'cle_app') . '/app/dist');
    $items = array();
    // open directory and walk through the filenames
    while ($file = readdir($dh)) {
      // skip directory iterators
      if ($file != "." && $file != "..") {
        // preg match for files patterned as styles/inline/scripts/vendor/main.hashvalue/or/not.bundle.css/js
        if (preg_match('#^(styles|inline|scripts|vendor|main)\.*\.[^\s]+(\.(js|css))#', $file)) {
          // figure out the file info so we can order them afterwards
          $tmp = explode('.', $file);
          $tmp_name = array_shift($tmp);
          $tmp_cache_string = array_shift($tmp);
          $tmp_bundle = array_shift($tmp);
          $tmp_file_type = array_shift($tmp);
          // compression optional so will either be 'gz' or NULL
          $tmp_compression = array_shift($tmp);
          // we just want the files that are not compressed so drupal can handle the compression
          // we are going to categorize them by file type and name
          if (is_null($tmp_compression)) {
            $items[$tmp_file_type][$tmp_name] = drupal_get_path('module', 'cle_app') . '/app/dist/' . $file;
          }
        }
      }
    }

    // specify the loading order of the file names
    $keys = array('styles', 'inline','scripts','vendor','main');
    foreach ($items as $file_type => $files) {
      foreach ($keys as $id => $key){
        if (isset($files[$key])) {
          if ($file_type == 'css') {
            drupal_add_css($files[$key]);
          }
          elseif ($file_type == 'js') {
            drupal_add_js($files[$key], array('scope' => 'footer', 'weight' => 1000 + $id));
          }
        }
      }
    }
  }
}

/*
 * Preprocesses the wrapping HTML.
 *
 * @param array &$variables
 *   Template variables.
 */
function cle_app_preprocess_html(&$vars) {
  global $base_url;
  $current_path = current_path();
  // if we are on the cle critique app route then we need to add a base tag to
  // ensure that angular works properly.
  if (preg_match('/^cle\/app/', $current_path)) {
    // Setup IE meta tag to force IE rendering mode
    $base_tag = array(
      '#type' => 'html_tag',
      '#tag' => 'base',
      '#attributes' => array(
        'href' =>  $base_url . '/cle/app',
      )
    );

    // Add header meta tag for IE to head
    drupal_add_html_head($base_tag, 'base_tag');
  }
}

/**
 * Implements hook_menu().
 */
function cle_app_menu() {
  $items['cle'] = array(
    'title' => 'Assignments',
    'page callback' => '_cle_app_redirect',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'weight' => -10,
  );
  $items['cle/app'] = array(
    'title' => 'Assignments',
    'page callback' => '_cle_app_redirect',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'weight' => -10,
  );
  $items['cle/app/projects'] = array(
    'title' => 'Assignments',
    'page callback' => '_cle_app_page_critique_app',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-elmsln-navigation',
    'weight' => -10,
  );
  $items['cle/app/%'] = array(
    'title' => 'Assignments',
    'page callback' => '_cle_app_page_critique_app',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'weight' => -10,
  );
  return $items;
}

/**
 * Simple callback to avoid argument issues w/ drupal_goto in menu router
 */
function _cle_app_redirect() {
  drupal_goto('cle/app/projects');
}

/**
 * Page callback for cle/app
 */
function _cle_app_page_critique_app() {
  return '<app-root> <div class="progress"> <div class="indeterminate"></div> </div></app-root>';
}
